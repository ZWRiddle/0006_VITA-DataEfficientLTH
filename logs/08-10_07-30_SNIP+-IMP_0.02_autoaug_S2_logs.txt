
---- experiment configuration ----
 * mode => IMP
 * dist => False
 * seed => 66
 * dset => cifar10
 * contrast_aug => False
 * color_jitter_strength => 0.5
 * color_jitter_prob => 0.8
 * gray_prob => 0.2
 * rand_aug => False
 * n_rand_aug => 4
 * auto_aug => True
 * auto_aug_policy => 2
 * custom_aug => False
 * blur => False
 * blur_sigma => [0.1, 2]
 * blur_prob => 0.5
 * cutout => False
 * cut_len => 16
 * data_root => data/
 * data_size => 1.0
 * data_size_2 => 0.02
 * long_tailed => False
 * long_tailed_type => exp
 * long_tailed_factor => 0.01
 * batch_size => 100
 * n_workers => 4
 * net => resnet18
 * in_planes => 64
 * pretrained => False
 * optim => sgd
 * lr => 0.1
 * momentum => 0.9
 * weight_decay => 0.0005
 * warmup_epochs => 0
 * lr_sched => cosine
 * multi_step_milestones => [100, 150]
 * multi_step_gamma => 0.1
 * resume => False
 * out_dir => checkpoints/08-10_07-30_SNIP+-IMP_0.02_autoaug_S2
 * load_dir => checkpoints/_SNIP+-IMP_1_autoaug
 * pruning_iters => 20
 * epochs => 160
 * rewind_type => epoch
 * rewind_epoch => 2
 * prune_type => l1
 * prune_strategy => SNIP+
 * prune_rate => 0.2
 * load_ticket => 
 * adv_prop => False
 * cos_criterion => False
 * cos_linear => False
 * tvmf_linear => False
 * attack_n_iter => 1
 * attack_eps => 0.03137254901960784
 * attack_step_size => 0.00784313725490196
 * prune_ff_only => False
----------------------------------

setting up device, distributed = False
 | cuda:0
Files already downloaded and verified
Files already downloaded and verified

------------------------ Checkpoint 1  ------------------------

2024-08-10 07:30:11.156170
setting up dataset, train: 50000, val: 10000
setting up dataset_2, train: 1000, val: 10000

starting training from scratch

------------------------ Checkpoint 2  ------------------------

2024-08-10 07:30:12.189701

prune_rate = 0.2, iters = 20, final_sparsity = 0.9884707849539315.

Initialize by SNIP+
layer-wise sparsity is [0.0005787037037037037, 0.00037977430555555556, 0.0007595486111111111, 0.0007866753472222222, 0.0007595486111111111, 0.0010579427083333333, 0.00189208984375, 0.000244140625, 0.0019463433159722222, 0.0024278428819444445, 0.003302680121527778, 0.005184597439236111, 0.0015869140625, 0.005527072482638889, 0.006074693467881944, 0.0089111328125, 0.013252682156032987, 0.0035858154296875, 0.014728122287326388, 0.016822391086154513, 0.0]
Layerwise Density after patching:  [0.2, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.2, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.005184597439236111, 0.01152921504606852, 0.005527072482638889, 0.006074693467881944, 0.0089111328125, 0.013252682156032987, 0.01152921504606852, 0.014728122287326388, 0.016822391086154513, 0.0]

------------------------ Checkpoint 3  ------------------------
pruning state: 0
remaining weight at start of iteration =  100.0
iteration: 0, epoch: 0, best train: 0, best val: 0, lr: 0.1
iteration: 0, epoch: 1, best train: 0.107, best val: 0.1, lr: 0.09999
iteration: 0, epoch: 2, best train: 0.107, best val: 0.1015, lr: 0.09996
iteration: 0, epoch: 3, best train: 0.107, best val: 0.1015, lr: 0.09991
iteration: 0, epoch: 4, best train: 0.107, best val: 0.1127, lr: 0.09985
iteration: 0, epoch: 5, best train: 0.132, best val: 0.1316, lr: 0.09976
iteration: 0, epoch: 6, best train: 0.132, best val: 0.1518, lr: 0.09965
iteration: 0, epoch: 7, best train: 0.132, best val: 0.1802, lr: 0.09953
iteration: 0, epoch: 8, best train: 0.147, best val: 0.1802, lr: 0.09938
iteration: 0, epoch: 9, best train: 0.147, best val: 0.1802, lr: 0.09922
iteration: 0, epoch: 10, best train: 0.147, best val: 0.1887, lr: 0.09904
iteration: 0, epoch: 11, best train: 0.147, best val: 0.1887, lr: 0.09884
iteration: 0, epoch: 12, best train: 0.168, best val: 0.2023, lr: 0.09862
iteration: 0, epoch: 13, best train: 0.168, best val: 0.2023, lr: 0.09838
iteration: 0, epoch: 14, best train: 0.181, best val: 0.2269, lr: 0.09812
iteration: 0, epoch: 15, best train: 0.181, best val: 0.2489, lr: 0.09785
iteration: 0, epoch: 16, best train: 0.186, best val: 0.2489, lr: 0.09755
iteration: 0, epoch: 17, best train: 0.188, best val: 0.2489, lr: 0.09724
iteration: 0, epoch: 18, best train: 0.19, best val: 0.2489, lr: 0.09691
iteration: 0, epoch: 19, best train: 0.19, best val: 0.2489, lr: 0.09656
iteration: 0, epoch: 20, best train: 0.22, best val: 0.2745, lr: 0.09619
iteration: 0, epoch: 21, best train: 0.22, best val: 0.2745, lr: 0.09581
iteration: 0, epoch: 22, best train: 0.22, best val: 0.2878, lr: 0.09541
iteration: 0, epoch: 23, best train: 0.22, best val: 0.2878, lr: 0.09499
iteration: 0, epoch: 24, best train: 0.22, best val: 0.2878, lr: 0.09455
iteration: 0, epoch: 25, best train: 0.222, best val: 0.2878, lr: 0.0941
iteration: 0, epoch: 26, best train: 0.25, best val: 0.2878, lr: 0.09362
iteration: 0, epoch: 27, best train: 0.25, best val: 0.3304, lr: 0.09314
iteration: 0, epoch: 28, best train: 0.25, best val: 0.3304, lr: 0.09263
iteration: 0, epoch: 29, best train: 0.254, best val: 0.3304, lr: 0.09211
iteration: 0, epoch: 30, best train: 0.254, best val: 0.3304, lr: 0.09157
iteration: 0, epoch: 31, best train: 0.254, best val: 0.3304, lr: 0.09102
iteration: 0, epoch: 32, best train: 0.255, best val: 0.3304, lr: 0.09045
iteration: 0, epoch: 33, best train: 0.281, best val: 0.3304, lr: 0.08987
iteration: 0, epoch: 34, best train: 0.281, best val: 0.3304, lr: 0.08927
iteration: 0, epoch: 35, best train: 0.281, best val: 0.3304, lr: 0.08865
iteration: 0, epoch: 36, best train: 0.281, best val: 0.3304, lr: 0.08802
iteration: 0, epoch: 37, best train: 0.287, best val: 0.3304, lr: 0.08738
iteration: 0, epoch: 38, best train: 0.287, best val: 0.3304, lr: 0.08672
iteration: 0, epoch: 39, best train: 0.287, best val: 0.3422, lr: 0.08604
iteration: 0, epoch: 40, best train: 0.287, best val: 0.3422, lr: 0.08536
iteration: 0, epoch: 41, best train: 0.287, best val: 0.3565, lr: 0.08465
iteration: 0, epoch: 42, best train: 0.287, best val: 0.3565, lr: 0.08394
iteration: 0, epoch: 43, best train: 0.296, best val: 0.3565, lr: 0.08321
iteration: 0, epoch: 44, best train: 0.296, best val: 0.3565, lr: 0.08247
iteration: 0, epoch: 45, best train: 0.317, best val: 0.3565, lr: 0.08172
iteration: 0, epoch: 46, best train: 0.317, best val: 0.3565, lr: 0.08095
iteration: 0, epoch: 47, best train: 0.317, best val: 0.3565, lr: 0.08018
iteration: 0, epoch: 48, best train: 0.317, best val: 0.3621, lr: 0.07939
iteration: 0, epoch: 49, best train: 0.319, best val: 0.3621, lr: 0.07859
iteration: 0, epoch: 50, best train: 0.319, best val: 0.3621, lr: 0.07778
iteration: 0, epoch: 51, best train: 0.328, best val: 0.3705, lr: 0.07696
iteration: 0, epoch: 52, best train: 0.328, best val: 0.3705, lr: 0.07612
iteration: 0, epoch: 53, best train: 0.328, best val: 0.3705, lr: 0.07528
iteration: 0, epoch: 54, best train: 0.328, best val: 0.3823, lr: 0.07443
iteration: 0, epoch: 55, best train: 0.342, best val: 0.3823, lr: 0.07357
iteration: 0, epoch: 56, best train: 0.342, best val: 0.3823, lr: 0.0727
iteration: 0, epoch: 57, best train: 0.352, best val: 0.3823, lr: 0.07182
iteration: 0, epoch: 58, best train: 0.352, best val: 0.3823, lr: 0.07093
iteration: 0, epoch: 59, best train: 0.352, best val: 0.3921, lr: 0.07004
iteration: 0, epoch: 60, best train: 0.352, best val: 0.3921, lr: 0.06913
iteration: 0, epoch: 61, best train: 0.352, best val: 0.3965, lr: 0.06822
iteration: 0, epoch: 62, best train: 0.36, best val: 0.4034, lr: 0.06731
iteration: 0, epoch: 63, best train: 0.36, best val: 0.4034, lr: 0.06638
iteration: 0, epoch: 64, best train: 0.36, best val: 0.4034, lr: 0.06545
iteration: 0, epoch: 65, best train: 0.362, best val: 0.4081, lr: 0.06451
iteration: 0, epoch: 66, best train: 0.362, best val: 0.4081, lr: 0.06357
iteration: 0, epoch: 67, best train: 0.362, best val: 0.4081, lr: 0.06262
iteration: 0, epoch: 68, best train: 0.387, best val: 0.415, lr: 0.06167
iteration: 0, epoch: 69, best train: 0.387, best val: 0.415, lr: 0.06072
iteration: 0, epoch: 70, best train: 0.387, best val: 0.415, lr: 0.05975
iteration: 0, epoch: 71, best train: 0.387, best val: 0.4155, lr: 0.05879
iteration: 0, epoch: 72, best train: 0.392, best val: 0.4188, lr: 0.05782
iteration: 0, epoch: 73, best train: 0.411, best val: 0.4188, lr: 0.05685
iteration: 0, epoch: 74, best train: 0.411, best val: 0.4188, lr: 0.05588
iteration: 0, epoch: 75, best train: 0.411, best val: 0.4188, lr: 0.0549
iteration: 0, epoch: 76, best train: 0.43, best val: 0.4188, lr: 0.05392
iteration: 0, epoch: 77, best train: 0.43, best val: 0.4188, lr: 0.05294
iteration: 0, epoch: 78, best train: 0.43, best val: 0.4212, lr: 0.05196
iteration: 0, epoch: 79, best train: 0.43, best val: 0.4379, lr: 0.05098
iteration: 0, epoch: 80, best train: 0.434, best val: 0.4379, lr: 0.05
iteration: 0, epoch: 81, best train: 0.434, best val: 0.4379, lr: 0.04902
iteration: 0, epoch: 82, best train: 0.434, best val: 0.4379, lr: 0.04804
iteration: 0, epoch: 83, best train: 0.438, best val: 0.4379, lr: 0.04706
iteration: 0, epoch: 84, best train: 0.455, best val: 0.4379, lr: 0.04608
iteration: 0, epoch: 85, best train: 0.465, best val: 0.4379, lr: 0.0451
iteration: 0, epoch: 86, best train: 0.465, best val: 0.4424, lr: 0.04412
iteration: 0, epoch: 87, best train: 0.492, best val: 0.4424, lr: 0.04315
iteration: 0, epoch: 88, best train: 0.492, best val: 0.4424, lr: 0.04218
iteration: 0, epoch: 89, best train: 0.492, best val: 0.4424, lr: 0.04121
iteration: 0, epoch: 90, best train: 0.492, best val: 0.4465, lr: 0.04025
iteration: 0, epoch: 91, best train: 0.492, best val: 0.4663, lr: 0.03928
iteration: 0, epoch: 92, best train: 0.492, best val: 0.4663, lr: 0.03833
iteration: 0, epoch: 93, best train: 0.502, best val: 0.4663, lr: 0.03738
iteration: 0, epoch: 94, best train: 0.502, best val: 0.4663, lr: 0.03643
iteration: 0, epoch: 95, best train: 0.502, best val: 0.4762, lr: 0.03549
iteration: 0, epoch: 96, best train: 0.502, best val: 0.4762, lr: 0.03455
iteration: 0, epoch: 97, best train: 0.502, best val: 0.4762, lr: 0.03362
iteration: 0, epoch: 98, best train: 0.509, best val: 0.4926, lr: 0.03269
iteration: 0, epoch: 99, best train: 0.525, best val: 0.4926, lr: 0.03178
iteration: 0, epoch: 100, best train: 0.525, best val: 0.4926, lr: 0.03087
iteration: 0, epoch: 101, best train: 0.525, best val: 0.4926, lr: 0.02996
iteration: 0, epoch: 102, best train: 0.546, best val: 0.4926, lr: 0.02907
iteration: 0, epoch: 103, best train: 0.551, best val: 0.4926, lr: 0.02818
iteration: 0, epoch: 104, best train: 0.551, best val: 0.4962, lr: 0.0273
iteration: 0, epoch: 105, best train: 0.551, best val: 0.4962, lr: 0.02643
iteration: 0, epoch: 106, best train: 0.554, best val: 0.5024, lr: 0.02557
iteration: 0, epoch: 107, best train: 0.561, best val: 0.5109, lr: 0.02472
iteration: 0, epoch: 108, best train: 0.565, best val: 0.5109, lr: 0.02388
iteration: 0, epoch: 109, best train: 0.591, best val: 0.5109, lr: 0.02304
iteration: 0, epoch: 110, best train: 0.591, best val: 0.5109, lr: 0.02222
iteration: 0, epoch: 111, best train: 0.591, best val: 0.5109, lr: 0.02141
iteration: 0, epoch: 112, best train: 0.616, best val: 0.5109, lr: 0.02061
iteration: 0, epoch: 113, best train: 0.617, best val: 0.5197, lr: 0.01982
iteration: 0, epoch: 114, best train: 0.617, best val: 0.5197, lr: 0.01905
iteration: 0, epoch: 115, best train: 0.617, best val: 0.5197, lr: 0.01828
iteration: 0, epoch: 116, best train: 0.627, best val: 0.5197, lr: 0.01753
iteration: 0, epoch: 117, best train: 0.627, best val: 0.5228, lr: 0.01679
iteration: 0, epoch: 118, best train: 0.63, best val: 0.5228, lr: 0.01606
iteration: 0, epoch: 119, best train: 0.64, best val: 0.5228, lr: 0.01535
iteration: 0, epoch: 120, best train: 0.64, best val: 0.5228, lr: 0.01464
iteration: 0, epoch: 121, best train: 0.65, best val: 0.5303, lr: 0.01396
iteration: 0, epoch: 122, best train: 0.65, best val: 0.5303, lr: 0.01328
iteration: 0, epoch: 123, best train: 0.65, best val: 0.5353, lr: 0.01262
iteration: 0, epoch: 124, best train: 0.663, best val: 0.5353, lr: 0.01198
iteration: 0, epoch: 125, best train: 0.663, best val: 0.5369, lr: 0.01135
iteration: 0, epoch: 126, best train: 0.693, best val: 0.5369, lr: 0.01073
iteration: 0, epoch: 127, best train: 0.693, best val: 0.5513, lr: 0.01013
iteration: 0, epoch: 128, best train: 0.693, best val: 0.5513, lr: 0.00955
iteration: 0, epoch: 129, best train: 0.703, best val: 0.5513, lr: 0.00898
iteration: 0, epoch: 130, best train: 0.703, best val: 0.5532, lr: 0.00843
iteration: 0, epoch: 131, best train: 0.703, best val: 0.5532, lr: 0.00789
iteration: 0, epoch: 132, best train: 0.703, best val: 0.5532, lr: 0.00737
iteration: 0, epoch: 133, best train: 0.703, best val: 0.5555, lr: 0.00686
iteration: 0, epoch: 134, best train: 0.725, best val: 0.5555, lr: 0.00638
iteration: 0, epoch: 135, best train: 0.725, best val: 0.5555, lr: 0.0059
iteration: 0, epoch: 136, best train: 0.725, best val: 0.557, lr: 0.00545
iteration: 0, epoch: 137, best train: 0.736, best val: 0.5601, lr: 0.00501
iteration: 0, epoch: 138, best train: 0.736, best val: 0.5601, lr: 0.00459
iteration: 0, epoch: 139, best train: 0.736, best val: 0.5631, lr: 0.00419
iteration: 0, epoch: 140, best train: 0.737, best val: 0.5631, lr: 0.00381
iteration: 0, epoch: 141, best train: 0.759, best val: 0.5631, lr: 0.00344
iteration: 0, epoch: 142, best train: 0.759, best val: 0.5631, lr: 0.00309
iteration: 0, epoch: 143, best train: 0.759, best val: 0.5631, lr: 0.00276
iteration: 0, epoch: 144, best train: 0.759, best val: 0.5631, lr: 0.00245
iteration: 0, epoch: 145, best train: 0.759, best val: 0.5631, lr: 0.00215
iteration: 0, epoch: 146, best train: 0.759, best val: 0.5631, lr: 0.00188
iteration: 0, epoch: 147, best train: 0.759, best val: 0.5631, lr: 0.00162
iteration: 0, epoch: 148, best train: 0.759, best val: 0.5631, lr: 0.00138
iteration: 0, epoch: 149, best train: 0.759, best val: 0.5631, lr: 0.00116
iteration: 0, epoch: 150, best train: 0.759, best val: 0.5631, lr: 0.00096
iteration: 0, epoch: 151, best train: 0.766, best val: 0.5631, lr: 0.00078
iteration: 0, epoch: 152, best train: 0.766, best val: 0.5647, lr: 0.00062
iteration: 0, epoch: 153, best train: 0.766, best val: 0.5647, lr: 0.00047
iteration: 0, epoch: 154, best train: 0.772, best val: 0.5647, lr: 0.00035
iteration: 0, epoch: 155, best train: 0.772, best val: 0.5648, lr: 0.00024
iteration: 0, epoch: 156, best train: 0.784, best val: 0.5675, lr: 0.00015
iteration: 0, epoch: 157, best train: 0.784, best val: 0.5675, lr: 9e-05
iteration: 0, epoch: 158, best train: 0.784, best val: 0.5675, lr: 4e-05
iteration: 0, epoch: 159, best train: 0.784, best val: 0.5675, lr: 1e-05
------------------------ Checkpoint 4  ------------------------
pre_conv.0.weight_mask 	|	active =  1594 	|	total =  1728 	|	layerwise sparsity =  0.9224537037037037
layer1.0.conv1.weight_mask 	|	active =  29491 	|	total =  36864 	|	layerwise sparsity =  0.7999945746527778
layer1.0.conv2.weight_mask 	|	active =  29491 	|	total =  36864 	|	layerwise sparsity =  0.7999945746527778
layer1.1.conv1.weight_mask 	|	active =  29491 	|	total =  36864 	|	layerwise sparsity =  0.7999945746527778
layer1.1.conv2.weight_mask 	|	active =  29491 	|	total =  36864 	|	layerwise sparsity =  0.7999945746527778
layer2.0.conv1.weight_mask 	|	active =  58982 	|	total =  73728 	|	layerwise sparsity =  0.7999945746527778
layer2.0.conv2.weight_mask 	|	active =  117965 	|	total =  147456 	|	layerwise sparsity =  0.8000013563368056
layer2.0.shortcut.0.weight_mask 	|	active =  7559 	|	total =  8192 	|	layerwise sparsity =  0.9227294921875
layer2.1.conv1.weight_mask 	|	active =  117965 	|	total =  147456 	|	layerwise sparsity =  0.8000013563368056
layer2.1.conv2.weight_mask 	|	active =  117965 	|	total =  147456 	|	layerwise sparsity =  0.8000013563368056
layer3.0.conv1.weight_mask 	|	active =  235930 	|	total =  294912 	|	layerwise sparsity =  0.8000013563368056
layer3.0.conv2.weight_mask 	|	active =  453376 	|	total =  589824 	|	layerwise sparsity =  0.7686631944444444
layer3.0.shortcut.0.weight_mask 	|	active =  26214 	|	total =  32768 	|	layerwise sparsity =  0.79998779296875
layer3.1.conv1.weight_mask 	|	active =  454828 	|	total =  589824 	|	layerwise sparsity =  0.7711249457465278
layer3.1.conv2.weight_mask 	|	active =  456982 	|	total =  589824 	|	layerwise sparsity =  0.7747768825954862
layer4.0.conv1.weight_mask 	|	active =  931642 	|	total =  1179648 	|	layerwise sparsity =  0.7897627088758681
layer4.0.conv2.weight_mask 	|	active =  1900630 	|	total =  2359296 	|	layerwise sparsity =  0.8055920071072049
layer4.0.shortcut.0.weight_mask 	|	active =  104858 	|	total =  131072 	|	layerwise sparsity =  0.8000030517578125
layer4.1.conv1.weight_mask 	|	active =  1910688 	|	total =  2359296 	|	layerwise sparsity =  0.8098551432291666
layer4.1.conv2.weight_mask 	|	active =  1923432 	|	total =  2359296 	|	layerwise sparsity =  0.8152567545572916
------------------------ Checkpoint 5  ------------------------
best_val =  0.5675
------------------------ Checkpoint 6  ------------------------
pruning state: 1
remaining weight at start of iteration =  80.1002613799946
iteration: 1, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 1, epoch: 1, best train: 0.114, best val: 0.1156, lr: 0.09991
iteration: 1, epoch: 2, best train: 0.133, best val: 0.1156, lr: 0.09985
iteration: 1, epoch: 3, best train: 0.133, best val: 0.1697, lr: 0.09976
iteration: 1, epoch: 4, best train: 0.17, best val: 0.1805, lr: 0.09965
iteration: 1, epoch: 5, best train: 0.17, best val: 0.1805, lr: 0.09953
iteration: 1, epoch: 6, best train: 0.17, best val: 0.2063, lr: 0.09938
iteration: 1, epoch: 7, best train: 0.171, best val: 0.2063, lr: 0.09922
iteration: 1, epoch: 8, best train: 0.174, best val: 0.2063, lr: 0.09904
iteration: 1, epoch: 9, best train: 0.192, best val: 0.242, lr: 0.09884
iteration: 1, epoch: 10, best train: 0.192, best val: 0.242, lr: 0.09862
iteration: 1, epoch: 11, best train: 0.199, best val: 0.2499, lr: 0.09838
iteration: 1, epoch: 12, best train: 0.202, best val: 0.2499, lr: 0.09812
iteration: 1, epoch: 13, best train: 0.209, best val: 0.2708, lr: 0.09785
iteration: 1, epoch: 14, best train: 0.244, best val: 0.2708, lr: 0.09755
iteration: 1, epoch: 15, best train: 0.244, best val: 0.2804, lr: 0.09724
iteration: 1, epoch: 16, best train: 0.244, best val: 0.2804, lr: 0.09691
iteration: 1, epoch: 17, best train: 0.244, best val: 0.2949, lr: 0.09656
iteration: 1, epoch: 18, best train: 0.26, best val: 0.2983, lr: 0.09619
iteration: 1, epoch: 19, best train: 0.26, best val: 0.2983, lr: 0.09581
iteration: 1, epoch: 20, best train: 0.26, best val: 0.3166, lr: 0.09541
iteration: 1, epoch: 21, best train: 0.291, best val: 0.3333, lr: 0.09499
iteration: 1, epoch: 22, best train: 0.291, best val: 0.3333, lr: 0.09455
iteration: 1, epoch: 23, best train: 0.291, best val: 0.3333, lr: 0.0941
iteration: 1, epoch: 24, best train: 0.291, best val: 0.3333, lr: 0.09362
iteration: 1, epoch: 25, best train: 0.291, best val: 0.3333, lr: 0.09314
iteration: 1, epoch: 26, best train: 0.291, best val: 0.376, lr: 0.09263
iteration: 1, epoch: 27, best train: 0.319, best val: 0.376, lr: 0.09211
iteration: 1, epoch: 28, best train: 0.319, best val: 0.376, lr: 0.09157
iteration: 1, epoch: 29, best train: 0.323, best val: 0.376, lr: 0.09102
iteration: 1, epoch: 30, best train: 0.323, best val: 0.376, lr: 0.09045
iteration: 1, epoch: 31, best train: 0.323, best val: 0.376, lr: 0.08987
iteration: 1, epoch: 32, best train: 0.323, best val: 0.376, lr: 0.08927
iteration: 1, epoch: 33, best train: 0.323, best val: 0.376, lr: 0.08865
iteration: 1, epoch: 34, best train: 0.329, best val: 0.376, lr: 0.08802
iteration: 1, epoch: 35, best train: 0.333, best val: 0.376, lr: 0.08738
iteration: 1, epoch: 36, best train: 0.345, best val: 0.3784, lr: 0.08672
iteration: 1, epoch: 37, best train: 0.345, best val: 0.3784, lr: 0.08604
iteration: 1, epoch: 38, best train: 0.345, best val: 0.3843, lr: 0.08536
iteration: 1, epoch: 39, best train: 0.352, best val: 0.3843, lr: 0.08465
iteration: 1, epoch: 40, best train: 0.392, best val: 0.3998, lr: 0.08394
iteration: 1, epoch: 41, best train: 0.392, best val: 0.3998, lr: 0.08321
iteration: 1, epoch: 42, best train: 0.392, best val: 0.3998, lr: 0.08247
iteration: 1, epoch: 43, best train: 0.392, best val: 0.3998, lr: 0.08172
iteration: 1, epoch: 44, best train: 0.392, best val: 0.3998, lr: 0.08095
iteration: 1, epoch: 45, best train: 0.392, best val: 0.4189, lr: 0.08018
iteration: 1, epoch: 46, best train: 0.402, best val: 0.4189, lr: 0.07939
iteration: 1, epoch: 47, best train: 0.402, best val: 0.4192, lr: 0.07859
iteration: 1, epoch: 48, best train: 0.402, best val: 0.4192, lr: 0.07778
iteration: 1, epoch: 49, best train: 0.402, best val: 0.4192, lr: 0.07696
iteration: 1, epoch: 50, best train: 0.408, best val: 0.4192, lr: 0.07612
iteration: 1, epoch: 51, best train: 0.408, best val: 0.4192, lr: 0.07528
iteration: 1, epoch: 52, best train: 0.408, best val: 0.4198, lr: 0.07443
iteration: 1, epoch: 53, best train: 0.408, best val: 0.4198, lr: 0.07357
iteration: 1, epoch: 54, best train: 0.42, best val: 0.4198, lr: 0.0727
iteration: 1, epoch: 55, best train: 0.424, best val: 0.4198, lr: 0.07182
iteration: 1, epoch: 56, best train: 0.429, best val: 0.4395, lr: 0.07093
iteration: 1, epoch: 57, best train: 0.429, best val: 0.4483, lr: 0.07004
iteration: 1, epoch: 58, best train: 0.448, best val: 0.4483, lr: 0.06913
iteration: 1, epoch: 59, best train: 0.474, best val: 0.4483, lr: 0.06822
iteration: 1, epoch: 60, best train: 0.474, best val: 0.4559, lr: 0.06731
iteration: 1, epoch: 61, best train: 0.474, best val: 0.4559, lr: 0.06638
iteration: 1, epoch: 62, best train: 0.474, best val: 0.4611, lr: 0.06545
iteration: 1, epoch: 63, best train: 0.474, best val: 0.4611, lr: 0.06451
iteration: 1, epoch: 64, best train: 0.485, best val: 0.4611, lr: 0.06357
iteration: 1, epoch: 65, best train: 0.485, best val: 0.4686, lr: 0.06262
iteration: 1, epoch: 66, best train: 0.495, best val: 0.4737, lr: 0.06167
iteration: 1, epoch: 67, best train: 0.495, best val: 0.4737, lr: 0.06072
iteration: 1, epoch: 68, best train: 0.495, best val: 0.4816, lr: 0.05975
iteration: 1, epoch: 69, best train: 0.513, best val: 0.4929, lr: 0.05879
iteration: 1, epoch: 70, best train: 0.513, best val: 0.4929, lr: 0.05782
iteration: 1, epoch: 71, best train: 0.513, best val: 0.4929, lr: 0.05685
iteration: 1, epoch: 72, best train: 0.539, best val: 0.4955, lr: 0.05588
iteration: 1, epoch: 73, best train: 0.559, best val: 0.4955, lr: 0.0549
iteration: 1, epoch: 74, best train: 0.559, best val: 0.4955, lr: 0.05392
iteration: 1, epoch: 75, best train: 0.559, best val: 0.4955, lr: 0.05294
iteration: 1, epoch: 76, best train: 0.579, best val: 0.4955, lr: 0.05196
iteration: 1, epoch: 77, best train: 0.579, best val: 0.4962, lr: 0.05098
iteration: 1, epoch: 78, best train: 0.579, best val: 0.4962, lr: 0.05
iteration: 1, epoch: 79, best train: 0.579, best val: 0.5026, lr: 0.04902
iteration: 1, epoch: 80, best train: 0.579, best val: 0.5026, lr: 0.04804
iteration: 1, epoch: 81, best train: 0.579, best val: 0.5026, lr: 0.04706
iteration: 1, epoch: 82, best train: 0.585, best val: 0.5116, lr: 0.04608
iteration: 1, epoch: 83, best train: 0.585, best val: 0.5116, lr: 0.0451
iteration: 1, epoch: 84, best train: 0.586, best val: 0.5208, lr: 0.04412
iteration: 1, epoch: 85, best train: 0.586, best val: 0.5208, lr: 0.04315
iteration: 1, epoch: 86, best train: 0.586, best val: 0.5208, lr: 0.04218
iteration: 1, epoch: 87, best train: 0.601, best val: 0.5208, lr: 0.04121
iteration: 1, epoch: 88, best train: 0.601, best val: 0.5208, lr: 0.04025
iteration: 1, epoch: 89, best train: 0.617, best val: 0.5258, lr: 0.03928
iteration: 1, epoch: 90, best train: 0.619, best val: 0.5258, lr: 0.03833
iteration: 1, epoch: 91, best train: 0.619, best val: 0.5258, lr: 0.03738
iteration: 1, epoch: 92, best train: 0.645, best val: 0.531, lr: 0.03643
iteration: 1, epoch: 93, best train: 0.656, best val: 0.531, lr: 0.03549
iteration: 1, epoch: 94, best train: 0.656, best val: 0.531, lr: 0.03455
iteration: 1, epoch: 95, best train: 0.656, best val: 0.531, lr: 0.03362
iteration: 1, epoch: 96, best train: 0.656, best val: 0.531, lr: 0.03269
iteration: 1, epoch: 97, best train: 0.656, best val: 0.5356, lr: 0.03178
iteration: 1, epoch: 98, best train: 0.668, best val: 0.5542, lr: 0.03087
iteration: 1, epoch: 99, best train: 0.681, best val: 0.5542, lr: 0.02996
iteration: 1, epoch: 100, best train: 0.681, best val: 0.5542, lr: 0.02907
iteration: 1, epoch: 101, best train: 0.681, best val: 0.5542, lr: 0.02818
iteration: 1, epoch: 102, best train: 0.681, best val: 0.5542, lr: 0.0273
iteration: 1, epoch: 103, best train: 0.682, best val: 0.5542, lr: 0.02643
iteration: 1, epoch: 104, best train: 0.682, best val: 0.5542, lr: 0.02557
iteration: 1, epoch: 105, best train: 0.712, best val: 0.5542, lr: 0.02472
iteration: 1, epoch: 106, best train: 0.718, best val: 0.5542, lr: 0.02388
iteration: 1, epoch: 107, best train: 0.718, best val: 0.5651, lr: 0.02304
iteration: 1, epoch: 108, best train: 0.718, best val: 0.5651, lr: 0.02222
iteration: 1, epoch: 109, best train: 0.718, best val: 0.5651, lr: 0.02141
iteration: 1, epoch: 110, best train: 0.718, best val: 0.5651, lr: 0.02061
iteration: 1, epoch: 111, best train: 0.721, best val: 0.5651, lr: 0.01982
iteration: 1, epoch: 112, best train: 0.721, best val: 0.5676, lr: 0.01905
iteration: 1, epoch: 113, best train: 0.74, best val: 0.5676, lr: 0.01828
iteration: 1, epoch: 114, best train: 0.74, best val: 0.5676, lr: 0.01753
iteration: 1, epoch: 115, best train: 0.746, best val: 0.5676, lr: 0.01679
iteration: 1, epoch: 116, best train: 0.77, best val: 0.5676, lr: 0.01606
iteration: 1, epoch: 117, best train: 0.77, best val: 0.5676, lr: 0.01535
iteration: 1, epoch: 118, best train: 0.77, best val: 0.5676, lr: 0.01464
iteration: 1, epoch: 119, best train: 0.782, best val: 0.5686, lr: 0.01396
iteration: 1, epoch: 120, best train: 0.782, best val: 0.5686, lr: 0.01328
iteration: 1, epoch: 121, best train: 0.782, best val: 0.5721, lr: 0.01262
iteration: 1, epoch: 122, best train: 0.782, best val: 0.5728, lr: 0.01198
iteration: 1, epoch: 123, best train: 0.785, best val: 0.5728, lr: 0.01135
iteration: 1, epoch: 124, best train: 0.785, best val: 0.5728, lr: 0.01073
iteration: 1, epoch: 125, best train: 0.785, best val: 0.5833, lr: 0.01013
iteration: 1, epoch: 126, best train: 0.785, best val: 0.5833, lr: 0.00955
iteration: 1, epoch: 127, best train: 0.785, best val: 0.5833, lr: 0.00898
iteration: 1, epoch: 128, best train: 0.785, best val: 0.5862, lr: 0.00843
iteration: 1, epoch: 129, best train: 0.826, best val: 0.5862, lr: 0.00789
iteration: 1, epoch: 130, best train: 0.826, best val: 0.5862, lr: 0.00737
iteration: 1, epoch: 131, best train: 0.826, best val: 0.5862, lr: 0.00686
iteration: 1, epoch: 132, best train: 0.827, best val: 0.5862, lr: 0.00638
iteration: 1, epoch: 133, best train: 0.827, best val: 0.5862, lr: 0.0059
iteration: 1, epoch: 134, best train: 0.834, best val: 0.5862, lr: 0.00545
iteration: 1, epoch: 135, best train: 0.834, best val: 0.5862, lr: 0.00501
iteration: 1, epoch: 136, best train: 0.834, best val: 0.5862, lr: 0.00459
iteration: 1, epoch: 137, best train: 0.834, best val: 0.5899, lr: 0.00419
iteration: 1, epoch: 138, best train: 0.834, best val: 0.5899, lr: 0.00381
iteration: 1, epoch: 139, best train: 0.834, best val: 0.5902, lr: 0.00344
iteration: 1, epoch: 140, best train: 0.834, best val: 0.5902, lr: 0.00309
iteration: 1, epoch: 141, best train: 0.834, best val: 0.5902, lr: 0.00276
iteration: 1, epoch: 142, best train: 0.834, best val: 0.5902, lr: 0.00245
iteration: 1, epoch: 143, best train: 0.835, best val: 0.5902, lr: 0.00215
iteration: 1, epoch: 144, best train: 0.835, best val: 0.5924, lr: 0.00188
iteration: 1, epoch: 145, best train: 0.84, best val: 0.5924, lr: 0.00162
iteration: 1, epoch: 146, best train: 0.84, best val: 0.5941, lr: 0.00138
iteration: 1, epoch: 147, best train: 0.84, best val: 0.5941, lr: 0.00116
iteration: 1, epoch: 148, best train: 0.84, best val: 0.5941, lr: 0.00096
iteration: 1, epoch: 149, best train: 0.84, best val: 0.5941, lr: 0.00078
iteration: 1, epoch: 150, best train: 0.853, best val: 0.5941, lr: 0.00062
iteration: 1, epoch: 151, best train: 0.853, best val: 0.5941, lr: 0.00047
iteration: 1, epoch: 152, best train: 0.866, best val: 0.5941, lr: 0.00035
iteration: 1, epoch: 153, best train: 0.866, best val: 0.5941, lr: 0.00024
iteration: 1, epoch: 154, best train: 0.866, best val: 0.5941, lr: 0.00015
iteration: 1, epoch: 155, best train: 0.866, best val: 0.5941, lr: 9e-05
iteration: 1, epoch: 156, best train: 0.866, best val: 0.5941, lr: 4e-05
iteration: 1, epoch: 157, best train: 0.866, best val: 0.5941, lr: 1e-05
iteration: 1, epoch: 158, best train: 0.866, best val: 0.5941, lr: 0.0
iteration: 1, epoch: 159, best train: 0.866, best val: 0.5941, lr: 1e-05
------------------------ Checkpoint 7  ------------------------
pre_conv.0.weight_mask 	|	active =  1471 	|	total =  1728 	|	layerwise sparsity =  0.8512731481481481
layer1.0.conv1.weight_mask 	|	active =  23593 	|	total =  36864 	|	layerwise sparsity =  0.6400010850694444
layer1.0.conv2.weight_mask 	|	active =  23593 	|	total =  36864 	|	layerwise sparsity =  0.6400010850694444
layer1.1.conv1.weight_mask 	|	active =  23593 	|	total =  36864 	|	layerwise sparsity =  0.6400010850694444
layer1.1.conv2.weight_mask 	|	active =  23593 	|	total =  36864 	|	layerwise sparsity =  0.6400010850694444
layer2.0.conv1.weight_mask 	|	active =  47186 	|	total =  73728 	|	layerwise sparsity =  0.6400010850694444
layer2.0.conv2.weight_mask 	|	active =  94372 	|	total =  147456 	|	layerwise sparsity =  0.6400010850694444
layer2.0.shortcut.0.weight_mask 	|	active =  6975 	|	total =  8192 	|	layerwise sparsity =  0.8514404296875
layer2.1.conv1.weight_mask 	|	active =  94372 	|	total =  147456 	|	layerwise sparsity =  0.6400010850694444
layer2.1.conv2.weight_mask 	|	active =  94372 	|	total =  147456 	|	layerwise sparsity =  0.6400010850694444
layer3.0.conv1.weight_mask 	|	active =  188744 	|	total =  294912 	|	layerwise sparsity =  0.6400010850694444
layer3.0.conv2.weight_mask 	|	active =  348493 	|	total =  589824 	|	layerwise sparsity =  0.5908423529730903
layer3.0.shortcut.0.weight_mask 	|	active =  20971 	|	total =  32768 	|	layerwise sparsity =  0.639984130859375
layer3.1.conv1.weight_mask 	|	active =  350729 	|	total =  589824 	|	layerwise sparsity =  0.5946333143446181
layer3.1.conv2.weight_mask 	|	active =  354059 	|	total =  589824 	|	layerwise sparsity =  0.6002790662977431
layer4.0.conv1.weight_mask 	|	active =  735776 	|	total =  1179648 	|	layerwise sparsity =  0.6237250434027778
layer4.0.conv2.weight_mask 	|	active =  1531132 	|	total =  2359296 	|	layerwise sparsity =  0.6489783393012153
layer4.0.shortcut.0.weight_mask 	|	active =  83886 	|	total =  131072 	|	layerwise sparsity =  0.6399993896484375
layer4.1.conv1.weight_mask 	|	active =  1547381 	|	total =  2359296 	|	layerwise sparsity =  0.6558655632866753
layer4.1.conv2.weight_mask 	|	active =  1568091 	|	total =  2359296 	|	layerwise sparsity =  0.6646436055501302
------------------------ Checkpoint 8  ------------------------
best_val =  0.5941
------------------------ Checkpoint 9  ------------------------
pruning state: 2
remaining weight at start of iteration =  64.18346710598006
iteration: 2, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 2, epoch: 1, best train: 0.106, best val: 0.1059, lr: 0.09991
iteration: 2, epoch: 2, best train: 0.158, best val: 0.1285, lr: 0.09985
iteration: 2, epoch: 3, best train: 0.171, best val: 0.2283, lr: 0.09976
iteration: 2, epoch: 4, best train: 0.189, best val: 0.2283, lr: 0.09965
iteration: 2, epoch: 5, best train: 0.202, best val: 0.277, lr: 0.09953
iteration: 2, epoch: 6, best train: 0.206, best val: 0.277, lr: 0.09938
iteration: 2, epoch: 7, best train: 0.234, best val: 0.3219, lr: 0.09922
iteration: 2, epoch: 8, best train: 0.259, best val: 0.3219, lr: 0.09904
iteration: 2, epoch: 9, best train: 0.259, best val: 0.3219, lr: 0.09884
iteration: 2, epoch: 10, best train: 0.261, best val: 0.3219, lr: 0.09862
iteration: 2, epoch: 11, best train: 0.324, best val: 0.3433, lr: 0.09838
iteration: 2, epoch: 12, best train: 0.324, best val: 0.3433, lr: 0.09812
iteration: 2, epoch: 13, best train: 0.324, best val: 0.3433, lr: 0.09785
iteration: 2, epoch: 14, best train: 0.336, best val: 0.3476, lr: 0.09755
iteration: 2, epoch: 15, best train: 0.336, best val: 0.3523, lr: 0.09724
iteration: 2, epoch: 16, best train: 0.356, best val: 0.4067, lr: 0.09691
iteration: 2, epoch: 17, best train: 0.369, best val: 0.4067, lr: 0.09656
iteration: 2, epoch: 18, best train: 0.369, best val: 0.4067, lr: 0.09619
iteration: 2, epoch: 19, best train: 0.377, best val: 0.4299, lr: 0.09581
iteration: 2, epoch: 20, best train: 0.424, best val: 0.4299, lr: 0.09541
iteration: 2, epoch: 21, best train: 0.424, best val: 0.4299, lr: 0.09499
iteration: 2, epoch: 22, best train: 0.428, best val: 0.4299, lr: 0.09455
iteration: 2, epoch: 23, best train: 0.436, best val: 0.4299, lr: 0.0941
iteration: 2, epoch: 24, best train: 0.436, best val: 0.4299, lr: 0.09362
iteration: 2, epoch: 25, best train: 0.436, best val: 0.4353, lr: 0.09314
iteration: 2, epoch: 26, best train: 0.45, best val: 0.4406, lr: 0.09263
iteration: 2, epoch: 27, best train: 0.457, best val: 0.4449, lr: 0.09211
iteration: 2, epoch: 28, best train: 0.457, best val: 0.4449, lr: 0.09157
iteration: 2, epoch: 29, best train: 0.458, best val: 0.4449, lr: 0.09102
iteration: 2, epoch: 30, best train: 0.458, best val: 0.4501, lr: 0.09045
iteration: 2, epoch: 31, best train: 0.477, best val: 0.4501, lr: 0.08987
iteration: 2, epoch: 32, best train: 0.491, best val: 0.4643, lr: 0.08927
iteration: 2, epoch: 33, best train: 0.518, best val: 0.4694, lr: 0.08865
iteration: 2, epoch: 34, best train: 0.518, best val: 0.4694, lr: 0.08802
iteration: 2, epoch: 35, best train: 0.518, best val: 0.4694, lr: 0.08738
iteration: 2, epoch: 36, best train: 0.518, best val: 0.4909, lr: 0.08672
iteration: 2, epoch: 37, best train: 0.518, best val: 0.4909, lr: 0.08604
iteration: 2, epoch: 38, best train: 0.536, best val: 0.4909, lr: 0.08536
iteration: 2, epoch: 39, best train: 0.558, best val: 0.5026, lr: 0.08465
iteration: 2, epoch: 40, best train: 0.558, best val: 0.5026, lr: 0.08394
iteration: 2, epoch: 41, best train: 0.558, best val: 0.5205, lr: 0.08321
iteration: 2, epoch: 42, best train: 0.558, best val: 0.5205, lr: 0.08247
iteration: 2, epoch: 43, best train: 0.589, best val: 0.5205, lr: 0.08172
iteration: 2, epoch: 44, best train: 0.589, best val: 0.5205, lr: 0.08095
iteration: 2, epoch: 45, best train: 0.589, best val: 0.5205, lr: 0.08018
iteration: 2, epoch: 46, best train: 0.591, best val: 0.5205, lr: 0.07939
iteration: 2, epoch: 47, best train: 0.591, best val: 0.5205, lr: 0.07859
iteration: 2, epoch: 48, best train: 0.592, best val: 0.5205, lr: 0.07778
iteration: 2, epoch: 49, best train: 0.603, best val: 0.541, lr: 0.07696
iteration: 2, epoch: 50, best train: 0.632, best val: 0.541, lr: 0.07612
iteration: 2, epoch: 51, best train: 0.632, best val: 0.541, lr: 0.07528
iteration: 2, epoch: 52, best train: 0.632, best val: 0.541, lr: 0.07443
iteration: 2, epoch: 53, best train: 0.632, best val: 0.541, lr: 0.07357
iteration: 2, epoch: 54, best train: 0.632, best val: 0.541, lr: 0.0727
iteration: 2, epoch: 55, best train: 0.666, best val: 0.541, lr: 0.07182
iteration: 2, epoch: 56, best train: 0.666, best val: 0.541, lr: 0.07093
iteration: 2, epoch: 57, best train: 0.666, best val: 0.541, lr: 0.07004
iteration: 2, epoch: 58, best train: 0.666, best val: 0.541, lr: 0.06913
iteration: 2, epoch: 59, best train: 0.666, best val: 0.541, lr: 0.06822
iteration: 2, epoch: 60, best train: 0.666, best val: 0.541, lr: 0.06731
iteration: 2, epoch: 61, best train: 0.668, best val: 0.541, lr: 0.06638
iteration: 2, epoch: 62, best train: 0.675, best val: 0.555, lr: 0.06545
iteration: 2, epoch: 63, best train: 0.677, best val: 0.555, lr: 0.06451
iteration: 2, epoch: 64, best train: 0.685, best val: 0.555, lr: 0.06357
iteration: 2, epoch: 65, best train: 0.685, best val: 0.555, lr: 0.06262
iteration: 2, epoch: 66, best train: 0.685, best val: 0.555, lr: 0.06167
iteration: 2, epoch: 67, best train: 0.685, best val: 0.555, lr: 0.06072
iteration: 2, epoch: 68, best train: 0.712, best val: 0.555, lr: 0.05975
iteration: 2, epoch: 69, best train: 0.712, best val: 0.555, lr: 0.05879
iteration: 2, epoch: 70, best train: 0.712, best val: 0.555, lr: 0.05782
iteration: 2, epoch: 71, best train: 0.716, best val: 0.5563, lr: 0.05685
iteration: 2, epoch: 72, best train: 0.723, best val: 0.5563, lr: 0.05588
iteration: 2, epoch: 73, best train: 0.737, best val: 0.5622, lr: 0.0549
iteration: 2, epoch: 74, best train: 0.737, best val: 0.5622, lr: 0.05392
iteration: 2, epoch: 75, best train: 0.737, best val: 0.5622, lr: 0.05294
iteration: 2, epoch: 76, best train: 0.737, best val: 0.5622, lr: 0.05196
iteration: 2, epoch: 77, best train: 0.737, best val: 0.5622, lr: 0.05098
iteration: 2, epoch: 78, best train: 0.737, best val: 0.5781, lr: 0.05
iteration: 2, epoch: 79, best train: 0.77, best val: 0.5781, lr: 0.04902
iteration: 2, epoch: 80, best train: 0.77, best val: 0.5781, lr: 0.04804
iteration: 2, epoch: 81, best train: 0.772, best val: 0.5781, lr: 0.04706
iteration: 2, epoch: 82, best train: 0.772, best val: 0.5781, lr: 0.04608
iteration: 2, epoch: 83, best train: 0.791, best val: 0.5781, lr: 0.0451
iteration: 2, epoch: 84, best train: 0.791, best val: 0.5781, lr: 0.04412
iteration: 2, epoch: 85, best train: 0.791, best val: 0.5781, lr: 0.04315
iteration: 2, epoch: 86, best train: 0.791, best val: 0.5853, lr: 0.04218
iteration: 2, epoch: 87, best train: 0.791, best val: 0.5874, lr: 0.04121
iteration: 2, epoch: 88, best train: 0.791, best val: 0.5874, lr: 0.04025
iteration: 2, epoch: 89, best train: 0.791, best val: 0.5874, lr: 0.03928
iteration: 2, epoch: 90, best train: 0.791, best val: 0.5874, lr: 0.03833
iteration: 2, epoch: 91, best train: 0.796, best val: 0.5874, lr: 0.03738
iteration: 2, epoch: 92, best train: 0.796, best val: 0.5874, lr: 0.03643
iteration: 2, epoch: 93, best train: 0.817, best val: 0.5874, lr: 0.03549
iteration: 2, epoch: 94, best train: 0.817, best val: 0.5874, lr: 0.03455
iteration: 2, epoch: 95, best train: 0.817, best val: 0.5874, lr: 0.03362
iteration: 2, epoch: 96, best train: 0.84, best val: 0.5883, lr: 0.03269
iteration: 2, epoch: 97, best train: 0.84, best val: 0.5883, lr: 0.03178
iteration: 2, epoch: 98, best train: 0.84, best val: 0.5883, lr: 0.03087
iteration: 2, epoch: 99, best train: 0.84, best val: 0.5883, lr: 0.02996
iteration: 2, epoch: 100, best train: 0.84, best val: 0.5883, lr: 0.02907
iteration: 2, epoch: 101, best train: 0.84, best val: 0.5883, lr: 0.02818
iteration: 2, epoch: 102, best train: 0.84, best val: 0.5883, lr: 0.0273
iteration: 2, epoch: 103, best train: 0.84, best val: 0.5892, lr: 0.02643
iteration: 2, epoch: 104, best train: 0.84, best val: 0.5909, lr: 0.02557
iteration: 2, epoch: 105, best train: 0.846, best val: 0.5989, lr: 0.02472
iteration: 2, epoch: 106, best train: 0.846, best val: 0.5989, lr: 0.02388
iteration: 2, epoch: 107, best train: 0.855, best val: 0.599, lr: 0.02304
iteration: 2, epoch: 108, best train: 0.855, best val: 0.599, lr: 0.02222
iteration: 2, epoch: 109, best train: 0.855, best val: 0.599, lr: 0.02141
iteration: 2, epoch: 110, best train: 0.855, best val: 0.599, lr: 0.02061
iteration: 2, epoch: 111, best train: 0.877, best val: 0.599, lr: 0.01982
iteration: 2, epoch: 112, best train: 0.877, best val: 0.6023, lr: 0.01905
iteration: 2, epoch: 113, best train: 0.877, best val: 0.6023, lr: 0.01828
iteration: 2, epoch: 114, best train: 0.877, best val: 0.6023, lr: 0.01753
iteration: 2, epoch: 115, best train: 0.877, best val: 0.6023, lr: 0.01679
iteration: 2, epoch: 116, best train: 0.877, best val: 0.6023, lr: 0.01606
iteration: 2, epoch: 117, best train: 0.877, best val: 0.6023, lr: 0.01535
iteration: 2, epoch: 118, best train: 0.882, best val: 0.6041, lr: 0.01464
iteration: 2, epoch: 119, best train: 0.882, best val: 0.6078, lr: 0.01396
iteration: 2, epoch: 120, best train: 0.882, best val: 0.608, lr: 0.01328
iteration: 2, epoch: 121, best train: 0.882, best val: 0.608, lr: 0.01262
iteration: 2, epoch: 122, best train: 0.882, best val: 0.608, lr: 0.01198
iteration: 2, epoch: 123, best train: 0.882, best val: 0.6197, lr: 0.01135
iteration: 2, epoch: 124, best train: 0.889, best val: 0.6197, lr: 0.01073
iteration: 2, epoch: 125, best train: 0.889, best val: 0.6197, lr: 0.01013
iteration: 2, epoch: 126, best train: 0.896, best val: 0.6197, lr: 0.00955
iteration: 2, epoch: 127, best train: 0.896, best val: 0.6197, lr: 0.00898
iteration: 2, epoch: 128, best train: 0.896, best val: 0.6197, lr: 0.00843
iteration: 2, epoch: 129, best train: 0.903, best val: 0.6197, lr: 0.00789
iteration: 2, epoch: 130, best train: 0.903, best val: 0.6197, lr: 0.00737
iteration: 2, epoch: 131, best train: 0.903, best val: 0.6197, lr: 0.00686
iteration: 2, epoch: 132, best train: 0.903, best val: 0.6197, lr: 0.00638
iteration: 2, epoch: 133, best train: 0.903, best val: 0.6197, lr: 0.0059
iteration: 2, epoch: 134, best train: 0.906, best val: 0.6206, lr: 0.00545
iteration: 2, epoch: 135, best train: 0.915, best val: 0.6206, lr: 0.00501
iteration: 2, epoch: 136, best train: 0.915, best val: 0.6206, lr: 0.00459
iteration: 2, epoch: 137, best train: 0.915, best val: 0.6206, lr: 0.00419
iteration: 2, epoch: 138, best train: 0.915, best val: 0.6223, lr: 0.00381
iteration: 2, epoch: 139, best train: 0.915, best val: 0.623, lr: 0.00344
iteration: 2, epoch: 140, best train: 0.915, best val: 0.623, lr: 0.00309
iteration: 2, epoch: 141, best train: 0.915, best val: 0.623, lr: 0.00276
iteration: 2, epoch: 142, best train: 0.915, best val: 0.623, lr: 0.00245
iteration: 2, epoch: 143, best train: 0.915, best val: 0.623, lr: 0.00215
iteration: 2, epoch: 144, best train: 0.915, best val: 0.623, lr: 0.00188
iteration: 2, epoch: 145, best train: 0.915, best val: 0.623, lr: 0.00162
iteration: 2, epoch: 146, best train: 0.915, best val: 0.623, lr: 0.00138
iteration: 2, epoch: 147, best train: 0.915, best val: 0.623, lr: 0.00116
iteration: 2, epoch: 148, best train: 0.915, best val: 0.623, lr: 0.00096
iteration: 2, epoch: 149, best train: 0.917, best val: 0.623, lr: 0.00078
iteration: 2, epoch: 150, best train: 0.929, best val: 0.623, lr: 0.00062
iteration: 2, epoch: 151, best train: 0.929, best val: 0.623, lr: 0.00047
iteration: 2, epoch: 152, best train: 0.929, best val: 0.623, lr: 0.00035
iteration: 2, epoch: 153, best train: 0.929, best val: 0.623, lr: 0.00024
iteration: 2, epoch: 154, best train: 0.929, best val: 0.623, lr: 0.00015
iteration: 2, epoch: 155, best train: 0.929, best val: 0.623, lr: 9e-05
iteration: 2, epoch: 156, best train: 0.929, best val: 0.623, lr: 4e-05
iteration: 2, epoch: 157, best train: 0.929, best val: 0.623, lr: 1e-05
iteration: 2, epoch: 158, best train: 0.929, best val: 0.623, lr: 0.0
iteration: 2, epoch: 159, best train: 0.929, best val: 0.623, lr: 1e-05
------------------------ Checkpoint 10  ------------------------
pre_conv.0.weight_mask 	|	active =  1357 	|	total =  1728 	|	layerwise sparsity =  0.7853009259259259
layer1.0.conv1.weight_mask 	|	active =  18874 	|	total =  36864 	|	layerwise sparsity =  0.5119900173611112
layer1.0.conv2.weight_mask 	|	active =  18874 	|	total =  36864 	|	layerwise sparsity =  0.5119900173611112
layer1.1.conv1.weight_mask 	|	active =  18874 	|	total =  36864 	|	layerwise sparsity =  0.5119900173611112
layer1.1.conv2.weight_mask 	|	active =  18874 	|	total =  36864 	|	layerwise sparsity =  0.5119900173611112
layer2.0.conv1.weight_mask 	|	active =  37749 	|	total =  73728 	|	layerwise sparsity =  0.5120035807291666
layer2.0.conv2.weight_mask 	|	active =  75498 	|	total =  147456 	|	layerwise sparsity =  0.5120035807291666
layer2.0.shortcut.0.weight_mask 	|	active =  6436 	|	total =  8192 	|	layerwise sparsity =  0.78564453125
layer2.1.conv1.weight_mask 	|	active =  75498 	|	total =  147456 	|	layerwise sparsity =  0.5120035807291666
layer2.1.conv2.weight_mask 	|	active =  75498 	|	total =  147456 	|	layerwise sparsity =  0.5120035807291666
layer3.0.conv1.weight_mask 	|	active =  150995 	|	total =  294912 	|	layerwise sparsity =  0.5120001898871528
layer3.0.conv2.weight_mask 	|	active =  267874 	|	total =  589824 	|	layerwise sparsity =  0.4541592068142361
layer3.0.shortcut.0.weight_mask 	|	active =  16777 	|	total =  32768 	|	layerwise sparsity =  0.511993408203125
layer3.1.conv1.weight_mask 	|	active =  270456 	|	total =  589824 	|	layerwise sparsity =  0.4585367838541667
layer3.1.conv2.weight_mask 	|	active =  274316 	|	total =  589824 	|	layerwise sparsity =  0.4650811089409722
layer4.0.conv1.weight_mask 	|	active =  581088 	|	total =  1179648 	|	layerwise sparsity =  0.4925944010416667
layer4.0.conv2.weight_mask 	|	active =  1233468 	|	total =  2359296 	|	layerwise sparsity =  0.5228118896484375
layer4.0.shortcut.0.weight_mask 	|	active =  67109 	|	total =  131072 	|	layerwise sparsity =  0.5120010375976562
layer4.1.conv1.weight_mask 	|	active =  1253155 	|	total =  2359296 	|	layerwise sparsity =  0.5311563279893663
layer4.1.conv2.weight_mask 	|	active =  1278397 	|	total =  2359296 	|	layerwise sparsity =  0.5418552822536893
------------------------ Checkpoint 11  ------------------------
best_val =  0.623
------------------------ Checkpoint 12  ------------------------
pruning state: 3
remaining weight at start of iteration =  51.44768923166039
iteration: 3, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 3, epoch: 1, best train: 0.157, best val: 0.1002, lr: 0.09991
iteration: 3, epoch: 2, best train: 0.197, best val: 0.1228, lr: 0.09985
iteration: 3, epoch: 3, best train: 0.234, best val: 0.2308, lr: 0.09976
iteration: 3, epoch: 4, best train: 0.237, best val: 0.3045, lr: 0.09965
iteration: 3, epoch: 5, best train: 0.278, best val: 0.3045, lr: 0.09953
iteration: 3, epoch: 6, best train: 0.278, best val: 0.3045, lr: 0.09938
iteration: 3, epoch: 7, best train: 0.317, best val: 0.3045, lr: 0.09922
iteration: 3, epoch: 8, best train: 0.317, best val: 0.3069, lr: 0.09904
iteration: 3, epoch: 9, best train: 0.331, best val: 0.3069, lr: 0.09884
iteration: 3, epoch: 10, best train: 0.366, best val: 0.3965, lr: 0.09862
iteration: 3, epoch: 11, best train: 0.405, best val: 0.4172, lr: 0.09838
iteration: 3, epoch: 12, best train: 0.431, best val: 0.4172, lr: 0.09812
iteration: 3, epoch: 13, best train: 0.431, best val: 0.4172, lr: 0.09785
iteration: 3, epoch: 14, best train: 0.483, best val: 0.4172, lr: 0.09755
iteration: 3, epoch: 15, best train: 0.483, best val: 0.4172, lr: 0.09724
iteration: 3, epoch: 16, best train: 0.483, best val: 0.4909, lr: 0.09691
iteration: 3, epoch: 17, best train: 0.516, best val: 0.4909, lr: 0.09656
iteration: 3, epoch: 18, best train: 0.516, best val: 0.4909, lr: 0.09619
iteration: 3, epoch: 19, best train: 0.526, best val: 0.4909, lr: 0.09581
iteration: 3, epoch: 20, best train: 0.527, best val: 0.4942, lr: 0.09541
iteration: 3, epoch: 21, best train: 0.54, best val: 0.4942, lr: 0.09499
iteration: 3, epoch: 22, best train: 0.576, best val: 0.4942, lr: 0.09455
iteration: 3, epoch: 23, best train: 0.576, best val: 0.4942, lr: 0.0941
iteration: 3, epoch: 24, best train: 0.576, best val: 0.4942, lr: 0.09362
iteration: 3, epoch: 25, best train: 0.609, best val: 0.5253, lr: 0.09314
iteration: 3, epoch: 26, best train: 0.624, best val: 0.5253, lr: 0.09263
iteration: 3, epoch: 27, best train: 0.624, best val: 0.5253, lr: 0.09211
iteration: 3, epoch: 28, best train: 0.635, best val: 0.5253, lr: 0.09157
iteration: 3, epoch: 29, best train: 0.635, best val: 0.5253, lr: 0.09102
iteration: 3, epoch: 30, best train: 0.635, best val: 0.5253, lr: 0.09045
iteration: 3, epoch: 31, best train: 0.635, best val: 0.5253, lr: 0.08987
iteration: 3, epoch: 32, best train: 0.655, best val: 0.5253, lr: 0.08927
iteration: 3, epoch: 33, best train: 0.655, best val: 0.5253, lr: 0.08865
iteration: 3, epoch: 34, best train: 0.655, best val: 0.5253, lr: 0.08802
iteration: 3, epoch: 35, best train: 0.679, best val: 0.5253, lr: 0.08738
iteration: 3, epoch: 36, best train: 0.679, best val: 0.5265, lr: 0.08672
iteration: 3, epoch: 37, best train: 0.679, best val: 0.5311, lr: 0.08604
iteration: 3, epoch: 38, best train: 0.679, best val: 0.5311, lr: 0.08536
iteration: 3, epoch: 39, best train: 0.679, best val: 0.5311, lr: 0.08465
iteration: 3, epoch: 40, best train: 0.679, best val: 0.5311, lr: 0.08394
iteration: 3, epoch: 41, best train: 0.712, best val: 0.5311, lr: 0.08321
iteration: 3, epoch: 42, best train: 0.746, best val: 0.5311, lr: 0.08247
iteration: 3, epoch: 43, best train: 0.746, best val: 0.5487, lr: 0.08172
iteration: 3, epoch: 44, best train: 0.746, best val: 0.5487, lr: 0.08095
iteration: 3, epoch: 45, best train: 0.746, best val: 0.5589, lr: 0.08018
iteration: 3, epoch: 46, best train: 0.746, best val: 0.5589, lr: 0.07939
iteration: 3, epoch: 47, best train: 0.746, best val: 0.5589, lr: 0.07859
iteration: 3, epoch: 48, best train: 0.746, best val: 0.5589, lr: 0.07778
iteration: 3, epoch: 49, best train: 0.746, best val: 0.5589, lr: 0.07696
iteration: 3, epoch: 50, best train: 0.75, best val: 0.5706, lr: 0.07612
iteration: 3, epoch: 51, best train: 0.75, best val: 0.5706, lr: 0.07528
iteration: 3, epoch: 52, best train: 0.757, best val: 0.5884, lr: 0.07443
iteration: 3, epoch: 53, best train: 0.758, best val: 0.5884, lr: 0.07357
iteration: 3, epoch: 54, best train: 0.773, best val: 0.5884, lr: 0.0727
iteration: 3, epoch: 55, best train: 0.773, best val: 0.5884, lr: 0.07182
iteration: 3, epoch: 56, best train: 0.779, best val: 0.5884, lr: 0.07093
iteration: 3, epoch: 57, best train: 0.779, best val: 0.5884, lr: 0.07004
iteration: 3, epoch: 58, best train: 0.794, best val: 0.5897, lr: 0.06913
iteration: 3, epoch: 59, best train: 0.796, best val: 0.598, lr: 0.06822
iteration: 3, epoch: 60, best train: 0.808, best val: 0.598, lr: 0.06731
iteration: 3, epoch: 61, best train: 0.808, best val: 0.598, lr: 0.06638
iteration: 3, epoch: 62, best train: 0.808, best val: 0.598, lr: 0.06545
iteration: 3, epoch: 63, best train: 0.808, best val: 0.598, lr: 0.06451
iteration: 3, epoch: 64, best train: 0.808, best val: 0.598, lr: 0.06357
iteration: 3, epoch: 65, best train: 0.814, best val: 0.598, lr: 0.06262
iteration: 3, epoch: 66, best train: 0.814, best val: 0.598, lr: 0.06167
iteration: 3, epoch: 67, best train: 0.814, best val: 0.598, lr: 0.06072
iteration: 3, epoch: 68, best train: 0.826, best val: 0.598, lr: 0.05975
iteration: 3, epoch: 69, best train: 0.826, best val: 0.598, lr: 0.05879
iteration: 3, epoch: 70, best train: 0.843, best val: 0.598, lr: 0.05782
iteration: 3, epoch: 71, best train: 0.843, best val: 0.598, lr: 0.05685
iteration: 3, epoch: 72, best train: 0.843, best val: 0.598, lr: 0.05588
iteration: 3, epoch: 73, best train: 0.843, best val: 0.5981, lr: 0.0549
iteration: 3, epoch: 74, best train: 0.843, best val: 0.5981, lr: 0.05392
iteration: 3, epoch: 75, best train: 0.843, best val: 0.5981, lr: 0.05294
iteration: 3, epoch: 76, best train: 0.843, best val: 0.5984, lr: 0.05196
iteration: 3, epoch: 77, best train: 0.863, best val: 0.5984, lr: 0.05098
iteration: 3, epoch: 78, best train: 0.863, best val: 0.6028, lr: 0.05
iteration: 3, epoch: 79, best train: 0.863, best val: 0.6028, lr: 0.04902
iteration: 3, epoch: 80, best train: 0.863, best val: 0.6028, lr: 0.04804
iteration: 3, epoch: 81, best train: 0.863, best val: 0.6028, lr: 0.04706
iteration: 3, epoch: 82, best train: 0.863, best val: 0.6033, lr: 0.04608
iteration: 3, epoch: 83, best train: 0.863, best val: 0.6033, lr: 0.0451
iteration: 3, epoch: 84, best train: 0.866, best val: 0.6161, lr: 0.04412
iteration: 3, epoch: 85, best train: 0.867, best val: 0.6161, lr: 0.04315
iteration: 3, epoch: 86, best train: 0.874, best val: 0.6161, lr: 0.04218
iteration: 3, epoch: 87, best train: 0.874, best val: 0.6161, lr: 0.04121
iteration: 3, epoch: 88, best train: 0.874, best val: 0.6161, lr: 0.04025
iteration: 3, epoch: 89, best train: 0.874, best val: 0.6161, lr: 0.03928
iteration: 3, epoch: 90, best train: 0.885, best val: 0.6161, lr: 0.03833
iteration: 3, epoch: 91, best train: 0.885, best val: 0.6161, lr: 0.03738
iteration: 3, epoch: 92, best train: 0.885, best val: 0.6161, lr: 0.03643
iteration: 3, epoch: 93, best train: 0.885, best val: 0.6161, lr: 0.03549
iteration: 3, epoch: 94, best train: 0.887, best val: 0.6162, lr: 0.03455
iteration: 3, epoch: 95, best train: 0.887, best val: 0.6162, lr: 0.03362
iteration: 3, epoch: 96, best train: 0.887, best val: 0.6162, lr: 0.03269
iteration: 3, epoch: 97, best train: 0.887, best val: 0.6162, lr: 0.03178
iteration: 3, epoch: 98, best train: 0.887, best val: 0.6175, lr: 0.03087
iteration: 3, epoch: 99, best train: 0.906, best val: 0.6175, lr: 0.02996
iteration: 3, epoch: 100, best train: 0.906, best val: 0.6175, lr: 0.02907
iteration: 3, epoch: 101, best train: 0.906, best val: 0.6175, lr: 0.02818
iteration: 3, epoch: 102, best train: 0.906, best val: 0.6175, lr: 0.0273
iteration: 3, epoch: 103, best train: 0.906, best val: 0.6175, lr: 0.02643
iteration: 3, epoch: 104, best train: 0.906, best val: 0.6175, lr: 0.02557
iteration: 3, epoch: 105, best train: 0.906, best val: 0.6175, lr: 0.02472
iteration: 3, epoch: 106, best train: 0.906, best val: 0.6175, lr: 0.02388
iteration: 3, epoch: 107, best train: 0.906, best val: 0.622, lr: 0.02304
iteration: 3, epoch: 108, best train: 0.911, best val: 0.622, lr: 0.02222
iteration: 3, epoch: 109, best train: 0.911, best val: 0.6243, lr: 0.02141
iteration: 3, epoch: 110, best train: 0.911, best val: 0.6243, lr: 0.02061
iteration: 3, epoch: 111, best train: 0.911, best val: 0.6243, lr: 0.01982
iteration: 3, epoch: 112, best train: 0.911, best val: 0.6253, lr: 0.01905
iteration: 3, epoch: 113, best train: 0.911, best val: 0.6253, lr: 0.01828
iteration: 3, epoch: 114, best train: 0.911, best val: 0.6253, lr: 0.01753
iteration: 3, epoch: 115, best train: 0.917, best val: 0.6282, lr: 0.01679
iteration: 3, epoch: 116, best train: 0.924, best val: 0.636, lr: 0.01606
iteration: 3, epoch: 117, best train: 0.924, best val: 0.636, lr: 0.01535
iteration: 3, epoch: 118, best train: 0.924, best val: 0.636, lr: 0.01464
iteration: 3, epoch: 119, best train: 0.928, best val: 0.6383, lr: 0.01396
iteration: 3, epoch: 120, best train: 0.928, best val: 0.6383, lr: 0.01328
iteration: 3, epoch: 121, best train: 0.928, best val: 0.6383, lr: 0.01262
iteration: 3, epoch: 122, best train: 0.928, best val: 0.6389, lr: 0.01198
iteration: 3, epoch: 123, best train: 0.928, best val: 0.6389, lr: 0.01135
iteration: 3, epoch: 124, best train: 0.928, best val: 0.6389, lr: 0.01073
iteration: 3, epoch: 125, best train: 0.928, best val: 0.6389, lr: 0.01013
iteration: 3, epoch: 126, best train: 0.928, best val: 0.6389, lr: 0.00955
iteration: 3, epoch: 127, best train: 0.933, best val: 0.6389, lr: 0.00898
iteration: 3, epoch: 128, best train: 0.933, best val: 0.6389, lr: 0.00843
iteration: 3, epoch: 129, best train: 0.933, best val: 0.6389, lr: 0.00789
iteration: 3, epoch: 130, best train: 0.939, best val: 0.6389, lr: 0.00737
iteration: 3, epoch: 131, best train: 0.939, best val: 0.6389, lr: 0.00686
iteration: 3, epoch: 132, best train: 0.939, best val: 0.6389, lr: 0.00638
iteration: 3, epoch: 133, best train: 0.939, best val: 0.6394, lr: 0.0059
iteration: 3, epoch: 134, best train: 0.939, best val: 0.6394, lr: 0.00545
iteration: 3, epoch: 135, best train: 0.939, best val: 0.6394, lr: 0.00501
iteration: 3, epoch: 136, best train: 0.939, best val: 0.6394, lr: 0.00459
iteration: 3, epoch: 137, best train: 0.939, best val: 0.6394, lr: 0.00419
iteration: 3, epoch: 138, best train: 0.939, best val: 0.6394, lr: 0.00381
iteration: 3, epoch: 139, best train: 0.939, best val: 0.6394, lr: 0.00344
iteration: 3, epoch: 140, best train: 0.939, best val: 0.6394, lr: 0.00309
iteration: 3, epoch: 141, best train: 0.939, best val: 0.6394, lr: 0.00276
iteration: 3, epoch: 142, best train: 0.939, best val: 0.6394, lr: 0.00245
iteration: 3, epoch: 143, best train: 0.946, best val: 0.6394, lr: 0.00215
iteration: 3, epoch: 144, best train: 0.946, best val: 0.6394, lr: 0.00188
iteration: 3, epoch: 145, best train: 0.946, best val: 0.6396, lr: 0.00162
iteration: 3, epoch: 146, best train: 0.946, best val: 0.6396, lr: 0.00138
iteration: 3, epoch: 147, best train: 0.946, best val: 0.6396, lr: 0.00116
iteration: 3, epoch: 148, best train: 0.946, best val: 0.6396, lr: 0.00096
iteration: 3, epoch: 149, best train: 0.946, best val: 0.6413, lr: 0.00078
iteration: 3, epoch: 150, best train: 0.946, best val: 0.6413, lr: 0.00062
iteration: 3, epoch: 151, best train: 0.946, best val: 0.6418, lr: 0.00047
iteration: 3, epoch: 152, best train: 0.946, best val: 0.6423, lr: 0.00035
iteration: 3, epoch: 153, best train: 0.946, best val: 0.6425, lr: 0.00024
iteration: 3, epoch: 154, best train: 0.946, best val: 0.6425, lr: 0.00015
iteration: 3, epoch: 155, best train: 0.946, best val: 0.6425, lr: 9e-05
iteration: 3, epoch: 156, best train: 0.946, best val: 0.6425, lr: 4e-05
iteration: 3, epoch: 157, best train: 0.946, best val: 0.6425, lr: 1e-05
iteration: 3, epoch: 158, best train: 0.946, best val: 0.6425, lr: 0.0
iteration: 3, epoch: 159, best train: 0.946, best val: 0.6425, lr: 1e-05
------------------------ Checkpoint 13  ------------------------
pre_conv.0.weight_mask 	|	active =  1252 	|	total =  1728 	|	layerwise sparsity =  0.7245370370370371
layer1.0.conv1.weight_mask 	|	active =  15099 	|	total =  36864 	|	layerwise sparsity =  0.4095865885416667
layer1.0.conv2.weight_mask 	|	active =  15099 	|	total =  36864 	|	layerwise sparsity =  0.4095865885416667
layer1.1.conv1.weight_mask 	|	active =  15099 	|	total =  36864 	|	layerwise sparsity =  0.4095865885416667
layer1.1.conv2.weight_mask 	|	active =  15099 	|	total =  36864 	|	layerwise sparsity =  0.4095865885416667
layer2.0.conv1.weight_mask 	|	active =  30199 	|	total =  73728 	|	layerwise sparsity =  0.4096001519097222
layer2.0.conv2.weight_mask 	|	active =  60398 	|	total =  147456 	|	layerwise sparsity =  0.4096001519097222
layer2.0.shortcut.0.weight_mask 	|	active =  5938 	|	total =  8192 	|	layerwise sparsity =  0.724853515625
layer2.1.conv1.weight_mask 	|	active =  60398 	|	total =  147456 	|	layerwise sparsity =  0.4096001519097222
layer2.1.conv2.weight_mask 	|	active =  60398 	|	total =  147456 	|	layerwise sparsity =  0.4096001519097222
layer3.0.conv1.weight_mask 	|	active =  120796 	|	total =  294912 	|	layerwise sparsity =  0.4096001519097222
layer3.0.conv2.weight_mask 	|	active =  205905 	|	total =  589824 	|	layerwise sparsity =  0.3490956624348958
layer3.0.shortcut.0.weight_mask 	|	active =  13422 	|	total =  32768 	|	layerwise sparsity =  0.40960693359375
layer3.1.conv1.weight_mask 	|	active =  208555 	|	total =  589824 	|	layerwise sparsity =  0.3535885281032986
layer3.1.conv2.weight_mask 	|	active =  212533 	|	total =  589824 	|	layerwise sparsity =  0.3603329128689236
layer4.0.conv1.weight_mask 	|	active =  458922 	|	total =  1179648 	|	layerwise sparsity =  0.3890329996744792
layer4.0.conv2.weight_mask 	|	active =  993672 	|	total =  2359296 	|	layerwise sparsity =  0.421173095703125
layer4.0.shortcut.0.weight_mask 	|	active =  53687 	|	total =  131072 	|	layerwise sparsity =  0.40959930419921875
layer4.1.conv1.weight_mask 	|	active =  1014874 	|	total =  2359296 	|	layerwise sparsity =  0.43015967475043404
layer4.1.conv2.weight_mask 	|	active =  1042222 	|	total =  2359296 	|	layerwise sparsity =  0.44175126817491317
------------------------ Checkpoint 14  ------------------------
best_val =  0.6427
------------------------ Checkpoint 15  ------------------------
pruning state: 4
remaining weight at start of iteration =  41.253439304783704
iteration: 4, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 4, epoch: 1, best train: 0.168, best val: 0.1, lr: 0.09991
iteration: 4, epoch: 2, best train: 0.222, best val: 0.163, lr: 0.09985
iteration: 4, epoch: 3, best train: 0.288, best val: 0.2505, lr: 0.09976
iteration: 4, epoch: 4, best train: 0.351, best val: 0.2571, lr: 0.09965
iteration: 4, epoch: 5, best train: 0.375, best val: 0.279, lr: 0.09953
iteration: 4, epoch: 6, best train: 0.418, best val: 0.3768, lr: 0.09938
iteration: 4, epoch: 7, best train: 0.438, best val: 0.3768, lr: 0.09922
iteration: 4, epoch: 8, best train: 0.474, best val: 0.3768, lr: 0.09904
iteration: 4, epoch: 9, best train: 0.503, best val: 0.4198, lr: 0.09884
iteration: 4, epoch: 10, best train: 0.504, best val: 0.4198, lr: 0.09862
iteration: 4, epoch: 11, best train: 0.541, best val: 0.4893, lr: 0.09838
iteration: 4, epoch: 12, best train: 0.565, best val: 0.5223, lr: 0.09812
iteration: 4, epoch: 13, best train: 0.579, best val: 0.5223, lr: 0.09785
iteration: 4, epoch: 14, best train: 0.62, best val: 0.5223, lr: 0.09755
iteration: 4, epoch: 15, best train: 0.62, best val: 0.5223, lr: 0.09724
iteration: 4, epoch: 16, best train: 0.62, best val: 0.5223, lr: 0.09691
iteration: 4, epoch: 17, best train: 0.624, best val: 0.5223, lr: 0.09656
iteration: 4, epoch: 18, best train: 0.624, best val: 0.5223, lr: 0.09619
iteration: 4, epoch: 19, best train: 0.636, best val: 0.5223, lr: 0.09581
iteration: 4, epoch: 20, best train: 0.666, best val: 0.5223, lr: 0.09541
iteration: 4, epoch: 21, best train: 0.674, best val: 0.5223, lr: 0.09499
iteration: 4, epoch: 22, best train: 0.674, best val: 0.5223, lr: 0.09455
iteration: 4, epoch: 23, best train: 0.674, best val: 0.5267, lr: 0.0941
iteration: 4, epoch: 24, best train: 0.674, best val: 0.5267, lr: 0.09362
iteration: 4, epoch: 25, best train: 0.676, best val: 0.5456, lr: 0.09314
iteration: 4, epoch: 26, best train: 0.704, best val: 0.5456, lr: 0.09263
iteration: 4, epoch: 27, best train: 0.721, best val: 0.5714, lr: 0.09211
iteration: 4, epoch: 28, best train: 0.721, best val: 0.5714, lr: 0.09157
iteration: 4, epoch: 29, best train: 0.721, best val: 0.5714, lr: 0.09102
iteration: 4, epoch: 30, best train: 0.723, best val: 0.5714, lr: 0.09045
iteration: 4, epoch: 31, best train: 0.735, best val: 0.5714, lr: 0.08987
iteration: 4, epoch: 32, best train: 0.735, best val: 0.5714, lr: 0.08927
iteration: 4, epoch: 33, best train: 0.749, best val: 0.5714, lr: 0.08865
iteration: 4, epoch: 34, best train: 0.759, best val: 0.5783, lr: 0.08802
iteration: 4, epoch: 35, best train: 0.773, best val: 0.6001, lr: 0.08738
iteration: 4, epoch: 36, best train: 0.774, best val: 0.6001, lr: 0.08672
iteration: 4, epoch: 37, best train: 0.774, best val: 0.6001, lr: 0.08604
iteration: 4, epoch: 38, best train: 0.788, best val: 0.6001, lr: 0.08536
iteration: 4, epoch: 39, best train: 0.788, best val: 0.6001, lr: 0.08465
iteration: 4, epoch: 40, best train: 0.788, best val: 0.6001, lr: 0.08394
iteration: 4, epoch: 41, best train: 0.788, best val: 0.6001, lr: 0.08321
iteration: 4, epoch: 42, best train: 0.796, best val: 0.6001, lr: 0.08247
iteration: 4, epoch: 43, best train: 0.821, best val: 0.6001, lr: 0.08172
iteration: 4, epoch: 44, best train: 0.821, best val: 0.6001, lr: 0.08095
iteration: 4, epoch: 45, best train: 0.821, best val: 0.6001, lr: 0.08018
iteration: 4, epoch: 46, best train: 0.821, best val: 0.6001, lr: 0.07939
iteration: 4, epoch: 47, best train: 0.821, best val: 0.6001, lr: 0.07859
iteration: 4, epoch: 48, best train: 0.824, best val: 0.6001, lr: 0.07778
iteration: 4, epoch: 49, best train: 0.824, best val: 0.6046, lr: 0.07696
iteration: 4, epoch: 50, best train: 0.826, best val: 0.6046, lr: 0.07612
iteration: 4, epoch: 51, best train: 0.826, best val: 0.6046, lr: 0.07528
iteration: 4, epoch: 52, best train: 0.832, best val: 0.6046, lr: 0.07443
iteration: 4, epoch: 53, best train: 0.834, best val: 0.6046, lr: 0.07357
iteration: 4, epoch: 54, best train: 0.834, best val: 0.6046, lr: 0.0727
iteration: 4, epoch: 55, best train: 0.836, best val: 0.6046, lr: 0.07182
iteration: 4, epoch: 56, best train: 0.848, best val: 0.6046, lr: 0.07093
iteration: 4, epoch: 57, best train: 0.848, best val: 0.6046, lr: 0.07004
iteration: 4, epoch: 58, best train: 0.848, best val: 0.6046, lr: 0.06913
iteration: 4, epoch: 59, best train: 0.848, best val: 0.6046, lr: 0.06822
iteration: 4, epoch: 60, best train: 0.848, best val: 0.6046, lr: 0.06731
iteration: 4, epoch: 61, best train: 0.85, best val: 0.6046, lr: 0.06638
iteration: 4, epoch: 62, best train: 0.862, best val: 0.6067, lr: 0.06545
iteration: 4, epoch: 63, best train: 0.862, best val: 0.6067, lr: 0.06451
iteration: 4, epoch: 64, best train: 0.862, best val: 0.6095, lr: 0.06357
iteration: 4, epoch: 65, best train: 0.862, best val: 0.6095, lr: 0.06262
iteration: 4, epoch: 66, best train: 0.862, best val: 0.6095, lr: 0.06167
iteration: 4, epoch: 67, best train: 0.862, best val: 0.6095, lr: 0.06072
iteration: 4, epoch: 68, best train: 0.868, best val: 0.6095, lr: 0.05975
iteration: 4, epoch: 69, best train: 0.875, best val: 0.6095, lr: 0.05879
iteration: 4, epoch: 70, best train: 0.876, best val: 0.6095, lr: 0.05782
iteration: 4, epoch: 71, best train: 0.876, best val: 0.6095, lr: 0.05685
iteration: 4, epoch: 72, best train: 0.885, best val: 0.6095, lr: 0.05588
iteration: 4, epoch: 73, best train: 0.89, best val: 0.6095, lr: 0.0549
iteration: 4, epoch: 74, best train: 0.89, best val: 0.6095, lr: 0.05392
iteration: 4, epoch: 75, best train: 0.898, best val: 0.6095, lr: 0.05294
iteration: 4, epoch: 76, best train: 0.898, best val: 0.6095, lr: 0.05196
iteration: 4, epoch: 77, best train: 0.898, best val: 0.6095, lr: 0.05098
iteration: 4, epoch: 78, best train: 0.898, best val: 0.6103, lr: 0.05
iteration: 4, epoch: 79, best train: 0.898, best val: 0.6103, lr: 0.04902
iteration: 4, epoch: 80, best train: 0.898, best val: 0.6103, lr: 0.04804
iteration: 4, epoch: 81, best train: 0.898, best val: 0.6159, lr: 0.04706
iteration: 4, epoch: 82, best train: 0.898, best val: 0.6291, lr: 0.04608
iteration: 4, epoch: 83, best train: 0.898, best val: 0.6291, lr: 0.0451
iteration: 4, epoch: 84, best train: 0.898, best val: 0.6291, lr: 0.04412
iteration: 4, epoch: 85, best train: 0.898, best val: 0.6291, lr: 0.04315
iteration: 4, epoch: 86, best train: 0.898, best val: 0.6291, lr: 0.04218
iteration: 4, epoch: 87, best train: 0.898, best val: 0.6291, lr: 0.04121
iteration: 4, epoch: 88, best train: 0.898, best val: 0.6291, lr: 0.04025
iteration: 4, epoch: 89, best train: 0.898, best val: 0.6291, lr: 0.03928
iteration: 4, epoch: 90, best train: 0.898, best val: 0.6291, lr: 0.03833
iteration: 4, epoch: 91, best train: 0.921, best val: 0.6291, lr: 0.03738
iteration: 4, epoch: 92, best train: 0.921, best val: 0.6291, lr: 0.03643
iteration: 4, epoch: 93, best train: 0.921, best val: 0.6291, lr: 0.03549
iteration: 4, epoch: 94, best train: 0.921, best val: 0.6348, lr: 0.03455
iteration: 4, epoch: 95, best train: 0.921, best val: 0.6348, lr: 0.03362
iteration: 4, epoch: 96, best train: 0.921, best val: 0.6348, lr: 0.03269
iteration: 4, epoch: 97, best train: 0.921, best val: 0.6348, lr: 0.03178
iteration: 4, epoch: 98, best train: 0.921, best val: 0.6348, lr: 0.03087
iteration: 4, epoch: 99, best train: 0.921, best val: 0.6348, lr: 0.02996
iteration: 4, epoch: 100, best train: 0.921, best val: 0.6348, lr: 0.02907
iteration: 4, epoch: 101, best train: 0.923, best val: 0.6348, lr: 0.02818
iteration: 4, epoch: 102, best train: 0.926, best val: 0.6348, lr: 0.0273
iteration: 4, epoch: 103, best train: 0.926, best val: 0.6348, lr: 0.02643
iteration: 4, epoch: 104, best train: 0.926, best val: 0.6348, lr: 0.02557
iteration: 4, epoch: 105, best train: 0.928, best val: 0.6348, lr: 0.02472
iteration: 4, epoch: 106, best train: 0.946, best val: 0.6417, lr: 0.02388
iteration: 4, epoch: 107, best train: 0.946, best val: 0.6449, lr: 0.02304
iteration: 4, epoch: 108, best train: 0.946, best val: 0.6449, lr: 0.02222
iteration: 4, epoch: 109, best train: 0.946, best val: 0.6449, lr: 0.02141
iteration: 4, epoch: 110, best train: 0.946, best val: 0.6449, lr: 0.02061
iteration: 4, epoch: 111, best train: 0.946, best val: 0.6449, lr: 0.01982
iteration: 4, epoch: 112, best train: 0.946, best val: 0.6449, lr: 0.01905
iteration: 4, epoch: 113, best train: 0.946, best val: 0.6449, lr: 0.01828
iteration: 4, epoch: 114, best train: 0.946, best val: 0.6452, lr: 0.01753
iteration: 4, epoch: 115, best train: 0.946, best val: 0.6452, lr: 0.01679
iteration: 4, epoch: 116, best train: 0.946, best val: 0.6452, lr: 0.01606
iteration: 4, epoch: 117, best train: 0.946, best val: 0.6452, lr: 0.01535
iteration: 4, epoch: 118, best train: 0.946, best val: 0.6452, lr: 0.01464
iteration: 4, epoch: 119, best train: 0.948, best val: 0.6452, lr: 0.01396
iteration: 4, epoch: 120, best train: 0.948, best val: 0.6452, lr: 0.01328
iteration: 4, epoch: 121, best train: 0.948, best val: 0.6452, lr: 0.01262
iteration: 4, epoch: 122, best train: 0.948, best val: 0.6452, lr: 0.01198
iteration: 4, epoch: 123, best train: 0.948, best val: 0.6482, lr: 0.01135
iteration: 4, epoch: 124, best train: 0.948, best val: 0.6493, lr: 0.01073
iteration: 4, epoch: 125, best train: 0.948, best val: 0.6493, lr: 0.01013
iteration: 4, epoch: 126, best train: 0.948, best val: 0.6493, lr: 0.00955
iteration: 4, epoch: 127, best train: 0.948, best val: 0.6493, lr: 0.00898
iteration: 4, epoch: 128, best train: 0.948, best val: 0.6493, lr: 0.00843
iteration: 4, epoch: 129, best train: 0.948, best val: 0.6493, lr: 0.00789
iteration: 4, epoch: 130, best train: 0.948, best val: 0.6493, lr: 0.00737
iteration: 4, epoch: 131, best train: 0.948, best val: 0.6493, lr: 0.00686
iteration: 4, epoch: 132, best train: 0.948, best val: 0.6493, lr: 0.00638
iteration: 4, epoch: 133, best train: 0.949, best val: 0.6493, lr: 0.0059
iteration: 4, epoch: 134, best train: 0.949, best val: 0.6496, lr: 0.00545
iteration: 4, epoch: 135, best train: 0.949, best val: 0.6497, lr: 0.00501
iteration: 4, epoch: 136, best train: 0.949, best val: 0.6511, lr: 0.00459
iteration: 4, epoch: 137, best train: 0.949, best val: 0.6511, lr: 0.00419
iteration: 4, epoch: 138, best train: 0.949, best val: 0.6525, lr: 0.00381
iteration: 4, epoch: 139, best train: 0.949, best val: 0.6525, lr: 0.00344
iteration: 4, epoch: 140, best train: 0.949, best val: 0.6525, lr: 0.00309
iteration: 4, epoch: 141, best train: 0.949, best val: 0.6525, lr: 0.00276
iteration: 4, epoch: 142, best train: 0.949, best val: 0.6528, lr: 0.00245
iteration: 4, epoch: 143, best train: 0.949, best val: 0.6528, lr: 0.00215
iteration: 4, epoch: 144, best train: 0.949, best val: 0.6528, lr: 0.00188
iteration: 4, epoch: 145, best train: 0.949, best val: 0.6528, lr: 0.00162
iteration: 4, epoch: 146, best train: 0.949, best val: 0.6528, lr: 0.00138
iteration: 4, epoch: 147, best train: 0.949, best val: 0.654, lr: 0.00116
iteration: 4, epoch: 148, best train: 0.949, best val: 0.6542, lr: 0.00096
iteration: 4, epoch: 149, best train: 0.949, best val: 0.6553, lr: 0.00078
iteration: 4, epoch: 150, best train: 0.949, best val: 0.6553, lr: 0.00062
iteration: 4, epoch: 151, best train: 0.949, best val: 0.6553, lr: 0.00047
iteration: 4, epoch: 152, best train: 0.949, best val: 0.6553, lr: 0.00035
iteration: 4, epoch: 153, best train: 0.954, best val: 0.6553, lr: 0.00024
iteration: 4, epoch: 154, best train: 0.954, best val: 0.6553, lr: 0.00015
iteration: 4, epoch: 155, best train: 0.954, best val: 0.6553, lr: 9e-05
iteration: 4, epoch: 156, best train: 0.954, best val: 0.6553, lr: 4e-05
iteration: 4, epoch: 157, best train: 0.954, best val: 0.6553, lr: 1e-05
iteration: 4, epoch: 158, best train: 0.954, best val: 0.6553, lr: 0.0
iteration: 4, epoch: 159, best train: 0.955, best val: 0.6553, lr: 1e-05
------------------------ Checkpoint 16  ------------------------
pre_conv.0.weight_mask 	|	active =  1155 	|	total =  1728 	|	layerwise sparsity =  0.6684027777777778
layer1.0.conv1.weight_mask 	|	active =  12079 	|	total =  36864 	|	layerwise sparsity =  0.3276638454861111
layer1.0.conv2.weight_mask 	|	active =  12079 	|	total =  36864 	|	layerwise sparsity =  0.3276638454861111
layer1.1.conv1.weight_mask 	|	active =  12079 	|	total =  36864 	|	layerwise sparsity =  0.3276638454861111
layer1.1.conv2.weight_mask 	|	active =  12079 	|	total =  36864 	|	layerwise sparsity =  0.3276638454861111
layer2.0.conv1.weight_mask 	|	active =  24159 	|	total =  73728 	|	layerwise sparsity =  0.3276774088541667
layer2.0.conv2.weight_mask 	|	active =  48318 	|	total =  147456 	|	layerwise sparsity =  0.3276774088541667
layer2.0.shortcut.0.weight_mask 	|	active =  5479 	|	total =  8192 	|	layerwise sparsity =  0.6688232421875
layer2.1.conv1.weight_mask 	|	active =  48318 	|	total =  147456 	|	layerwise sparsity =  0.3276774088541667
layer2.1.conv2.weight_mask 	|	active =  48318 	|	total =  147456 	|	layerwise sparsity =  0.3276774088541667
layer3.0.conv1.weight_mask 	|	active =  96637 	|	total =  294912 	|	layerwise sparsity =  0.3276807996961806
layer3.0.conv2.weight_mask 	|	active =  158271 	|	total =  589824 	|	layerwise sparsity =  0.2683359781901042
layer3.0.shortcut.0.weight_mask 	|	active =  10738 	|	total =  32768 	|	layerwise sparsity =  0.32769775390625
layer3.1.conv1.weight_mask 	|	active =  160822 	|	total =  589824 	|	layerwise sparsity =  0.2726609971788194
layer3.1.conv2.weight_mask 	|	active =  164665 	|	total =  589824 	|	layerwise sparsity =  0.2791765001085069
layer4.0.conv1.weight_mask 	|	active =  362440 	|	total =  1179648 	|	layerwise sparsity =  0.3072441948784722
layer4.0.conv2.weight_mask 	|	active =  800494 	|	total =  2359296 	|	layerwise sparsity =  0.33929358588324654
layer4.0.shortcut.0.weight_mask 	|	active =  42950 	|	total =  131072 	|	layerwise sparsity =  0.3276824951171875
layer4.1.conv1.weight_mask 	|	active =  821901 	|	total =  2359296 	|	layerwise sparsity =  0.34836705525716144
layer4.1.conv2.weight_mask 	|	active =  849678 	|	total =  2359296 	|	layerwise sparsity =  0.36014048258463544
------------------------ Checkpoint 17  ------------------------
best_val =  0.6553000000000001
------------------------ Checkpoint 18  ------------------------
pruning state: 5
remaining weight at start of iteration =  33.090619497829245
iteration: 5, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 5, epoch: 1, best train: 0.189, best val: 0.1, lr: 0.09991
iteration: 5, epoch: 2, best train: 0.26, best val: 0.144, lr: 0.09985
iteration: 5, epoch: 3, best train: 0.322, best val: 0.2157, lr: 0.09976
iteration: 5, epoch: 4, best train: 0.393, best val: 0.2578, lr: 0.09965
iteration: 5, epoch: 5, best train: 0.456, best val: 0.3396, lr: 0.09953
iteration: 5, epoch: 6, best train: 0.502, best val: 0.3899, lr: 0.09938
iteration: 5, epoch: 7, best train: 0.542, best val: 0.3899, lr: 0.09922
iteration: 5, epoch: 8, best train: 0.542, best val: 0.4799, lr: 0.09904
iteration: 5, epoch: 9, best train: 0.614, best val: 0.5003, lr: 0.09884
iteration: 5, epoch: 10, best train: 0.614, best val: 0.5003, lr: 0.09862
iteration: 5, epoch: 11, best train: 0.633, best val: 0.5104, lr: 0.09838
iteration: 5, epoch: 12, best train: 0.678, best val: 0.5168, lr: 0.09812
iteration: 5, epoch: 13, best train: 0.678, best val: 0.521, lr: 0.09785
iteration: 5, epoch: 14, best train: 0.678, best val: 0.521, lr: 0.09755
iteration: 5, epoch: 15, best train: 0.707, best val: 0.521, lr: 0.09724
iteration: 5, epoch: 16, best train: 0.707, best val: 0.5466, lr: 0.09691
iteration: 5, epoch: 17, best train: 0.708, best val: 0.5466, lr: 0.09656
iteration: 5, epoch: 18, best train: 0.742, best val: 0.5601, lr: 0.09619
iteration: 5, epoch: 19, best train: 0.76, best val: 0.5602, lr: 0.09581
iteration: 5, epoch: 20, best train: 0.76, best val: 0.5602, lr: 0.09541
iteration: 5, epoch: 21, best train: 0.76, best val: 0.5602, lr: 0.09499
iteration: 5, epoch: 22, best train: 0.76, best val: 0.5602, lr: 0.09455
iteration: 5, epoch: 23, best train: 0.76, best val: 0.5602, lr: 0.0941
iteration: 5, epoch: 24, best train: 0.766, best val: 0.5625, lr: 0.09362
iteration: 5, epoch: 25, best train: 0.8, best val: 0.5702, lr: 0.09314
iteration: 5, epoch: 26, best train: 0.8, best val: 0.589, lr: 0.09263
iteration: 5, epoch: 27, best train: 0.8, best val: 0.589, lr: 0.09211
iteration: 5, epoch: 28, best train: 0.8, best val: 0.589, lr: 0.09157
iteration: 5, epoch: 29, best train: 0.8, best val: 0.589, lr: 0.09102
iteration: 5, epoch: 30, best train: 0.8, best val: 0.589, lr: 0.09045
iteration: 5, epoch: 31, best train: 0.812, best val: 0.589, lr: 0.08987
iteration: 5, epoch: 32, best train: 0.815, best val: 0.589, lr: 0.08927
iteration: 5, epoch: 33, best train: 0.815, best val: 0.589, lr: 0.08865
iteration: 5, epoch: 34, best train: 0.815, best val: 0.589, lr: 0.08802
iteration: 5, epoch: 35, best train: 0.815, best val: 0.589, lr: 0.08738
iteration: 5, epoch: 36, best train: 0.815, best val: 0.589, lr: 0.08672
iteration: 5, epoch: 37, best train: 0.815, best val: 0.589, lr: 0.08604
iteration: 5, epoch: 38, best train: 0.815, best val: 0.589, lr: 0.08536
iteration: 5, epoch: 39, best train: 0.815, best val: 0.589, lr: 0.08465
iteration: 5, epoch: 40, best train: 0.847, best val: 0.589, lr: 0.08394
iteration: 5, epoch: 41, best train: 0.847, best val: 0.589, lr: 0.08321
iteration: 5, epoch: 42, best train: 0.847, best val: 0.589, lr: 0.08247
iteration: 5, epoch: 43, best train: 0.847, best val: 0.589, lr: 0.08172
iteration: 5, epoch: 44, best train: 0.847, best val: 0.5968, lr: 0.08095
iteration: 5, epoch: 45, best train: 0.85, best val: 0.5968, lr: 0.08018
iteration: 5, epoch: 46, best train: 0.85, best val: 0.5968, lr: 0.07939
iteration: 5, epoch: 47, best train: 0.85, best val: 0.5968, lr: 0.07859
iteration: 5, epoch: 48, best train: 0.85, best val: 0.6002, lr: 0.07778
iteration: 5, epoch: 49, best train: 0.874, best val: 0.6002, lr: 0.07696
iteration: 5, epoch: 50, best train: 0.874, best val: 0.6055, lr: 0.07612
iteration: 5, epoch: 51, best train: 0.886, best val: 0.6055, lr: 0.07528
iteration: 5, epoch: 52, best train: 0.886, best val: 0.6055, lr: 0.07443
iteration: 5, epoch: 53, best train: 0.886, best val: 0.6103, lr: 0.07357
iteration: 5, epoch: 54, best train: 0.886, best val: 0.6103, lr: 0.0727
iteration: 5, epoch: 55, best train: 0.886, best val: 0.6103, lr: 0.07182
iteration: 5, epoch: 56, best train: 0.886, best val: 0.6103, lr: 0.07093
iteration: 5, epoch: 57, best train: 0.886, best val: 0.6103, lr: 0.07004
iteration: 5, epoch: 58, best train: 0.886, best val: 0.6103, lr: 0.06913
iteration: 5, epoch: 59, best train: 0.886, best val: 0.6134, lr: 0.06822
iteration: 5, epoch: 60, best train: 0.886, best val: 0.6134, lr: 0.06731
iteration: 5, epoch: 61, best train: 0.898, best val: 0.6134, lr: 0.06638
iteration: 5, epoch: 62, best train: 0.898, best val: 0.6134, lr: 0.06545
iteration: 5, epoch: 63, best train: 0.898, best val: 0.6134, lr: 0.06451
iteration: 5, epoch: 64, best train: 0.898, best val: 0.6134, lr: 0.06357
iteration: 5, epoch: 65, best train: 0.898, best val: 0.625, lr: 0.06262
iteration: 5, epoch: 66, best train: 0.898, best val: 0.625, lr: 0.06167
iteration: 5, epoch: 67, best train: 0.898, best val: 0.625, lr: 0.06072
iteration: 5, epoch: 68, best train: 0.898, best val: 0.625, lr: 0.05975
iteration: 5, epoch: 69, best train: 0.898, best val: 0.625, lr: 0.05879
iteration: 5, epoch: 70, best train: 0.909, best val: 0.625, lr: 0.05782
iteration: 5, epoch: 71, best train: 0.909, best val: 0.6313, lr: 0.05685
iteration: 5, epoch: 72, best train: 0.909, best val: 0.6318, lr: 0.05588
iteration: 5, epoch: 73, best train: 0.909, best val: 0.6318, lr: 0.0549
iteration: 5, epoch: 74, best train: 0.909, best val: 0.6318, lr: 0.05392
iteration: 5, epoch: 75, best train: 0.909, best val: 0.6318, lr: 0.05294
iteration: 5, epoch: 76, best train: 0.909, best val: 0.6318, lr: 0.05196
iteration: 5, epoch: 77, best train: 0.909, best val: 0.6318, lr: 0.05098
iteration: 5, epoch: 78, best train: 0.909, best val: 0.6318, lr: 0.05
iteration: 5, epoch: 79, best train: 0.909, best val: 0.6318, lr: 0.04902
iteration: 5, epoch: 80, best train: 0.909, best val: 0.6318, lr: 0.04804
iteration: 5, epoch: 81, best train: 0.909, best val: 0.6318, lr: 0.04706
iteration: 5, epoch: 82, best train: 0.914, best val: 0.6389, lr: 0.04608
iteration: 5, epoch: 83, best train: 0.914, best val: 0.6389, lr: 0.0451
iteration: 5, epoch: 84, best train: 0.914, best val: 0.6389, lr: 0.04412
iteration: 5, epoch: 85, best train: 0.918, best val: 0.6389, lr: 0.04315
iteration: 5, epoch: 86, best train: 0.923, best val: 0.6389, lr: 0.04218
iteration: 5, epoch: 87, best train: 0.923, best val: 0.6389, lr: 0.04121
iteration: 5, epoch: 88, best train: 0.923, best val: 0.6393, lr: 0.04025
iteration: 5, epoch: 89, best train: 0.923, best val: 0.6393, lr: 0.03928
iteration: 5, epoch: 90, best train: 0.923, best val: 0.6393, lr: 0.03833
iteration: 5, epoch: 91, best train: 0.923, best val: 0.6393, lr: 0.03738
iteration: 5, epoch: 92, best train: 0.924, best val: 0.6393, lr: 0.03643
iteration: 5, epoch: 93, best train: 0.924, best val: 0.6393, lr: 0.03549
iteration: 5, epoch: 94, best train: 0.924, best val: 0.6393, lr: 0.03455
iteration: 5, epoch: 95, best train: 0.924, best val: 0.6393, lr: 0.03362
iteration: 5, epoch: 96, best train: 0.924, best val: 0.6393, lr: 0.03269
iteration: 5, epoch: 97, best train: 0.93, best val: 0.6393, lr: 0.03178
iteration: 5, epoch: 98, best train: 0.93, best val: 0.641, lr: 0.03087
iteration: 5, epoch: 99, best train: 0.93, best val: 0.641, lr: 0.02996
iteration: 5, epoch: 100, best train: 0.935, best val: 0.641, lr: 0.02907
iteration: 5, epoch: 101, best train: 0.936, best val: 0.6442, lr: 0.02818
iteration: 5, epoch: 102, best train: 0.936, best val: 0.6442, lr: 0.0273
iteration: 5, epoch: 103, best train: 0.936, best val: 0.6442, lr: 0.02643
iteration: 5, epoch: 104, best train: 0.936, best val: 0.6442, lr: 0.02557
iteration: 5, epoch: 105, best train: 0.936, best val: 0.6442, lr: 0.02472
iteration: 5, epoch: 106, best train: 0.936, best val: 0.6442, lr: 0.02388
iteration: 5, epoch: 107, best train: 0.936, best val: 0.6442, lr: 0.02304
iteration: 5, epoch: 108, best train: 0.936, best val: 0.6445, lr: 0.02222
iteration: 5, epoch: 109, best train: 0.937, best val: 0.6469, lr: 0.02141
iteration: 5, epoch: 110, best train: 0.955, best val: 0.6534, lr: 0.02061
iteration: 5, epoch: 111, best train: 0.955, best val: 0.6534, lr: 0.01982
iteration: 5, epoch: 112, best train: 0.955, best val: 0.6534, lr: 0.01905
iteration: 5, epoch: 113, best train: 0.955, best val: 0.6534, lr: 0.01828
iteration: 5, epoch: 114, best train: 0.955, best val: 0.6534, lr: 0.01753
iteration: 5, epoch: 115, best train: 0.955, best val: 0.6534, lr: 0.01679
iteration: 5, epoch: 116, best train: 0.955, best val: 0.6534, lr: 0.01606
iteration: 5, epoch: 117, best train: 0.955, best val: 0.6534, lr: 0.01535
iteration: 5, epoch: 118, best train: 0.955, best val: 0.6534, lr: 0.01464
iteration: 5, epoch: 119, best train: 0.955, best val: 0.6534, lr: 0.01396
iteration: 5, epoch: 120, best train: 0.955, best val: 0.6534, lr: 0.01328
iteration: 5, epoch: 121, best train: 0.955, best val: 0.6534, lr: 0.01262
iteration: 5, epoch: 122, best train: 0.955, best val: 0.6534, lr: 0.01198
iteration: 5, epoch: 123, best train: 0.957, best val: 0.6534, lr: 0.01135
iteration: 5, epoch: 124, best train: 0.957, best val: 0.6534, lr: 0.01073
iteration: 5, epoch: 125, best train: 0.957, best val: 0.6534, lr: 0.01013
iteration: 5, epoch: 126, best train: 0.957, best val: 0.6534, lr: 0.00955
iteration: 5, epoch: 127, best train: 0.957, best val: 0.6534, lr: 0.00898
iteration: 5, epoch: 128, best train: 0.957, best val: 0.6534, lr: 0.00843
iteration: 5, epoch: 129, best train: 0.957, best val: 0.6534, lr: 0.00789
iteration: 5, epoch: 130, best train: 0.957, best val: 0.6534, lr: 0.00737
iteration: 5, epoch: 131, best train: 0.957, best val: 0.6534, lr: 0.00686
iteration: 5, epoch: 132, best train: 0.957, best val: 0.6545, lr: 0.00638
iteration: 5, epoch: 133, best train: 0.957, best val: 0.6554, lr: 0.0059
iteration: 5, epoch: 134, best train: 0.957, best val: 0.6559, lr: 0.00545
iteration: 5, epoch: 135, best train: 0.959, best val: 0.6575, lr: 0.00501
iteration: 5, epoch: 136, best train: 0.959, best val: 0.6592, lr: 0.00459
iteration: 5, epoch: 137, best train: 0.959, best val: 0.6611, lr: 0.00419
iteration: 5, epoch: 138, best train: 0.959, best val: 0.6611, lr: 0.00381
iteration: 5, epoch: 139, best train: 0.959, best val: 0.6611, lr: 0.00344
iteration: 5, epoch: 140, best train: 0.959, best val: 0.6611, lr: 0.00309
iteration: 5, epoch: 141, best train: 0.959, best val: 0.6611, lr: 0.00276
iteration: 5, epoch: 142, best train: 0.959, best val: 0.6611, lr: 0.00245
iteration: 5, epoch: 143, best train: 0.96, best val: 0.6611, lr: 0.00215
iteration: 5, epoch: 144, best train: 0.96, best val: 0.6611, lr: 0.00188
iteration: 5, epoch: 145, best train: 0.96, best val: 0.6611, lr: 0.00162
iteration: 5, epoch: 146, best train: 0.96, best val: 0.6611, lr: 0.00138
iteration: 5, epoch: 147, best train: 0.96, best val: 0.6611, lr: 0.00116
iteration: 5, epoch: 148, best train: 0.96, best val: 0.6611, lr: 0.00096
iteration: 5, epoch: 149, best train: 0.96, best val: 0.6611, lr: 0.00078
iteration: 5, epoch: 150, best train: 0.96, best val: 0.6611, lr: 0.00062
iteration: 5, epoch: 151, best train: 0.96, best val: 0.6611, lr: 0.00047
iteration: 5, epoch: 152, best train: 0.96, best val: 0.6611, lr: 0.00035
iteration: 5, epoch: 153, best train: 0.96, best val: 0.6611, lr: 0.00024
iteration: 5, epoch: 154, best train: 0.96, best val: 0.6611, lr: 0.00015
iteration: 5, epoch: 155, best train: 0.96, best val: 0.6611, lr: 9e-05
iteration: 5, epoch: 156, best train: 0.96, best val: 0.6611, lr: 4e-05
iteration: 5, epoch: 157, best train: 0.96, best val: 0.6611, lr: 1e-05
iteration: 5, epoch: 158, best train: 0.96, best val: 0.6611, lr: 0.0
iteration: 5, epoch: 159, best train: 0.96, best val: 0.6611, lr: 1e-05
------------------------ Checkpoint 19  ------------------------
pre_conv.0.weight_mask 	|	active =  1066 	|	total =  1728 	|	layerwise sparsity =  0.6168981481481481
layer1.0.conv1.weight_mask 	|	active =  9663 	|	total =  36864 	|	layerwise sparsity =  0.2621256510416667
layer1.0.conv2.weight_mask 	|	active =  9663 	|	total =  36864 	|	layerwise sparsity =  0.2621256510416667
layer1.1.conv1.weight_mask 	|	active =  9663 	|	total =  36864 	|	layerwise sparsity =  0.2621256510416667
layer1.1.conv2.weight_mask 	|	active =  9663 	|	total =  36864 	|	layerwise sparsity =  0.2621256510416667
layer2.0.conv1.weight_mask 	|	active =  19327 	|	total =  73728 	|	layerwise sparsity =  0.2621392144097222
layer2.0.conv2.weight_mask 	|	active =  38654 	|	total =  147456 	|	layerwise sparsity =  0.2621392144097222
layer2.0.shortcut.0.weight_mask 	|	active =  5055 	|	total =  8192 	|	layerwise sparsity =  0.6170654296875
layer2.1.conv1.weight_mask 	|	active =  38654 	|	total =  147456 	|	layerwise sparsity =  0.2621392144097222
layer2.1.conv2.weight_mask 	|	active =  38654 	|	total =  147456 	|	layerwise sparsity =  0.2621392144097222
layer3.0.conv1.weight_mask 	|	active =  77310 	|	total =  294912 	|	layerwise sparsity =  0.26214599609375
layer3.0.conv2.weight_mask 	|	active =  121657 	|	total =  589824 	|	layerwise sparsity =  0.2062598334418403
layer3.0.shortcut.0.weight_mask 	|	active =  8590 	|	total =  32768 	|	layerwise sparsity =  0.26214599609375
layer3.1.conv1.weight_mask 	|	active =  124014 	|	total =  589824 	|	layerwise sparsity =  0.21025594075520834
layer3.1.conv2.weight_mask 	|	active =  127579 	|	total =  589824 	|	layerwise sparsity =  0.2163001166449653
layer4.0.conv1.weight_mask 	|	active =  286242 	|	total =  1179648 	|	layerwise sparsity =  0.24265034993489584
layer4.0.conv2.weight_mask 	|	active =  644872 	|	total =  2359296 	|	layerwise sparsity =  0.2733323838975694
layer4.0.shortcut.0.weight_mask 	|	active =  34360 	|	total =  131072 	|	layerwise sparsity =  0.26214599609375
layer4.1.conv1.weight_mask 	|	active =  665621 	|	total =  2359296 	|	layerwise sparsity =  0.282126956515842
layer4.1.conv2.weight_mask 	|	active =  692706 	|	total =  2359296 	|	layerwise sparsity =  0.29360707600911456
------------------------ Checkpoint 20  ------------------------
best_val =  0.6611
------------------------ Checkpoint 21  ------------------------
pruning state: 6
remaining weight at start of iteration =  26.552122941793844
iteration: 6, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 6, epoch: 1, best train: 0.29, best val: 0.1, lr: 0.09991
iteration: 6, epoch: 2, best train: 0.36, best val: 0.1762, lr: 0.09985
iteration: 6, epoch: 3, best train: 0.45, best val: 0.1762, lr: 0.09976
iteration: 6, epoch: 4, best train: 0.537, best val: 0.4317, lr: 0.09965
iteration: 6, epoch: 5, best train: 0.581, best val: 0.4317, lr: 0.09953
iteration: 6, epoch: 6, best train: 0.616, best val: 0.4317, lr: 0.09938
iteration: 6, epoch: 7, best train: 0.616, best val: 0.5191, lr: 0.09922
iteration: 6, epoch: 8, best train: 0.636, best val: 0.5191, lr: 0.09904
iteration: 6, epoch: 9, best train: 0.637, best val: 0.5191, lr: 0.09884
iteration: 6, epoch: 10, best train: 0.685, best val: 0.5434, lr: 0.09862
iteration: 6, epoch: 11, best train: 0.724, best val: 0.5434, lr: 0.09838
iteration: 6, epoch: 12, best train: 0.724, best val: 0.5434, lr: 0.09812
iteration: 6, epoch: 13, best train: 0.746, best val: 0.5442, lr: 0.09785
iteration: 6, epoch: 14, best train: 0.784, best val: 0.5442, lr: 0.09755
iteration: 6, epoch: 15, best train: 0.784, best val: 0.5558, lr: 0.09724
iteration: 6, epoch: 16, best train: 0.784, best val: 0.5558, lr: 0.09691
iteration: 6, epoch: 17, best train: 0.784, best val: 0.5558, lr: 0.09656
iteration: 6, epoch: 18, best train: 0.784, best val: 0.5558, lr: 0.09619
iteration: 6, epoch: 19, best train: 0.784, best val: 0.5788, lr: 0.09581
iteration: 6, epoch: 20, best train: 0.784, best val: 0.5908, lr: 0.09541
iteration: 6, epoch: 21, best train: 0.797, best val: 0.5908, lr: 0.09499
iteration: 6, epoch: 22, best train: 0.797, best val: 0.5908, lr: 0.09455
iteration: 6, epoch: 23, best train: 0.831, best val: 0.5908, lr: 0.0941
iteration: 6, epoch: 24, best train: 0.831, best val: 0.5908, lr: 0.09362
iteration: 6, epoch: 25, best train: 0.831, best val: 0.6152, lr: 0.09314
iteration: 6, epoch: 26, best train: 0.856, best val: 0.6152, lr: 0.09263
iteration: 6, epoch: 27, best train: 0.856, best val: 0.6152, lr: 0.09211
iteration: 6, epoch: 28, best train: 0.856, best val: 0.6152, lr: 0.09157
iteration: 6, epoch: 29, best train: 0.856, best val: 0.6152, lr: 0.09102
iteration: 6, epoch: 30, best train: 0.856, best val: 0.6152, lr: 0.09045
iteration: 6, epoch: 31, best train: 0.856, best val: 0.6186, lr: 0.08987
iteration: 6, epoch: 32, best train: 0.856, best val: 0.6186, lr: 0.08927
iteration: 6, epoch: 33, best train: 0.856, best val: 0.6186, lr: 0.08865
iteration: 6, epoch: 34, best train: 0.856, best val: 0.6186, lr: 0.08802
iteration: 6, epoch: 35, best train: 0.856, best val: 0.6186, lr: 0.08738
iteration: 6, epoch: 36, best train: 0.872, best val: 0.6186, lr: 0.08672
iteration: 6, epoch: 37, best train: 0.872, best val: 0.6186, lr: 0.08604
iteration: 6, epoch: 38, best train: 0.872, best val: 0.6199, lr: 0.08536
iteration: 6, epoch: 39, best train: 0.872, best val: 0.6199, lr: 0.08465
iteration: 6, epoch: 40, best train: 0.872, best val: 0.6199, lr: 0.08394
iteration: 6, epoch: 41, best train: 0.872, best val: 0.6199, lr: 0.08321
iteration: 6, epoch: 42, best train: 0.872, best val: 0.6199, lr: 0.08247
iteration: 6, epoch: 43, best train: 0.872, best val: 0.6199, lr: 0.08172
iteration: 6, epoch: 44, best train: 0.872, best val: 0.6199, lr: 0.08095
iteration: 6, epoch: 45, best train: 0.872, best val: 0.6199, lr: 0.08018
iteration: 6, epoch: 46, best train: 0.872, best val: 0.6307, lr: 0.07939
iteration: 6, epoch: 47, best train: 0.877, best val: 0.6307, lr: 0.07859
iteration: 6, epoch: 48, best train: 0.893, best val: 0.6394, lr: 0.07778
iteration: 6, epoch: 49, best train: 0.895, best val: 0.6394, lr: 0.07696
iteration: 6, epoch: 50, best train: 0.895, best val: 0.6394, lr: 0.07612
iteration: 6, epoch: 51, best train: 0.895, best val: 0.6394, lr: 0.07528
iteration: 6, epoch: 52, best train: 0.895, best val: 0.6394, lr: 0.07443
iteration: 6, epoch: 53, best train: 0.895, best val: 0.6394, lr: 0.07357
iteration: 6, epoch: 54, best train: 0.895, best val: 0.6394, lr: 0.0727
iteration: 6, epoch: 55, best train: 0.895, best val: 0.6394, lr: 0.07182
iteration: 6, epoch: 56, best train: 0.896, best val: 0.6394, lr: 0.07093
iteration: 6, epoch: 57, best train: 0.896, best val: 0.6394, lr: 0.07004
iteration: 6, epoch: 58, best train: 0.9, best val: 0.6394, lr: 0.06913
iteration: 6, epoch: 59, best train: 0.9, best val: 0.6394, lr: 0.06822
iteration: 6, epoch: 60, best train: 0.9, best val: 0.6394, lr: 0.06731
iteration: 6, epoch: 61, best train: 0.9, best val: 0.6394, lr: 0.06638
iteration: 6, epoch: 62, best train: 0.9, best val: 0.6394, lr: 0.06545
iteration: 6, epoch: 63, best train: 0.911, best val: 0.6475, lr: 0.06451
iteration: 6, epoch: 64, best train: 0.911, best val: 0.6475, lr: 0.06357
iteration: 6, epoch: 65, best train: 0.912, best val: 0.6475, lr: 0.06262
iteration: 6, epoch: 66, best train: 0.912, best val: 0.6475, lr: 0.06167
iteration: 6, epoch: 67, best train: 0.912, best val: 0.6475, lr: 0.06072
iteration: 6, epoch: 68, best train: 0.919, best val: 0.6475, lr: 0.05975
iteration: 6, epoch: 69, best train: 0.919, best val: 0.6475, lr: 0.05879
iteration: 6, epoch: 70, best train: 0.919, best val: 0.6475, lr: 0.05782
iteration: 6, epoch: 71, best train: 0.919, best val: 0.6475, lr: 0.05685
iteration: 6, epoch: 72, best train: 0.927, best val: 0.6475, lr: 0.05588
iteration: 6, epoch: 73, best train: 0.927, best val: 0.6475, lr: 0.0549
iteration: 6, epoch: 74, best train: 0.927, best val: 0.6475, lr: 0.05392
iteration: 6, epoch: 75, best train: 0.927, best val: 0.6475, lr: 0.05294
iteration: 6, epoch: 76, best train: 0.935, best val: 0.6475, lr: 0.05196
iteration: 6, epoch: 77, best train: 0.935, best val: 0.6475, lr: 0.05098
iteration: 6, epoch: 78, best train: 0.935, best val: 0.6475, lr: 0.05
iteration: 6, epoch: 79, best train: 0.935, best val: 0.6475, lr: 0.04902
iteration: 6, epoch: 80, best train: 0.935, best val: 0.6475, lr: 0.04804
iteration: 6, epoch: 81, best train: 0.935, best val: 0.6475, lr: 0.04706
iteration: 6, epoch: 82, best train: 0.935, best val: 0.6475, lr: 0.04608
iteration: 6, epoch: 83, best train: 0.935, best val: 0.6522, lr: 0.0451
iteration: 6, epoch: 84, best train: 0.935, best val: 0.6522, lr: 0.04412
iteration: 6, epoch: 85, best train: 0.935, best val: 0.6522, lr: 0.04315
iteration: 6, epoch: 86, best train: 0.935, best val: 0.6522, lr: 0.04218
iteration: 6, epoch: 87, best train: 0.935, best val: 0.6522, lr: 0.04121
iteration: 6, epoch: 88, best train: 0.935, best val: 0.6533, lr: 0.04025
iteration: 6, epoch: 89, best train: 0.944, best val: 0.6533, lr: 0.03928
iteration: 6, epoch: 90, best train: 0.944, best val: 0.6533, lr: 0.03833
iteration: 6, epoch: 91, best train: 0.944, best val: 0.6533, lr: 0.03738
iteration: 6, epoch: 92, best train: 0.944, best val: 0.6533, lr: 0.03643
iteration: 6, epoch: 93, best train: 0.944, best val: 0.6533, lr: 0.03549
iteration: 6, epoch: 94, best train: 0.944, best val: 0.6533, lr: 0.03455
iteration: 6, epoch: 95, best train: 0.944, best val: 0.6533, lr: 0.03362
iteration: 6, epoch: 96, best train: 0.944, best val: 0.6533, lr: 0.03269
iteration: 6, epoch: 97, best train: 0.944, best val: 0.6533, lr: 0.03178
iteration: 6, epoch: 98, best train: 0.944, best val: 0.6533, lr: 0.03087
iteration: 6, epoch: 99, best train: 0.944, best val: 0.6533, lr: 0.02996
iteration: 6, epoch: 100, best train: 0.944, best val: 0.6533, lr: 0.02907
iteration: 6, epoch: 101, best train: 0.944, best val: 0.6533, lr: 0.02818
iteration: 6, epoch: 102, best train: 0.945, best val: 0.6533, lr: 0.0273
iteration: 6, epoch: 103, best train: 0.945, best val: 0.6552, lr: 0.02643
iteration: 6, epoch: 104, best train: 0.945, best val: 0.6552, lr: 0.02557
iteration: 6, epoch: 105, best train: 0.945, best val: 0.6552, lr: 0.02472
iteration: 6, epoch: 106, best train: 0.947, best val: 0.6643, lr: 0.02388
iteration: 6, epoch: 107, best train: 0.958, best val: 0.6643, lr: 0.02304
iteration: 6, epoch: 108, best train: 0.958, best val: 0.6643, lr: 0.02222
iteration: 6, epoch: 109, best train: 0.958, best val: 0.6643, lr: 0.02141
iteration: 6, epoch: 110, best train: 0.958, best val: 0.6643, lr: 0.02061
iteration: 6, epoch: 111, best train: 0.958, best val: 0.6643, lr: 0.01982
iteration: 6, epoch: 112, best train: 0.958, best val: 0.6643, lr: 0.01905
iteration: 6, epoch: 113, best train: 0.958, best val: 0.6643, lr: 0.01828
iteration: 6, epoch: 114, best train: 0.958, best val: 0.6643, lr: 0.01753
iteration: 6, epoch: 115, best train: 0.958, best val: 0.6643, lr: 0.01679
iteration: 6, epoch: 116, best train: 0.958, best val: 0.6643, lr: 0.01606
iteration: 6, epoch: 117, best train: 0.958, best val: 0.6643, lr: 0.01535
iteration: 6, epoch: 118, best train: 0.958, best val: 0.6643, lr: 0.01464
iteration: 6, epoch: 119, best train: 0.958, best val: 0.6643, lr: 0.01396
iteration: 6, epoch: 120, best train: 0.958, best val: 0.6643, lr: 0.01328
iteration: 6, epoch: 121, best train: 0.958, best val: 0.6643, lr: 0.01262
iteration: 6, epoch: 122, best train: 0.958, best val: 0.6643, lr: 0.01198
iteration: 6, epoch: 123, best train: 0.958, best val: 0.6666, lr: 0.01135
iteration: 6, epoch: 124, best train: 0.958, best val: 0.6666, lr: 0.01073
iteration: 6, epoch: 125, best train: 0.958, best val: 0.6666, lr: 0.01013
iteration: 6, epoch: 126, best train: 0.958, best val: 0.6666, lr: 0.00955
iteration: 6, epoch: 127, best train: 0.958, best val: 0.6666, lr: 0.00898
iteration: 6, epoch: 128, best train: 0.958, best val: 0.6666, lr: 0.00843
iteration: 6, epoch: 129, best train: 0.958, best val: 0.6691, lr: 0.00789
iteration: 6, epoch: 130, best train: 0.958, best val: 0.6716, lr: 0.00737
iteration: 6, epoch: 131, best train: 0.958, best val: 0.673, lr: 0.00686
iteration: 6, epoch: 132, best train: 0.958, best val: 0.673, lr: 0.00638
iteration: 6, epoch: 133, best train: 0.958, best val: 0.673, lr: 0.0059
iteration: 6, epoch: 134, best train: 0.958, best val: 0.673, lr: 0.00545
iteration: 6, epoch: 135, best train: 0.958, best val: 0.673, lr: 0.00501
iteration: 6, epoch: 136, best train: 0.966, best val: 0.673, lr: 0.00459
iteration: 6, epoch: 137, best train: 0.966, best val: 0.673, lr: 0.00419
iteration: 6, epoch: 138, best train: 0.966, best val: 0.673, lr: 0.00381
iteration: 6, epoch: 139, best train: 0.966, best val: 0.673, lr: 0.00344
iteration: 6, epoch: 140, best train: 0.966, best val: 0.673, lr: 0.00309
iteration: 6, epoch: 141, best train: 0.966, best val: 0.673, lr: 0.00276
iteration: 6, epoch: 142, best train: 0.973, best val: 0.673, lr: 0.00245
iteration: 6, epoch: 143, best train: 0.973, best val: 0.673, lr: 0.00215
iteration: 6, epoch: 144, best train: 0.973, best val: 0.673, lr: 0.00188
iteration: 6, epoch: 145, best train: 0.973, best val: 0.6732, lr: 0.00162
iteration: 6, epoch: 146, best train: 0.973, best val: 0.6732, lr: 0.00138
iteration: 6, epoch: 147, best train: 0.973, best val: 0.6732, lr: 0.00116
iteration: 6, epoch: 148, best train: 0.973, best val: 0.6743, lr: 0.00096
iteration: 6, epoch: 149, best train: 0.973, best val: 0.6743, lr: 0.00078
iteration: 6, epoch: 150, best train: 0.973, best val: 0.6743, lr: 0.00062
iteration: 6, epoch: 151, best train: 0.973, best val: 0.6743, lr: 0.00047
iteration: 6, epoch: 152, best train: 0.973, best val: 0.6743, lr: 0.00035
iteration: 6, epoch: 153, best train: 0.973, best val: 0.6743, lr: 0.00024
iteration: 6, epoch: 154, best train: 0.973, best val: 0.6743, lr: 0.00015
iteration: 6, epoch: 155, best train: 0.973, best val: 0.6743, lr: 9e-05
iteration: 6, epoch: 156, best train: 0.973, best val: 0.6743, lr: 4e-05
iteration: 6, epoch: 157, best train: 0.973, best val: 0.6743, lr: 1e-05
iteration: 6, epoch: 158, best train: 0.973, best val: 0.6743, lr: 0.0
iteration: 6, epoch: 159, best train: 0.973, best val: 0.6743, lr: 1e-05
------------------------ Checkpoint 22  ------------------------
pre_conv.0.weight_mask 	|	active =  984 	|	total =  1728 	|	layerwise sparsity =  0.5694444444444444
layer1.0.conv1.weight_mask 	|	active =  7730 	|	total =  36864 	|	layerwise sparsity =  0.2096896701388889
layer1.0.conv2.weight_mask 	|	active =  7730 	|	total =  36864 	|	layerwise sparsity =  0.2096896701388889
layer1.1.conv1.weight_mask 	|	active =  7730 	|	total =  36864 	|	layerwise sparsity =  0.2096896701388889
layer1.1.conv2.weight_mask 	|	active =  7730 	|	total =  36864 	|	layerwise sparsity =  0.2096896701388889
layer2.0.conv1.weight_mask 	|	active =  15462 	|	total =  73728 	|	layerwise sparsity =  0.209716796875
layer2.0.conv2.weight_mask 	|	active =  30923 	|	total =  147456 	|	layerwise sparsity =  0.2097100151909722
layer2.0.shortcut.0.weight_mask 	|	active =  4664 	|	total =  8192 	|	layerwise sparsity =  0.5693359375
layer2.1.conv1.weight_mask 	|	active =  30923 	|	total =  147456 	|	layerwise sparsity =  0.2097100151909722
layer2.1.conv2.weight_mask 	|	active =  30923 	|	total =  147456 	|	layerwise sparsity =  0.2097100151909722
layer3.0.conv1.weight_mask 	|	active =  61848 	|	total =  294912 	|	layerwise sparsity =  0.209716796875
layer3.0.conv2.weight_mask 	|	active =  93513 	|	total =  589824 	|	layerwise sparsity =  0.15854390462239584
layer3.0.shortcut.0.weight_mask 	|	active =  6872 	|	total =  32768 	|	layerwise sparsity =  0.209716796875
layer3.1.conv1.weight_mask 	|	active =  95630 	|	total =  589824 	|	layerwise sparsity =  0.1621331108940972
layer3.1.conv2.weight_mask 	|	active =  98845 	|	total =  589824 	|	layerwise sparsity =  0.1675838894314236
layer4.0.conv1.weight_mask 	|	active =  226063 	|	total =  1179648 	|	layerwise sparsity =  0.19163597954644096
layer4.0.conv2.weight_mask 	|	active =  519504 	|	total =  2359296 	|	layerwise sparsity =  0.22019449869791666
layer4.0.shortcut.0.weight_mask 	|	active =  27488 	|	total =  131072 	|	layerwise sparsity =  0.209716796875
layer4.1.conv1.weight_mask 	|	active =  539057 	|	total =  2359296 	|	layerwise sparsity =  0.22848214043511283
layer4.1.conv2.weight_mask 	|	active =  564733 	|	total =  2359296 	|	layerwise sparsity =  0.23936504787868923
------------------------ Checkpoint 23  ------------------------
best_val =  0.6743000000000001
------------------------ Checkpoint 24  ------------------------
pruning state: 7
remaining weight at start of iteration =  21.31286454121574
iteration: 7, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 7, epoch: 1, best train: 0.268, best val: 0.1, lr: 0.09991
iteration: 7, epoch: 2, best train: 0.441, best val: 0.1108, lr: 0.09985
iteration: 7, epoch: 3, best train: 0.605, best val: 0.2665, lr: 0.09976
iteration: 7, epoch: 4, best train: 0.605, best val: 0.4056, lr: 0.09965
iteration: 7, epoch: 5, best train: 0.605, best val: 0.4056, lr: 0.09953
iteration: 7, epoch: 6, best train: 0.658, best val: 0.4992, lr: 0.09938
iteration: 7, epoch: 7, best train: 0.661, best val: 0.4992, lr: 0.09922
iteration: 7, epoch: 8, best train: 0.677, best val: 0.4992, lr: 0.09904
iteration: 7, epoch: 9, best train: 0.683, best val: 0.4992, lr: 0.09884
iteration: 7, epoch: 10, best train: 0.703, best val: 0.5368, lr: 0.09862
iteration: 7, epoch: 11, best train: 0.737, best val: 0.5528, lr: 0.09838
iteration: 7, epoch: 12, best train: 0.737, best val: 0.5528, lr: 0.09812
iteration: 7, epoch: 13, best train: 0.764, best val: 0.5626, lr: 0.09785
iteration: 7, epoch: 14, best train: 0.764, best val: 0.5626, lr: 0.09755
iteration: 7, epoch: 15, best train: 0.775, best val: 0.5863, lr: 0.09724
iteration: 7, epoch: 16, best train: 0.793, best val: 0.5863, lr: 0.09691
iteration: 7, epoch: 17, best train: 0.802, best val: 0.5863, lr: 0.09656
iteration: 7, epoch: 18, best train: 0.802, best val: 0.5863, lr: 0.09619
iteration: 7, epoch: 19, best train: 0.802, best val: 0.5863, lr: 0.09581
iteration: 7, epoch: 20, best train: 0.814, best val: 0.5863, lr: 0.09541
iteration: 7, epoch: 21, best train: 0.814, best val: 0.5977, lr: 0.09499
iteration: 7, epoch: 22, best train: 0.844, best val: 0.5977, lr: 0.09455
iteration: 7, epoch: 23, best train: 0.844, best val: 0.5977, lr: 0.0941
iteration: 7, epoch: 24, best train: 0.844, best val: 0.5977, lr: 0.09362
iteration: 7, epoch: 25, best train: 0.844, best val: 0.5977, lr: 0.09314
iteration: 7, epoch: 26, best train: 0.844, best val: 0.5977, lr: 0.09263
iteration: 7, epoch: 27, best train: 0.844, best val: 0.5977, lr: 0.09211
iteration: 7, epoch: 28, best train: 0.844, best val: 0.5977, lr: 0.09157
iteration: 7, epoch: 29, best train: 0.844, best val: 0.5977, lr: 0.09102
iteration: 7, epoch: 30, best train: 0.844, best val: 0.5977, lr: 0.09045
iteration: 7, epoch: 31, best train: 0.847, best val: 0.5977, lr: 0.08987
iteration: 7, epoch: 32, best train: 0.86, best val: 0.6047, lr: 0.08927
iteration: 7, epoch: 33, best train: 0.86, best val: 0.6047, lr: 0.08865
iteration: 7, epoch: 34, best train: 0.86, best val: 0.6047, lr: 0.08802
iteration: 7, epoch: 35, best train: 0.86, best val: 0.6112, lr: 0.08738
iteration: 7, epoch: 36, best train: 0.875, best val: 0.6112, lr: 0.08672
iteration: 7, epoch: 37, best train: 0.875, best val: 0.6112, lr: 0.08604
iteration: 7, epoch: 38, best train: 0.875, best val: 0.6112, lr: 0.08536
iteration: 7, epoch: 39, best train: 0.875, best val: 0.6253, lr: 0.08465
iteration: 7, epoch: 40, best train: 0.895, best val: 0.6277, lr: 0.08394
iteration: 7, epoch: 41, best train: 0.895, best val: 0.6362, lr: 0.08321
iteration: 7, epoch: 42, best train: 0.895, best val: 0.6362, lr: 0.08247
iteration: 7, epoch: 43, best train: 0.895, best val: 0.6362, lr: 0.08172
iteration: 7, epoch: 44, best train: 0.895, best val: 0.6362, lr: 0.08095
iteration: 7, epoch: 45, best train: 0.895, best val: 0.6362, lr: 0.08018
iteration: 7, epoch: 46, best train: 0.895, best val: 0.6362, lr: 0.07939
iteration: 7, epoch: 47, best train: 0.895, best val: 0.6362, lr: 0.07859
iteration: 7, epoch: 48, best train: 0.895, best val: 0.6362, lr: 0.07778
iteration: 7, epoch: 49, best train: 0.895, best val: 0.6362, lr: 0.07696
iteration: 7, epoch: 50, best train: 0.895, best val: 0.6362, lr: 0.07612
iteration: 7, epoch: 51, best train: 0.895, best val: 0.6362, lr: 0.07528
iteration: 7, epoch: 52, best train: 0.895, best val: 0.6362, lr: 0.07443
iteration: 7, epoch: 53, best train: 0.895, best val: 0.6365, lr: 0.07357
iteration: 7, epoch: 54, best train: 0.895, best val: 0.6423, lr: 0.0727
iteration: 7, epoch: 55, best train: 0.904, best val: 0.6423, lr: 0.07182
iteration: 7, epoch: 56, best train: 0.904, best val: 0.6423, lr: 0.07093
iteration: 7, epoch: 57, best train: 0.904, best val: 0.6423, lr: 0.07004
iteration: 7, epoch: 58, best train: 0.904, best val: 0.6423, lr: 0.06913
iteration: 7, epoch: 59, best train: 0.904, best val: 0.6423, lr: 0.06822
iteration: 7, epoch: 60, best train: 0.904, best val: 0.6423, lr: 0.06731
iteration: 7, epoch: 61, best train: 0.904, best val: 0.6423, lr: 0.06638
iteration: 7, epoch: 62, best train: 0.904, best val: 0.6501, lr: 0.06545
iteration: 7, epoch: 63, best train: 0.904, best val: 0.6501, lr: 0.06451
iteration: 7, epoch: 64, best train: 0.91, best val: 0.6501, lr: 0.06357
iteration: 7, epoch: 65, best train: 0.913, best val: 0.6501, lr: 0.06262
iteration: 7, epoch: 66, best train: 0.913, best val: 0.6501, lr: 0.06167
iteration: 7, epoch: 67, best train: 0.913, best val: 0.6501, lr: 0.06072
iteration: 7, epoch: 68, best train: 0.923, best val: 0.6501, lr: 0.05975
iteration: 7, epoch: 69, best train: 0.923, best val: 0.6501, lr: 0.05879
iteration: 7, epoch: 70, best train: 0.923, best val: 0.6501, lr: 0.05782
iteration: 7, epoch: 71, best train: 0.923, best val: 0.6501, lr: 0.05685
iteration: 7, epoch: 72, best train: 0.929, best val: 0.6501, lr: 0.05588
iteration: 7, epoch: 73, best train: 0.929, best val: 0.6501, lr: 0.0549
iteration: 7, epoch: 74, best train: 0.93, best val: 0.6501, lr: 0.05392
iteration: 7, epoch: 75, best train: 0.93, best val: 0.6501, lr: 0.05294
iteration: 7, epoch: 76, best train: 0.93, best val: 0.6501, lr: 0.05196
iteration: 7, epoch: 77, best train: 0.938, best val: 0.6501, lr: 0.05098
iteration: 7, epoch: 78, best train: 0.938, best val: 0.6501, lr: 0.05
iteration: 7, epoch: 79, best train: 0.938, best val: 0.6501, lr: 0.04902
iteration: 7, epoch: 80, best train: 0.938, best val: 0.6501, lr: 0.04804
iteration: 7, epoch: 81, best train: 0.938, best val: 0.6501, lr: 0.04706
iteration: 7, epoch: 82, best train: 0.938, best val: 0.6501, lr: 0.04608
iteration: 7, epoch: 83, best train: 0.938, best val: 0.6509, lr: 0.0451
iteration: 7, epoch: 84, best train: 0.938, best val: 0.6509, lr: 0.04412
iteration: 7, epoch: 85, best train: 0.938, best val: 0.6509, lr: 0.04315
iteration: 7, epoch: 86, best train: 0.946, best val: 0.6509, lr: 0.04218
iteration: 7, epoch: 87, best train: 0.946, best val: 0.654, lr: 0.04121
iteration: 7, epoch: 88, best train: 0.946, best val: 0.654, lr: 0.04025
iteration: 7, epoch: 89, best train: 0.946, best val: 0.654, lr: 0.03928
iteration: 7, epoch: 90, best train: 0.946, best val: 0.654, lr: 0.03833
iteration: 7, epoch: 91, best train: 0.946, best val: 0.654, lr: 0.03738
iteration: 7, epoch: 92, best train: 0.946, best val: 0.6573, lr: 0.03643
iteration: 7, epoch: 93, best train: 0.946, best val: 0.6586, lr: 0.03549
iteration: 7, epoch: 94, best train: 0.954, best val: 0.6586, lr: 0.03455
iteration: 7, epoch: 95, best train: 0.954, best val: 0.6586, lr: 0.03362
iteration: 7, epoch: 96, best train: 0.954, best val: 0.6606, lr: 0.03269
iteration: 7, epoch: 97, best train: 0.963, best val: 0.6608, lr: 0.03178
iteration: 7, epoch: 98, best train: 0.963, best val: 0.6608, lr: 0.03087
iteration: 7, epoch: 99, best train: 0.963, best val: 0.6608, lr: 0.02996
iteration: 7, epoch: 100, best train: 0.963, best val: 0.6608, lr: 0.02907
iteration: 7, epoch: 101, best train: 0.963, best val: 0.6608, lr: 0.02818
iteration: 7, epoch: 102, best train: 0.963, best val: 0.6608, lr: 0.0273
iteration: 7, epoch: 103, best train: 0.963, best val: 0.6608, lr: 0.02643
iteration: 7, epoch: 104, best train: 0.963, best val: 0.6608, lr: 0.02557
iteration: 7, epoch: 105, best train: 0.963, best val: 0.6608, lr: 0.02472
iteration: 7, epoch: 106, best train: 0.963, best val: 0.6648, lr: 0.02388
iteration: 7, epoch: 107, best train: 0.963, best val: 0.6648, lr: 0.02304
iteration: 7, epoch: 108, best train: 0.963, best val: 0.6653, lr: 0.02222
iteration: 7, epoch: 109, best train: 0.963, best val: 0.6706, lr: 0.02141
iteration: 7, epoch: 110, best train: 0.963, best val: 0.6706, lr: 0.02061
iteration: 7, epoch: 111, best train: 0.963, best val: 0.6706, lr: 0.01982
iteration: 7, epoch: 112, best train: 0.963, best val: 0.6713, lr: 0.01905
iteration: 7, epoch: 113, best train: 0.963, best val: 0.6726, lr: 0.01828
iteration: 7, epoch: 114, best train: 0.963, best val: 0.6726, lr: 0.01753
iteration: 7, epoch: 115, best train: 0.963, best val: 0.6726, lr: 0.01679
iteration: 7, epoch: 116, best train: 0.963, best val: 0.6726, lr: 0.01606
iteration: 7, epoch: 117, best train: 0.963, best val: 0.6726, lr: 0.01535
iteration: 7, epoch: 118, best train: 0.963, best val: 0.6726, lr: 0.01464
iteration: 7, epoch: 119, best train: 0.963, best val: 0.6727, lr: 0.01396
iteration: 7, epoch: 120, best train: 0.963, best val: 0.6727, lr: 0.01328
iteration: 7, epoch: 121, best train: 0.963, best val: 0.6727, lr: 0.01262
iteration: 7, epoch: 122, best train: 0.963, best val: 0.6727, lr: 0.01198
iteration: 7, epoch: 123, best train: 0.963, best val: 0.673, lr: 0.01135
iteration: 7, epoch: 124, best train: 0.963, best val: 0.673, lr: 0.01073
iteration: 7, epoch: 125, best train: 0.963, best val: 0.675, lr: 0.01013
iteration: 7, epoch: 126, best train: 0.963, best val: 0.6753, lr: 0.00955
iteration: 7, epoch: 127, best train: 0.963, best val: 0.6753, lr: 0.00898
iteration: 7, epoch: 128, best train: 0.963, best val: 0.6753, lr: 0.00843
iteration: 7, epoch: 129, best train: 0.97, best val: 0.6753, lr: 0.00789
iteration: 7, epoch: 130, best train: 0.97, best val: 0.6753, lr: 0.00737
iteration: 7, epoch: 131, best train: 0.97, best val: 0.6753, lr: 0.00686
iteration: 7, epoch: 132, best train: 0.97, best val: 0.6753, lr: 0.00638
iteration: 7, epoch: 133, best train: 0.97, best val: 0.6753, lr: 0.0059
iteration: 7, epoch: 134, best train: 0.97, best val: 0.6753, lr: 0.00545
iteration: 7, epoch: 135, best train: 0.97, best val: 0.6753, lr: 0.00501
iteration: 7, epoch: 136, best train: 0.97, best val: 0.6775, lr: 0.00459
iteration: 7, epoch: 137, best train: 0.97, best val: 0.6775, lr: 0.00419
iteration: 7, epoch: 138, best train: 0.97, best val: 0.6775, lr: 0.00381
iteration: 7, epoch: 139, best train: 0.97, best val: 0.6775, lr: 0.00344
iteration: 7, epoch: 140, best train: 0.97, best val: 0.6775, lr: 0.00309
iteration: 7, epoch: 141, best train: 0.97, best val: 0.6775, lr: 0.00276
iteration: 7, epoch: 142, best train: 0.97, best val: 0.6775, lr: 0.00245
iteration: 7, epoch: 143, best train: 0.97, best val: 0.6775, lr: 0.00215
iteration: 7, epoch: 144, best train: 0.97, best val: 0.6775, lr: 0.00188
iteration: 7, epoch: 145, best train: 0.97, best val: 0.6775, lr: 0.00162
iteration: 7, epoch: 146, best train: 0.97, best val: 0.6775, lr: 0.00138
iteration: 7, epoch: 147, best train: 0.97, best val: 0.6775, lr: 0.00116
iteration: 7, epoch: 148, best train: 0.97, best val: 0.6775, lr: 0.00096
iteration: 7, epoch: 149, best train: 0.97, best val: 0.6782, lr: 0.00078
iteration: 7, epoch: 150, best train: 0.97, best val: 0.6782, lr: 0.00062
iteration: 7, epoch: 151, best train: 0.974, best val: 0.6782, lr: 0.00047
iteration: 7, epoch: 152, best train: 0.974, best val: 0.6782, lr: 0.00035
iteration: 7, epoch: 153, best train: 0.974, best val: 0.6782, lr: 0.00024
iteration: 7, epoch: 154, best train: 0.974, best val: 0.6782, lr: 0.00015
iteration: 7, epoch: 155, best train: 0.974, best val: 0.6782, lr: 9e-05
iteration: 7, epoch: 156, best train: 0.974, best val: 0.6788, lr: 4e-05
iteration: 7, epoch: 157, best train: 0.974, best val: 0.6788, lr: 1e-05
iteration: 7, epoch: 158, best train: 0.974, best val: 0.6788, lr: 0.0
iteration: 7, epoch: 159, best train: 0.974, best val: 0.6788, lr: 1e-05
------------------------ Checkpoint 25  ------------------------
pre_conv.0.weight_mask 	|	active =  908 	|	total =  1728 	|	layerwise sparsity =  0.5254629629629629
layer1.0.conv1.weight_mask 	|	active =  6184 	|	total =  36864 	|	layerwise sparsity =  0.1677517361111111
layer1.0.conv2.weight_mask 	|	active =  6184 	|	total =  36864 	|	layerwise sparsity =  0.1677517361111111
layer1.1.conv1.weight_mask 	|	active =  6184 	|	total =  36864 	|	layerwise sparsity =  0.1677517361111111
layer1.1.conv2.weight_mask 	|	active =  6184 	|	total =  36864 	|	layerwise sparsity =  0.1677517361111111
layer2.0.conv1.weight_mask 	|	active =  12370 	|	total =  73728 	|	layerwise sparsity =  0.1677788628472222
layer2.0.conv2.weight_mask 	|	active =  24738 	|	total =  147456 	|	layerwise sparsity =  0.16776529947916666
layer2.0.shortcut.0.weight_mask 	|	active =  4303 	|	total =  8192 	|	layerwise sparsity =  0.5252685546875
layer2.1.conv1.weight_mask 	|	active =  24738 	|	total =  147456 	|	layerwise sparsity =  0.16776529947916666
layer2.1.conv2.weight_mask 	|	active =  24738 	|	total =  147456 	|	layerwise sparsity =  0.16776529947916666
layer3.0.conv1.weight_mask 	|	active =  49478 	|	total =  294912 	|	layerwise sparsity =  0.16777208116319445
layer3.0.conv2.weight_mask 	|	active =  71880 	|	total =  589824 	|	layerwise sparsity =  0.12186686197916667
layer3.0.shortcut.0.weight_mask 	|	active =  5498 	|	total =  32768 	|	layerwise sparsity =  0.16778564453125
layer3.1.conv1.weight_mask 	|	active =  73743 	|	total =  589824 	|	layerwise sparsity =  0.12502543131510416
layer3.1.conv2.weight_mask 	|	active =  76583 	|	total =  589824 	|	layerwise sparsity =  0.1298404269748264
layer4.0.conv1.weight_mask 	|	active =  178536 	|	total =  1179648 	|	layerwise sparsity =  0.15134684244791666
layer4.0.conv2.weight_mask 	|	active =  418508 	|	total =  2359296 	|	layerwise sparsity =  0.1773868136935764
layer4.0.shortcut.0.weight_mask 	|	active =  21990 	|	total =  131072 	|	layerwise sparsity =  0.1677703857421875
layer4.1.conv1.weight_mask 	|	active =  436558 	|	total =  2359296 	|	layerwise sparsity =  0.1850374009874132
layer4.1.conv2.weight_mask 	|	active =  460402 	|	total =  2359296 	|	layerwise sparsity =  0.19514380560980904
------------------------ Checkpoint 26  ------------------------
best_val =  0.6792
------------------------ Checkpoint 27  ------------------------
pruning state: 8
remaining weight at start of iteration =  17.11324757832797
iteration: 8, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 8, epoch: 1, best train: 0.402, best val: 0.1, lr: 0.09991
iteration: 8, epoch: 2, best train: 0.518, best val: 0.1, lr: 0.09985
iteration: 8, epoch: 3, best train: 0.527, best val: 0.3091, lr: 0.09976
iteration: 8, epoch: 4, best train: 0.598, best val: 0.3608, lr: 0.09965
iteration: 8, epoch: 5, best train: 0.612, best val: 0.4915, lr: 0.09953
iteration: 8, epoch: 6, best train: 0.674, best val: 0.508, lr: 0.09938
iteration: 8, epoch: 7, best train: 0.722, best val: 0.5193, lr: 0.09922
iteration: 8, epoch: 8, best train: 0.729, best val: 0.5193, lr: 0.09904
iteration: 8, epoch: 9, best train: 0.729, best val: 0.5538, lr: 0.09884
iteration: 8, epoch: 10, best train: 0.768, best val: 0.5792, lr: 0.09862
iteration: 8, epoch: 11, best train: 0.782, best val: 0.5809, lr: 0.09838
iteration: 8, epoch: 12, best train: 0.782, best val: 0.5809, lr: 0.09812
iteration: 8, epoch: 13, best train: 0.803, best val: 0.6081, lr: 0.09785
iteration: 8, epoch: 14, best train: 0.814, best val: 0.6081, lr: 0.09755
iteration: 8, epoch: 15, best train: 0.814, best val: 0.6081, lr: 0.09724
iteration: 8, epoch: 16, best train: 0.815, best val: 0.6081, lr: 0.09691
iteration: 8, epoch: 17, best train: 0.815, best val: 0.6081, lr: 0.09656
iteration: 8, epoch: 18, best train: 0.815, best val: 0.6081, lr: 0.09619
iteration: 8, epoch: 19, best train: 0.82, best val: 0.6091, lr: 0.09581
iteration: 8, epoch: 20, best train: 0.826, best val: 0.6091, lr: 0.09541
iteration: 8, epoch: 21, best train: 0.827, best val: 0.6091, lr: 0.09499
iteration: 8, epoch: 22, best train: 0.844, best val: 0.6091, lr: 0.09455
iteration: 8, epoch: 23, best train: 0.844, best val: 0.6185, lr: 0.0941
iteration: 8, epoch: 24, best train: 0.844, best val: 0.6185, lr: 0.09362
iteration: 8, epoch: 25, best train: 0.847, best val: 0.6316, lr: 0.09314
iteration: 8, epoch: 26, best train: 0.847, best val: 0.6316, lr: 0.09263
iteration: 8, epoch: 27, best train: 0.864, best val: 0.6316, lr: 0.09211
iteration: 8, epoch: 28, best train: 0.864, best val: 0.6316, lr: 0.09157
iteration: 8, epoch: 29, best train: 0.864, best val: 0.6316, lr: 0.09102
iteration: 8, epoch: 30, best train: 0.864, best val: 0.6316, lr: 0.09045
iteration: 8, epoch: 31, best train: 0.864, best val: 0.6316, lr: 0.08987
iteration: 8, epoch: 32, best train: 0.872, best val: 0.6352, lr: 0.08927
iteration: 8, epoch: 33, best train: 0.872, best val: 0.6352, lr: 0.08865
iteration: 8, epoch: 34, best train: 0.872, best val: 0.6352, lr: 0.08802
iteration: 8, epoch: 35, best train: 0.872, best val: 0.6352, lr: 0.08738
iteration: 8, epoch: 36, best train: 0.874, best val: 0.6352, lr: 0.08672
iteration: 8, epoch: 37, best train: 0.874, best val: 0.6352, lr: 0.08604
iteration: 8, epoch: 38, best train: 0.874, best val: 0.6352, lr: 0.08536
iteration: 8, epoch: 39, best train: 0.883, best val: 0.6352, lr: 0.08465
iteration: 8, epoch: 40, best train: 0.888, best val: 0.6352, lr: 0.08394
iteration: 8, epoch: 41, best train: 0.9, best val: 0.6352, lr: 0.08321
iteration: 8, epoch: 42, best train: 0.9, best val: 0.6352, lr: 0.08247
iteration: 8, epoch: 43, best train: 0.9, best val: 0.6352, lr: 0.08172
iteration: 8, epoch: 44, best train: 0.9, best val: 0.6352, lr: 0.08095
iteration: 8, epoch: 45, best train: 0.9, best val: 0.6352, lr: 0.08018
iteration: 8, epoch: 46, best train: 0.9, best val: 0.6352, lr: 0.07939
iteration: 8, epoch: 47, best train: 0.9, best val: 0.6405, lr: 0.07859
iteration: 8, epoch: 48, best train: 0.9, best val: 0.6405, lr: 0.07778
iteration: 8, epoch: 49, best train: 0.9, best val: 0.6405, lr: 0.07696
iteration: 8, epoch: 50, best train: 0.906, best val: 0.6405, lr: 0.07612
iteration: 8, epoch: 51, best train: 0.908, best val: 0.6505, lr: 0.07528
iteration: 8, epoch: 52, best train: 0.912, best val: 0.6505, lr: 0.07443
iteration: 8, epoch: 53, best train: 0.912, best val: 0.6505, lr: 0.07357
iteration: 8, epoch: 54, best train: 0.915, best val: 0.6505, lr: 0.0727
iteration: 8, epoch: 55, best train: 0.915, best val: 0.6505, lr: 0.07182
iteration: 8, epoch: 56, best train: 0.915, best val: 0.6505, lr: 0.07093
iteration: 8, epoch: 57, best train: 0.92, best val: 0.6505, lr: 0.07004
iteration: 8, epoch: 58, best train: 0.92, best val: 0.6505, lr: 0.06913
iteration: 8, epoch: 59, best train: 0.92, best val: 0.6505, lr: 0.06822
iteration: 8, epoch: 60, best train: 0.92, best val: 0.6505, lr: 0.06731
iteration: 8, epoch: 61, best train: 0.92, best val: 0.6505, lr: 0.06638
iteration: 8, epoch: 62, best train: 0.92, best val: 0.6505, lr: 0.06545
iteration: 8, epoch: 63, best train: 0.92, best val: 0.6505, lr: 0.06451
iteration: 8, epoch: 64, best train: 0.92, best val: 0.6505, lr: 0.06357
iteration: 8, epoch: 65, best train: 0.92, best val: 0.6505, lr: 0.06262
iteration: 8, epoch: 66, best train: 0.92, best val: 0.6505, lr: 0.06167
iteration: 8, epoch: 67, best train: 0.92, best val: 0.6505, lr: 0.06072
iteration: 8, epoch: 68, best train: 0.92, best val: 0.6505, lr: 0.05975
iteration: 8, epoch: 69, best train: 0.923, best val: 0.6529, lr: 0.05879
iteration: 8, epoch: 70, best train: 0.923, best val: 0.6529, lr: 0.05782
iteration: 8, epoch: 71, best train: 0.923, best val: 0.6529, lr: 0.05685
iteration: 8, epoch: 72, best train: 0.93, best val: 0.6601, lr: 0.05588
iteration: 8, epoch: 73, best train: 0.932, best val: 0.6601, lr: 0.0549
iteration: 8, epoch: 74, best train: 0.947, best val: 0.6601, lr: 0.05392
iteration: 8, epoch: 75, best train: 0.947, best val: 0.6601, lr: 0.05294
iteration: 8, epoch: 76, best train: 0.947, best val: 0.6601, lr: 0.05196
iteration: 8, epoch: 77, best train: 0.947, best val: 0.6601, lr: 0.05098
iteration: 8, epoch: 78, best train: 0.947, best val: 0.6601, lr: 0.05
iteration: 8, epoch: 79, best train: 0.947, best val: 0.6601, lr: 0.04902
iteration: 8, epoch: 80, best train: 0.947, best val: 0.6601, lr: 0.04804
iteration: 8, epoch: 81, best train: 0.947, best val: 0.6601, lr: 0.04706
iteration: 8, epoch: 82, best train: 0.947, best val: 0.6601, lr: 0.04608
iteration: 8, epoch: 83, best train: 0.947, best val: 0.6616, lr: 0.0451
iteration: 8, epoch: 84, best train: 0.947, best val: 0.6627, lr: 0.04412
iteration: 8, epoch: 85, best train: 0.947, best val: 0.6749, lr: 0.04315
iteration: 8, epoch: 86, best train: 0.948, best val: 0.6749, lr: 0.04218
iteration: 8, epoch: 87, best train: 0.948, best val: 0.6749, lr: 0.04121
iteration: 8, epoch: 88, best train: 0.948, best val: 0.6771, lr: 0.04025
iteration: 8, epoch: 89, best train: 0.959, best val: 0.6771, lr: 0.03928
iteration: 8, epoch: 90, best train: 0.959, best val: 0.6771, lr: 0.03833
iteration: 8, epoch: 91, best train: 0.959, best val: 0.6771, lr: 0.03738
iteration: 8, epoch: 92, best train: 0.959, best val: 0.6771, lr: 0.03643
iteration: 8, epoch: 93, best train: 0.959, best val: 0.6771, lr: 0.03549
iteration: 8, epoch: 94, best train: 0.959, best val: 0.6771, lr: 0.03455
iteration: 8, epoch: 95, best train: 0.959, best val: 0.6771, lr: 0.03362
iteration: 8, epoch: 96, best train: 0.959, best val: 0.6771, lr: 0.03269
iteration: 8, epoch: 97, best train: 0.959, best val: 0.6771, lr: 0.03178
iteration: 8, epoch: 98, best train: 0.959, best val: 0.6771, lr: 0.03087
iteration: 8, epoch: 99, best train: 0.959, best val: 0.6771, lr: 0.02996
iteration: 8, epoch: 100, best train: 0.959, best val: 0.6771, lr: 0.02907
iteration: 8, epoch: 101, best train: 0.959, best val: 0.6771, lr: 0.02818
iteration: 8, epoch: 102, best train: 0.959, best val: 0.6771, lr: 0.0273
iteration: 8, epoch: 103, best train: 0.959, best val: 0.6771, lr: 0.02643
iteration: 8, epoch: 104, best train: 0.959, best val: 0.6771, lr: 0.02557
iteration: 8, epoch: 105, best train: 0.959, best val: 0.6771, lr: 0.02472
iteration: 8, epoch: 106, best train: 0.959, best val: 0.6771, lr: 0.02388
iteration: 8, epoch: 107, best train: 0.962, best val: 0.6771, lr: 0.02304
iteration: 8, epoch: 108, best train: 0.962, best val: 0.6771, lr: 0.02222
iteration: 8, epoch: 109, best train: 0.962, best val: 0.6771, lr: 0.02141
iteration: 8, epoch: 110, best train: 0.962, best val: 0.6771, lr: 0.02061
iteration: 8, epoch: 111, best train: 0.962, best val: 0.6771, lr: 0.01982
iteration: 8, epoch: 112, best train: 0.962, best val: 0.6771, lr: 0.01905
iteration: 8, epoch: 113, best train: 0.962, best val: 0.6771, lr: 0.01828
iteration: 8, epoch: 114, best train: 0.962, best val: 0.679, lr: 0.01753
iteration: 8, epoch: 115, best train: 0.962, best val: 0.679, lr: 0.01679
iteration: 8, epoch: 116, best train: 0.962, best val: 0.6791, lr: 0.01606
iteration: 8, epoch: 117, best train: 0.962, best val: 0.6803, lr: 0.01535
iteration: 8, epoch: 118, best train: 0.963, best val: 0.6803, lr: 0.01464
iteration: 8, epoch: 119, best train: 0.963, best val: 0.6803, lr: 0.01396
iteration: 8, epoch: 120, best train: 0.963, best val: 0.681, lr: 0.01328
iteration: 8, epoch: 121, best train: 0.963, best val: 0.6828, lr: 0.01262
iteration: 8, epoch: 122, best train: 0.963, best val: 0.6828, lr: 0.01198
iteration: 8, epoch: 123, best train: 0.963, best val: 0.6828, lr: 0.01135
iteration: 8, epoch: 124, best train: 0.963, best val: 0.6828, lr: 0.01073
iteration: 8, epoch: 125, best train: 0.963, best val: 0.6828, lr: 0.01013
iteration: 8, epoch: 126, best train: 0.963, best val: 0.6828, lr: 0.00955
iteration: 8, epoch: 127, best train: 0.965, best val: 0.6836, lr: 0.00898
iteration: 8, epoch: 128, best train: 0.965, best val: 0.6836, lr: 0.00843
iteration: 8, epoch: 129, best train: 0.965, best val: 0.6836, lr: 0.00789
iteration: 8, epoch: 130, best train: 0.965, best val: 0.6836, lr: 0.00737
iteration: 8, epoch: 131, best train: 0.965, best val: 0.6836, lr: 0.00686
iteration: 8, epoch: 132, best train: 0.965, best val: 0.6839, lr: 0.00638
iteration: 8, epoch: 133, best train: 0.965, best val: 0.6849, lr: 0.0059
iteration: 8, epoch: 134, best train: 0.965, best val: 0.6849, lr: 0.00545
iteration: 8, epoch: 135, best train: 0.965, best val: 0.6849, lr: 0.00501
iteration: 8, epoch: 136, best train: 0.965, best val: 0.6849, lr: 0.00459
iteration: 8, epoch: 137, best train: 0.965, best val: 0.685, lr: 0.00419
iteration: 8, epoch: 138, best train: 0.965, best val: 0.6855, lr: 0.00381
iteration: 8, epoch: 139, best train: 0.965, best val: 0.686, lr: 0.00344
iteration: 8, epoch: 140, best train: 0.965, best val: 0.6863, lr: 0.00309
iteration: 8, epoch: 141, best train: 0.966, best val: 0.6863, lr: 0.00276
iteration: 8, epoch: 142, best train: 0.966, best val: 0.6863, lr: 0.00245
iteration: 8, epoch: 143, best train: 0.966, best val: 0.6863, lr: 0.00215
iteration: 8, epoch: 144, best train: 0.966, best val: 0.6863, lr: 0.00188
iteration: 8, epoch: 145, best train: 0.966, best val: 0.6863, lr: 0.00162
iteration: 8, epoch: 146, best train: 0.966, best val: 0.6863, lr: 0.00138
iteration: 8, epoch: 147, best train: 0.966, best val: 0.6863, lr: 0.00116
iteration: 8, epoch: 148, best train: 0.967, best val: 0.6863, lr: 0.00096
iteration: 8, epoch: 149, best train: 0.967, best val: 0.6863, lr: 0.00078
iteration: 8, epoch: 150, best train: 0.967, best val: 0.6863, lr: 0.00062
iteration: 8, epoch: 151, best train: 0.967, best val: 0.6863, lr: 0.00047
iteration: 8, epoch: 152, best train: 0.967, best val: 0.6863, lr: 0.00035
iteration: 8, epoch: 153, best train: 0.967, best val: 0.6863, lr: 0.00024
iteration: 8, epoch: 154, best train: 0.967, best val: 0.6863, lr: 0.00015
iteration: 8, epoch: 155, best train: 0.969, best val: 0.6863, lr: 9e-05
iteration: 8, epoch: 156, best train: 0.969, best val: 0.6863, lr: 4e-05
iteration: 8, epoch: 157, best train: 0.969, best val: 0.6863, lr: 1e-05
iteration: 8, epoch: 158, best train: 0.969, best val: 0.6863, lr: 0.0
iteration: 8, epoch: 159, best train: 0.969, best val: 0.6863, lr: 1e-05
------------------------ Checkpoint 28  ------------------------
pre_conv.0.weight_mask 	|	active =  838 	|	total =  1728 	|	layerwise sparsity =  0.4849537037037037
layer1.0.conv1.weight_mask 	|	active =  4947 	|	total =  36864 	|	layerwise sparsity =  0.13419596354166666
layer1.0.conv2.weight_mask 	|	active =  4947 	|	total =  36864 	|	layerwise sparsity =  0.13419596354166666
layer1.1.conv1.weight_mask 	|	active =  4947 	|	total =  36864 	|	layerwise sparsity =  0.13419596354166666
layer1.1.conv2.weight_mask 	|	active =  4947 	|	total =  36864 	|	layerwise sparsity =  0.13419596354166666
layer2.0.conv1.weight_mask 	|	active =  9896 	|	total =  73728 	|	layerwise sparsity =  0.1342230902777778
layer2.0.conv2.weight_mask 	|	active =  19790 	|	total =  147456 	|	layerwise sparsity =  0.1342095269097222
layer2.0.shortcut.0.weight_mask 	|	active =  3970 	|	total =  8192 	|	layerwise sparsity =  0.484619140625
layer2.1.conv1.weight_mask 	|	active =  19790 	|	total =  147456 	|	layerwise sparsity =  0.1342095269097222
layer2.1.conv2.weight_mask 	|	active =  19790 	|	total =  147456 	|	layerwise sparsity =  0.1342095269097222
layer3.0.conv1.weight_mask 	|	active =  39582 	|	total =  294912 	|	layerwise sparsity =  0.13421630859375
layer3.0.conv2.weight_mask 	|	active =  55251 	|	total =  589824 	|	layerwise sparsity =  0.0936737060546875
layer3.0.shortcut.0.weight_mask 	|	active =  4398 	|	total =  32768 	|	layerwise sparsity =  0.13421630859375
layer3.1.conv1.weight_mask 	|	active =  56865 	|	total =  589824 	|	layerwise sparsity =  0.09641011555989583
layer3.1.conv2.weight_mask 	|	active =  59335 	|	total =  589824 	|	layerwise sparsity =  0.1005978054470486
layer4.0.conv1.weight_mask 	|	active =  141001 	|	total =  1179648 	|	layerwise sparsity =  0.1195280287000868
layer4.0.conv2.weight_mask 	|	active =  337147 	|	total =  2359296 	|	layerwise sparsity =  0.14290152655707467
layer4.0.shortcut.0.weight_mask 	|	active =  17592 	|	total =  131072 	|	layerwise sparsity =  0.13421630859375
layer4.1.conv1.weight_mask 	|	active =  353549 	|	total =  2359296 	|	layerwise sparsity =  0.14985360039605033
layer4.1.conv2.weight_mask 	|	active =  375346 	|	total =  2359296 	|	layerwise sparsity =  0.15909237331814235
------------------------ Checkpoint 29  ------------------------
best_val =  0.6862999999999998
------------------------ Checkpoint 30  ------------------------
pruning state: 9
remaining weight at start of iteration =  13.745820500909023
iteration: 9, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 9, epoch: 1, best train: 0.409, best val: 0.1, lr: 0.09991
iteration: 9, epoch: 2, best train: 0.579, best val: 0.151, lr: 0.09985
iteration: 9, epoch: 3, best train: 0.579, best val: 0.151, lr: 0.09976
iteration: 9, epoch: 4, best train: 0.62, best val: 0.4889, lr: 0.09965
iteration: 9, epoch: 5, best train: 0.715, best val: 0.5617, lr: 0.09953
iteration: 9, epoch: 6, best train: 0.715, best val: 0.5617, lr: 0.09938
iteration: 9, epoch: 7, best train: 0.715, best val: 0.5617, lr: 0.09922
iteration: 9, epoch: 8, best train: 0.715, best val: 0.5617, lr: 0.09904
iteration: 9, epoch: 9, best train: 0.732, best val: 0.5617, lr: 0.09884
iteration: 9, epoch: 10, best train: 0.753, best val: 0.5705, lr: 0.09862
iteration: 9, epoch: 11, best train: 0.767, best val: 0.5771, lr: 0.09838
iteration: 9, epoch: 12, best train: 0.767, best val: 0.5771, lr: 0.09812
iteration: 9, epoch: 13, best train: 0.792, best val: 0.5771, lr: 0.09785
iteration: 9, epoch: 14, best train: 0.81, best val: 0.6057, lr: 0.09755
iteration: 9, epoch: 15, best train: 0.821, best val: 0.6057, lr: 0.09724
iteration: 9, epoch: 16, best train: 0.821, best val: 0.6057, lr: 0.09691
iteration: 9, epoch: 17, best train: 0.838, best val: 0.6057, lr: 0.09656
iteration: 9, epoch: 18, best train: 0.838, best val: 0.6057, lr: 0.09619
iteration: 9, epoch: 19, best train: 0.848, best val: 0.6057, lr: 0.09581
iteration: 9, epoch: 20, best train: 0.848, best val: 0.6057, lr: 0.09541
iteration: 9, epoch: 21, best train: 0.848, best val: 0.6057, lr: 0.09499
iteration: 9, epoch: 22, best train: 0.856, best val: 0.6057, lr: 0.09455
iteration: 9, epoch: 23, best train: 0.856, best val: 0.6057, lr: 0.0941
iteration: 9, epoch: 24, best train: 0.87, best val: 0.6057, lr: 0.09362
iteration: 9, epoch: 25, best train: 0.87, best val: 0.6097, lr: 0.09314
iteration: 9, epoch: 26, best train: 0.87, best val: 0.6113, lr: 0.09263
iteration: 9, epoch: 27, best train: 0.872, best val: 0.6316, lr: 0.09211
iteration: 9, epoch: 28, best train: 0.874, best val: 0.6316, lr: 0.09157
iteration: 9, epoch: 29, best train: 0.874, best val: 0.6316, lr: 0.09102
iteration: 9, epoch: 30, best train: 0.874, best val: 0.6316, lr: 0.09045
iteration: 9, epoch: 31, best train: 0.884, best val: 0.6371, lr: 0.08987
iteration: 9, epoch: 32, best train: 0.884, best val: 0.6371, lr: 0.08927
iteration: 9, epoch: 33, best train: 0.884, best val: 0.6371, lr: 0.08865
iteration: 9, epoch: 34, best train: 0.884, best val: 0.6371, lr: 0.08802
iteration: 9, epoch: 35, best train: 0.884, best val: 0.6371, lr: 0.08738
iteration: 9, epoch: 36, best train: 0.884, best val: 0.6371, lr: 0.08672
iteration: 9, epoch: 37, best train: 0.884, best val: 0.6371, lr: 0.08604
iteration: 9, epoch: 38, best train: 0.896, best val: 0.6371, lr: 0.08536
iteration: 9, epoch: 39, best train: 0.896, best val: 0.6371, lr: 0.08465
iteration: 9, epoch: 40, best train: 0.896, best val: 0.6371, lr: 0.08394
iteration: 9, epoch: 41, best train: 0.913, best val: 0.6371, lr: 0.08321
iteration: 9, epoch: 42, best train: 0.913, best val: 0.6371, lr: 0.08247
iteration: 9, epoch: 43, best train: 0.913, best val: 0.6371, lr: 0.08172
iteration: 9, epoch: 44, best train: 0.913, best val: 0.6371, lr: 0.08095
iteration: 9, epoch: 45, best train: 0.913, best val: 0.6371, lr: 0.08018
iteration: 9, epoch: 46, best train: 0.913, best val: 0.6469, lr: 0.07939
iteration: 9, epoch: 47, best train: 0.913, best val: 0.6469, lr: 0.07859
iteration: 9, epoch: 48, best train: 0.913, best val: 0.6469, lr: 0.07778
iteration: 9, epoch: 49, best train: 0.923, best val: 0.6469, lr: 0.07696
iteration: 9, epoch: 50, best train: 0.923, best val: 0.6511, lr: 0.07612
iteration: 9, epoch: 51, best train: 0.928, best val: 0.6511, lr: 0.07528
iteration: 9, epoch: 52, best train: 0.928, best val: 0.6511, lr: 0.07443
iteration: 9, epoch: 53, best train: 0.928, best val: 0.6511, lr: 0.07357
iteration: 9, epoch: 54, best train: 0.928, best val: 0.6511, lr: 0.0727
iteration: 9, epoch: 55, best train: 0.928, best val: 0.6511, lr: 0.07182
iteration: 9, epoch: 56, best train: 0.928, best val: 0.6511, lr: 0.07093
iteration: 9, epoch: 57, best train: 0.928, best val: 0.6511, lr: 0.07004
iteration: 9, epoch: 58, best train: 0.928, best val: 0.6511, lr: 0.06913
iteration: 9, epoch: 59, best train: 0.928, best val: 0.6511, lr: 0.06822
iteration: 9, epoch: 60, best train: 0.928, best val: 0.6511, lr: 0.06731
iteration: 9, epoch: 61, best train: 0.939, best val: 0.6511, lr: 0.06638
iteration: 9, epoch: 62, best train: 0.939, best val: 0.6511, lr: 0.06545
iteration: 9, epoch: 63, best train: 0.939, best val: 0.6511, lr: 0.06451
iteration: 9, epoch: 64, best train: 0.939, best val: 0.6511, lr: 0.06357
iteration: 9, epoch: 65, best train: 0.939, best val: 0.6543, lr: 0.06262
iteration: 9, epoch: 66, best train: 0.939, best val: 0.6543, lr: 0.06167
iteration: 9, epoch: 67, best train: 0.939, best val: 0.6543, lr: 0.06072
iteration: 9, epoch: 68, best train: 0.939, best val: 0.6589, lr: 0.05975
iteration: 9, epoch: 69, best train: 0.939, best val: 0.6589, lr: 0.05879
iteration: 9, epoch: 70, best train: 0.939, best val: 0.6589, lr: 0.05782
iteration: 9, epoch: 71, best train: 0.939, best val: 0.6589, lr: 0.05685
iteration: 9, epoch: 72, best train: 0.939, best val: 0.6589, lr: 0.05588
iteration: 9, epoch: 73, best train: 0.94, best val: 0.6589, lr: 0.0549
iteration: 9, epoch: 74, best train: 0.94, best val: 0.6589, lr: 0.05392
iteration: 9, epoch: 75, best train: 0.94, best val: 0.6589, lr: 0.05294
iteration: 9, epoch: 76, best train: 0.94, best val: 0.6589, lr: 0.05196
iteration: 9, epoch: 77, best train: 0.942, best val: 0.6589, lr: 0.05098
iteration: 9, epoch: 78, best train: 0.942, best val: 0.6589, lr: 0.05
iteration: 9, epoch: 79, best train: 0.942, best val: 0.6589, lr: 0.04902
iteration: 9, epoch: 80, best train: 0.942, best val: 0.6591, lr: 0.04804
iteration: 9, epoch: 81, best train: 0.943, best val: 0.6591, lr: 0.04706
iteration: 9, epoch: 82, best train: 0.952, best val: 0.6627, lr: 0.04608
iteration: 9, epoch: 83, best train: 0.958, best val: 0.6706, lr: 0.0451
iteration: 9, epoch: 84, best train: 0.958, best val: 0.6706, lr: 0.04412
iteration: 9, epoch: 85, best train: 0.958, best val: 0.6706, lr: 0.04315
iteration: 9, epoch: 86, best train: 0.958, best val: 0.6706, lr: 0.04218
iteration: 9, epoch: 87, best train: 0.958, best val: 0.6706, lr: 0.04121
iteration: 9, epoch: 88, best train: 0.958, best val: 0.6706, lr: 0.04025
iteration: 9, epoch: 89, best train: 0.958, best val: 0.6718, lr: 0.03928
iteration: 9, epoch: 90, best train: 0.958, best val: 0.6718, lr: 0.03833
iteration: 9, epoch: 91, best train: 0.958, best val: 0.6718, lr: 0.03738
iteration: 9, epoch: 92, best train: 0.958, best val: 0.6718, lr: 0.03643
iteration: 9, epoch: 93, best train: 0.958, best val: 0.6718, lr: 0.03549
iteration: 9, epoch: 94, best train: 0.959, best val: 0.6718, lr: 0.03455
iteration: 9, epoch: 95, best train: 0.959, best val: 0.6718, lr: 0.03362
iteration: 9, epoch: 96, best train: 0.959, best val: 0.6718, lr: 0.03269
iteration: 9, epoch: 97, best train: 0.959, best val: 0.6718, lr: 0.03178
iteration: 9, epoch: 98, best train: 0.959, best val: 0.6762, lr: 0.03087
iteration: 9, epoch: 99, best train: 0.964, best val: 0.6825, lr: 0.02996
iteration: 9, epoch: 100, best train: 0.964, best val: 0.6825, lr: 0.02907
iteration: 9, epoch: 101, best train: 0.964, best val: 0.6825, lr: 0.02818
iteration: 9, epoch: 102, best train: 0.964, best val: 0.6825, lr: 0.0273
iteration: 9, epoch: 103, best train: 0.964, best val: 0.6825, lr: 0.02643
iteration: 9, epoch: 104, best train: 0.964, best val: 0.6825, lr: 0.02557
iteration: 9, epoch: 105, best train: 0.964, best val: 0.6825, lr: 0.02472
iteration: 9, epoch: 106, best train: 0.964, best val: 0.6825, lr: 0.02388
iteration: 9, epoch: 107, best train: 0.964, best val: 0.6825, lr: 0.02304
iteration: 9, epoch: 108, best train: 0.964, best val: 0.6825, lr: 0.02222
iteration: 9, epoch: 109, best train: 0.967, best val: 0.6825, lr: 0.02141
iteration: 9, epoch: 110, best train: 0.967, best val: 0.6825, lr: 0.02061
iteration: 9, epoch: 111, best train: 0.967, best val: 0.6825, lr: 0.01982
iteration: 9, epoch: 112, best train: 0.967, best val: 0.6825, lr: 0.01905
iteration: 9, epoch: 113, best train: 0.967, best val: 0.6825, lr: 0.01828
iteration: 9, epoch: 114, best train: 0.967, best val: 0.6825, lr: 0.01753
iteration: 9, epoch: 115, best train: 0.967, best val: 0.6825, lr: 0.01679
iteration: 9, epoch: 116, best train: 0.967, best val: 0.6825, lr: 0.01606
iteration: 9, epoch: 117, best train: 0.967, best val: 0.6825, lr: 0.01535
iteration: 9, epoch: 118, best train: 0.967, best val: 0.6825, lr: 0.01464
iteration: 9, epoch: 119, best train: 0.967, best val: 0.6825, lr: 0.01396
iteration: 9, epoch: 120, best train: 0.967, best val: 0.6825, lr: 0.01328
iteration: 9, epoch: 121, best train: 0.967, best val: 0.6825, lr: 0.01262
iteration: 9, epoch: 122, best train: 0.967, best val: 0.6825, lr: 0.01198
iteration: 9, epoch: 123, best train: 0.967, best val: 0.6825, lr: 0.01135
iteration: 9, epoch: 124, best train: 0.967, best val: 0.6825, lr: 0.01073
iteration: 9, epoch: 125, best train: 0.967, best val: 0.6825, lr: 0.01013
iteration: 9, epoch: 126, best train: 0.967, best val: 0.6825, lr: 0.00955
iteration: 9, epoch: 127, best train: 0.967, best val: 0.6825, lr: 0.00898
iteration: 9, epoch: 128, best train: 0.967, best val: 0.6825, lr: 0.00843
iteration: 9, epoch: 129, best train: 0.968, best val: 0.6864, lr: 0.00789
iteration: 9, epoch: 130, best train: 0.968, best val: 0.6864, lr: 0.00737
iteration: 9, epoch: 131, best train: 0.969, best val: 0.6864, lr: 0.00686
iteration: 9, epoch: 132, best train: 0.969, best val: 0.6864, lr: 0.00638
iteration: 9, epoch: 133, best train: 0.976, best val: 0.6864, lr: 0.0059
iteration: 9, epoch: 134, best train: 0.976, best val: 0.6864, lr: 0.00545
iteration: 9, epoch: 135, best train: 0.976, best val: 0.6864, lr: 0.00501
iteration: 9, epoch: 136, best train: 0.976, best val: 0.6865, lr: 0.00459
iteration: 9, epoch: 137, best train: 0.976, best val: 0.687, lr: 0.00419
iteration: 9, epoch: 138, best train: 0.976, best val: 0.687, lr: 0.00381
iteration: 9, epoch: 139, best train: 0.976, best val: 0.687, lr: 0.00344
iteration: 9, epoch: 140, best train: 0.976, best val: 0.6876, lr: 0.00309
iteration: 9, epoch: 141, best train: 0.976, best val: 0.6881, lr: 0.00276
iteration: 9, epoch: 142, best train: 0.976, best val: 0.6881, lr: 0.00245
iteration: 9, epoch: 143, best train: 0.976, best val: 0.6881, lr: 0.00215
iteration: 9, epoch: 144, best train: 0.976, best val: 0.6881, lr: 0.00188
iteration: 9, epoch: 145, best train: 0.976, best val: 0.6881, lr: 0.00162
iteration: 9, epoch: 146, best train: 0.976, best val: 0.6881, lr: 0.00138
iteration: 9, epoch: 147, best train: 0.976, best val: 0.6881, lr: 0.00116
iteration: 9, epoch: 148, best train: 0.976, best val: 0.6881, lr: 0.00096
iteration: 9, epoch: 149, best train: 0.976, best val: 0.6881, lr: 0.00078
iteration: 9, epoch: 150, best train: 0.976, best val: 0.6881, lr: 0.00062
iteration: 9, epoch: 151, best train: 0.976, best val: 0.6881, lr: 0.00047
iteration: 9, epoch: 152, best train: 0.976, best val: 0.6881, lr: 0.00035
iteration: 9, epoch: 153, best train: 0.976, best val: 0.6881, lr: 0.00024
iteration: 9, epoch: 154, best train: 0.976, best val: 0.6881, lr: 0.00015
iteration: 9, epoch: 155, best train: 0.976, best val: 0.6881, lr: 9e-05
iteration: 9, epoch: 156, best train: 0.976, best val: 0.6881, lr: 4e-05
iteration: 9, epoch: 157, best train: 0.976, best val: 0.6881, lr: 1e-05
iteration: 9, epoch: 158, best train: 0.976, best val: 0.6881, lr: 0.0
iteration: 9, epoch: 159, best train: 0.976, best val: 0.6881, lr: 1e-05
------------------------ Checkpoint 31  ------------------------
pre_conv.0.weight_mask 	|	active =  773 	|	total =  1728 	|	layerwise sparsity =  0.44733796296296297
layer1.0.conv1.weight_mask 	|	active =  3958 	|	total =  36864 	|	layerwise sparsity =  0.10736762152777778
layer1.0.conv2.weight_mask 	|	active =  3958 	|	total =  36864 	|	layerwise sparsity =  0.10736762152777778
layer1.1.conv1.weight_mask 	|	active =  3958 	|	total =  36864 	|	layerwise sparsity =  0.10736762152777778
layer1.1.conv2.weight_mask 	|	active =  3958 	|	total =  36864 	|	layerwise sparsity =  0.10736762152777778
layer2.0.conv1.weight_mask 	|	active =  7917 	|	total =  73728 	|	layerwise sparsity =  0.10738118489583333
layer2.0.conv2.weight_mask 	|	active =  15832 	|	total =  147456 	|	layerwise sparsity =  0.10736762152777778
layer2.0.shortcut.0.weight_mask 	|	active =  3663 	|	total =  8192 	|	layerwise sparsity =  0.4471435546875
layer2.1.conv1.weight_mask 	|	active =  15832 	|	total =  147456 	|	layerwise sparsity =  0.10736762152777778
layer2.1.conv2.weight_mask 	|	active =  15832 	|	total =  147456 	|	layerwise sparsity =  0.10736762152777778
layer3.0.conv1.weight_mask 	|	active =  31666 	|	total =  294912 	|	layerwise sparsity =  0.10737440321180555
layer3.0.conv2.weight_mask 	|	active =  42469 	|	total =  589824 	|	layerwise sparsity =  0.0720028347439236
layer3.0.shortcut.0.weight_mask 	|	active =  3518 	|	total =  32768 	|	layerwise sparsity =  0.10736083984375
layer3.1.conv1.weight_mask 	|	active =  43850 	|	total =  589824 	|	layerwise sparsity =  0.0743442111545139
layer3.1.conv2.weight_mask 	|	active =  45971 	|	total =  589824 	|	layerwise sparsity =  0.07794019911024305
layer4.0.conv1.weight_mask 	|	active =  111357 	|	total =  1179648 	|	layerwise sparsity =  0.09439849853515625
layer4.0.conv2.weight_mask 	|	active =  271603 	|	total =  2359296 	|	layerwise sparsity =  0.11512035793728298
layer4.0.shortcut.0.weight_mask 	|	active =  14074 	|	total =  131072 	|	layerwise sparsity =  0.1073760986328125
layer4.1.conv1.weight_mask 	|	active =  286323 	|	total =  2359296 	|	layerwise sparsity =  0.12135950724283855
layer4.1.conv2.weight_mask 	|	active =  306003 	|	total =  2359296 	|	layerwise sparsity =  0.12970097859700522
------------------------ Checkpoint 32  ------------------------
best_val =  0.6881000000000002
------------------------ Checkpoint 33  ------------------------
pruning state: 10
remaining weight at start of iteration =  11.044801290984896
iteration: 10, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 10, epoch: 1, best train: 0.435, best val: 0.1, lr: 0.09991
iteration: 10, epoch: 2, best train: 0.572, best val: 0.1, lr: 0.09985
iteration: 10, epoch: 3, best train: 0.598, best val: 0.1491, lr: 0.09976
iteration: 10, epoch: 4, best train: 0.672, best val: 0.44, lr: 0.09965
iteration: 10, epoch: 5, best train: 0.672, best val: 0.5038, lr: 0.09953
iteration: 10, epoch: 6, best train: 0.677, best val: 0.5038, lr: 0.09938
iteration: 10, epoch: 7, best train: 0.729, best val: 0.5663, lr: 0.09922
iteration: 10, epoch: 8, best train: 0.735, best val: 0.5663, lr: 0.09904
iteration: 10, epoch: 9, best train: 0.746, best val: 0.5663, lr: 0.09884
iteration: 10, epoch: 10, best train: 0.79, best val: 0.5663, lr: 0.09862
iteration: 10, epoch: 11, best train: 0.791, best val: 0.5687, lr: 0.09838
iteration: 10, epoch: 12, best train: 0.795, best val: 0.5963, lr: 0.09812
iteration: 10, epoch: 13, best train: 0.824, best val: 0.5994, lr: 0.09785
iteration: 10, epoch: 14, best train: 0.83, best val: 0.5994, lr: 0.09755
iteration: 10, epoch: 15, best train: 0.83, best val: 0.5994, lr: 0.09724
iteration: 10, epoch: 16, best train: 0.83, best val: 0.6094, lr: 0.09691
iteration: 10, epoch: 17, best train: 0.83, best val: 0.6094, lr: 0.09656
iteration: 10, epoch: 18, best train: 0.854, best val: 0.6094, lr: 0.09619
iteration: 10, epoch: 19, best train: 0.854, best val: 0.6094, lr: 0.09581
iteration: 10, epoch: 20, best train: 0.854, best val: 0.6094, lr: 0.09541
iteration: 10, epoch: 21, best train: 0.854, best val: 0.6094, lr: 0.09499
iteration: 10, epoch: 22, best train: 0.869, best val: 0.6094, lr: 0.09455
iteration: 10, epoch: 23, best train: 0.869, best val: 0.6094, lr: 0.0941
iteration: 10, epoch: 24, best train: 0.869, best val: 0.6189, lr: 0.09362
iteration: 10, epoch: 25, best train: 0.869, best val: 0.6305, lr: 0.09314
iteration: 10, epoch: 26, best train: 0.869, best val: 0.6305, lr: 0.09263
iteration: 10, epoch: 27, best train: 0.873, best val: 0.6305, lr: 0.09211
iteration: 10, epoch: 28, best train: 0.875, best val: 0.6305, lr: 0.09157
iteration: 10, epoch: 29, best train: 0.876, best val: 0.6305, lr: 0.09102
iteration: 10, epoch: 30, best train: 0.903, best val: 0.6519, lr: 0.09045
iteration: 10, epoch: 31, best train: 0.903, best val: 0.6519, lr: 0.08987
iteration: 10, epoch: 32, best train: 0.903, best val: 0.6519, lr: 0.08927
iteration: 10, epoch: 33, best train: 0.903, best val: 0.6519, lr: 0.08865
iteration: 10, epoch: 34, best train: 0.903, best val: 0.6519, lr: 0.08802
iteration: 10, epoch: 35, best train: 0.903, best val: 0.6519, lr: 0.08738
iteration: 10, epoch: 36, best train: 0.903, best val: 0.6519, lr: 0.08672
iteration: 10, epoch: 37, best train: 0.906, best val: 0.6519, lr: 0.08604
iteration: 10, epoch: 38, best train: 0.906, best val: 0.6519, lr: 0.08536
iteration: 10, epoch: 39, best train: 0.906, best val: 0.6519, lr: 0.08465
iteration: 10, epoch: 40, best train: 0.906, best val: 0.6519, lr: 0.08394
iteration: 10, epoch: 41, best train: 0.906, best val: 0.6519, lr: 0.08321
iteration: 10, epoch: 42, best train: 0.917, best val: 0.6519, lr: 0.08247
iteration: 10, epoch: 43, best train: 0.917, best val: 0.6519, lr: 0.08172
iteration: 10, epoch: 44, best train: 0.917, best val: 0.6519, lr: 0.08095
iteration: 10, epoch: 45, best train: 0.917, best val: 0.6519, lr: 0.08018
iteration: 10, epoch: 46, best train: 0.919, best val: 0.6519, lr: 0.07939
iteration: 10, epoch: 47, best train: 0.922, best val: 0.6519, lr: 0.07859
iteration: 10, epoch: 48, best train: 0.922, best val: 0.6519, lr: 0.07778
iteration: 10, epoch: 49, best train: 0.922, best val: 0.6519, lr: 0.07696
iteration: 10, epoch: 50, best train: 0.922, best val: 0.6519, lr: 0.07612
iteration: 10, epoch: 51, best train: 0.922, best val: 0.6519, lr: 0.07528
iteration: 10, epoch: 52, best train: 0.933, best val: 0.6519, lr: 0.07443
iteration: 10, epoch: 53, best train: 0.933, best val: 0.656, lr: 0.07357
iteration: 10, epoch: 54, best train: 0.933, best val: 0.656, lr: 0.0727
iteration: 10, epoch: 55, best train: 0.933, best val: 0.656, lr: 0.07182
iteration: 10, epoch: 56, best train: 0.934, best val: 0.656, lr: 0.07093
iteration: 10, epoch: 57, best train: 0.94, best val: 0.656, lr: 0.07004
iteration: 10, epoch: 58, best train: 0.94, best val: 0.656, lr: 0.06913
iteration: 10, epoch: 59, best train: 0.94, best val: 0.656, lr: 0.06822
iteration: 10, epoch: 60, best train: 0.94, best val: 0.656, lr: 0.06731
iteration: 10, epoch: 61, best train: 0.94, best val: 0.656, lr: 0.06638
iteration: 10, epoch: 62, best train: 0.94, best val: 0.656, lr: 0.06545
iteration: 10, epoch: 63, best train: 0.94, best val: 0.656, lr: 0.06451
iteration: 10, epoch: 64, best train: 0.94, best val: 0.656, lr: 0.06357
iteration: 10, epoch: 65, best train: 0.94, best val: 0.656, lr: 0.06262
iteration: 10, epoch: 66, best train: 0.94, best val: 0.656, lr: 0.06167
iteration: 10, epoch: 67, best train: 0.94, best val: 0.6584, lr: 0.06072
iteration: 10, epoch: 68, best train: 0.94, best val: 0.6584, lr: 0.05975
iteration: 10, epoch: 69, best train: 0.944, best val: 0.669, lr: 0.05879
iteration: 10, epoch: 70, best train: 0.944, best val: 0.669, lr: 0.05782
iteration: 10, epoch: 71, best train: 0.944, best val: 0.669, lr: 0.05685
iteration: 10, epoch: 72, best train: 0.944, best val: 0.669, lr: 0.05588
iteration: 10, epoch: 73, best train: 0.944, best val: 0.669, lr: 0.0549
iteration: 10, epoch: 74, best train: 0.944, best val: 0.669, lr: 0.05392
iteration: 10, epoch: 75, best train: 0.944, best val: 0.6737, lr: 0.05294
iteration: 10, epoch: 76, best train: 0.944, best val: 0.6737, lr: 0.05196
iteration: 10, epoch: 77, best train: 0.944, best val: 0.6737, lr: 0.05098
iteration: 10, epoch: 78, best train: 0.947, best val: 0.6756, lr: 0.05
iteration: 10, epoch: 79, best train: 0.947, best val: 0.6756, lr: 0.04902
iteration: 10, epoch: 80, best train: 0.947, best val: 0.6756, lr: 0.04804
iteration: 10, epoch: 81, best train: 0.947, best val: 0.6756, lr: 0.04706
iteration: 10, epoch: 82, best train: 0.947, best val: 0.6756, lr: 0.04608
iteration: 10, epoch: 83, best train: 0.947, best val: 0.6756, lr: 0.0451
iteration: 10, epoch: 84, best train: 0.947, best val: 0.6756, lr: 0.04412
iteration: 10, epoch: 85, best train: 0.947, best val: 0.6776, lr: 0.04315
iteration: 10, epoch: 86, best train: 0.95, best val: 0.6786, lr: 0.04218
iteration: 10, epoch: 87, best train: 0.95, best val: 0.6786, lr: 0.04121
iteration: 10, epoch: 88, best train: 0.95, best val: 0.6809, lr: 0.04025
iteration: 10, epoch: 89, best train: 0.959, best val: 0.6809, lr: 0.03928
iteration: 10, epoch: 90, best train: 0.959, best val: 0.6809, lr: 0.03833
iteration: 10, epoch: 91, best train: 0.959, best val: 0.6809, lr: 0.03738
iteration: 10, epoch: 92, best train: 0.959, best val: 0.6809, lr: 0.03643
iteration: 10, epoch: 93, best train: 0.959, best val: 0.6809, lr: 0.03549
iteration: 10, epoch: 94, best train: 0.96, best val: 0.6809, lr: 0.03455
iteration: 10, epoch: 95, best train: 0.96, best val: 0.6809, lr: 0.03362
iteration: 10, epoch: 96, best train: 0.96, best val: 0.684, lr: 0.03269
iteration: 10, epoch: 97, best train: 0.96, best val: 0.684, lr: 0.03178
iteration: 10, epoch: 98, best train: 0.96, best val: 0.684, lr: 0.03087
iteration: 10, epoch: 99, best train: 0.96, best val: 0.684, lr: 0.02996
iteration: 10, epoch: 100, best train: 0.96, best val: 0.6847, lr: 0.02907
iteration: 10, epoch: 101, best train: 0.96, best val: 0.6847, lr: 0.02818
iteration: 10, epoch: 102, best train: 0.96, best val: 0.6847, lr: 0.0273
iteration: 10, epoch: 103, best train: 0.96, best val: 0.6847, lr: 0.02643
iteration: 10, epoch: 104, best train: 0.96, best val: 0.6854, lr: 0.02557
iteration: 10, epoch: 105, best train: 0.966, best val: 0.6854, lr: 0.02472
iteration: 10, epoch: 106, best train: 0.966, best val: 0.6854, lr: 0.02388
iteration: 10, epoch: 107, best train: 0.966, best val: 0.6854, lr: 0.02304
iteration: 10, epoch: 108, best train: 0.966, best val: 0.6854, lr: 0.02222
iteration: 10, epoch: 109, best train: 0.966, best val: 0.6854, lr: 0.02141
iteration: 10, epoch: 110, best train: 0.966, best val: 0.6854, lr: 0.02061
iteration: 10, epoch: 111, best train: 0.967, best val: 0.6854, lr: 0.01982
iteration: 10, epoch: 112, best train: 0.967, best val: 0.6854, lr: 0.01905
iteration: 10, epoch: 113, best train: 0.967, best val: 0.6854, lr: 0.01828
iteration: 10, epoch: 114, best train: 0.967, best val: 0.6854, lr: 0.01753
iteration: 10, epoch: 115, best train: 0.967, best val: 0.6854, lr: 0.01679
iteration: 10, epoch: 116, best train: 0.967, best val: 0.6854, lr: 0.01606
iteration: 10, epoch: 117, best train: 0.967, best val: 0.6854, lr: 0.01535
iteration: 10, epoch: 118, best train: 0.968, best val: 0.6854, lr: 0.01464
iteration: 10, epoch: 119, best train: 0.968, best val: 0.6854, lr: 0.01396
iteration: 10, epoch: 120, best train: 0.968, best val: 0.6884, lr: 0.01328
iteration: 10, epoch: 121, best train: 0.968, best val: 0.6884, lr: 0.01262
iteration: 10, epoch: 122, best train: 0.968, best val: 0.6889, lr: 0.01198
iteration: 10, epoch: 123, best train: 0.968, best val: 0.6889, lr: 0.01135
iteration: 10, epoch: 124, best train: 0.968, best val: 0.6889, lr: 0.01073
iteration: 10, epoch: 125, best train: 0.968, best val: 0.6889, lr: 0.01013
iteration: 10, epoch: 126, best train: 0.968, best val: 0.6889, lr: 0.00955
iteration: 10, epoch: 127, best train: 0.968, best val: 0.6889, lr: 0.00898
iteration: 10, epoch: 128, best train: 0.968, best val: 0.6894, lr: 0.00843
iteration: 10, epoch: 129, best train: 0.968, best val: 0.6905, lr: 0.00789
iteration: 10, epoch: 130, best train: 0.974, best val: 0.6905, lr: 0.00737
iteration: 10, epoch: 131, best train: 0.974, best val: 0.6919, lr: 0.00686
iteration: 10, epoch: 132, best train: 0.974, best val: 0.6919, lr: 0.00638
iteration: 10, epoch: 133, best train: 0.974, best val: 0.6919, lr: 0.0059
iteration: 10, epoch: 134, best train: 0.974, best val: 0.6919, lr: 0.00545
iteration: 10, epoch: 135, best train: 0.974, best val: 0.6919, lr: 0.00501
iteration: 10, epoch: 136, best train: 0.974, best val: 0.6919, lr: 0.00459
iteration: 10, epoch: 137, best train: 0.974, best val: 0.6919, lr: 0.00419
iteration: 10, epoch: 138, best train: 0.974, best val: 0.6919, lr: 0.00381
iteration: 10, epoch: 139, best train: 0.974, best val: 0.6919, lr: 0.00344
iteration: 10, epoch: 140, best train: 0.974, best val: 0.6919, lr: 0.00309
iteration: 10, epoch: 141, best train: 0.974, best val: 0.6919, lr: 0.00276
iteration: 10, epoch: 142, best train: 0.974, best val: 0.6919, lr: 0.00245
iteration: 10, epoch: 143, best train: 0.974, best val: 0.6919, lr: 0.00215
iteration: 10, epoch: 144, best train: 0.974, best val: 0.6919, lr: 0.00188
iteration: 10, epoch: 145, best train: 0.974, best val: 0.6919, lr: 0.00162
iteration: 10, epoch: 146, best train: 0.974, best val: 0.6919, lr: 0.00138
iteration: 10, epoch: 147, best train: 0.974, best val: 0.6924, lr: 0.00116
iteration: 10, epoch: 148, best train: 0.974, best val: 0.6924, lr: 0.00096
iteration: 10, epoch: 149, best train: 0.974, best val: 0.6924, lr: 0.00078
iteration: 10, epoch: 150, best train: 0.974, best val: 0.6924, lr: 0.00062
iteration: 10, epoch: 151, best train: 0.974, best val: 0.6924, lr: 0.00047
iteration: 10, epoch: 152, best train: 0.974, best val: 0.6924, lr: 0.00035
iteration: 10, epoch: 153, best train: 0.974, best val: 0.6924, lr: 0.00024
iteration: 10, epoch: 154, best train: 0.975, best val: 0.6924, lr: 0.00015
iteration: 10, epoch: 155, best train: 0.975, best val: 0.6924, lr: 9e-05
iteration: 10, epoch: 156, best train: 0.975, best val: 0.6924, lr: 4e-05
iteration: 10, epoch: 157, best train: 0.975, best val: 0.6924, lr: 1e-05
iteration: 10, epoch: 158, best train: 0.975, best val: 0.6924, lr: 0.0
iteration: 10, epoch: 159, best train: 0.975, best val: 0.6924, lr: 1e-05
------------------------ Checkpoint 34  ------------------------
pre_conv.0.weight_mask 	|	active =  713 	|	total =  1728 	|	layerwise sparsity =  0.41261574074074076
layer1.0.conv1.weight_mask 	|	active =  3166 	|	total =  36864 	|	layerwise sparsity =  0.08588324652777778
layer1.0.conv2.weight_mask 	|	active =  3166 	|	total =  36864 	|	layerwise sparsity =  0.08588324652777778
layer1.1.conv1.weight_mask 	|	active =  3166 	|	total =  36864 	|	layerwise sparsity =  0.08588324652777778
layer1.1.conv2.weight_mask 	|	active =  3166 	|	total =  36864 	|	layerwise sparsity =  0.08588324652777778
layer2.0.conv1.weight_mask 	|	active =  6334 	|	total =  73728 	|	layerwise sparsity =  0.0859103732638889
layer2.0.conv2.weight_mask 	|	active =  12666 	|	total =  147456 	|	layerwise sparsity =  0.08589680989583333
layer2.0.shortcut.0.weight_mask 	|	active =  3380 	|	total =  8192 	|	layerwise sparsity =  0.41259765625
layer2.1.conv1.weight_mask 	|	active =  12666 	|	total =  147456 	|	layerwise sparsity =  0.08589680989583333
layer2.1.conv2.weight_mask 	|	active =  12666 	|	total =  147456 	|	layerwise sparsity =  0.08589680989583333
layer3.0.conv1.weight_mask 	|	active =  25333 	|	total =  294912 	|	layerwise sparsity =  0.08590020073784722
layer3.0.conv2.weight_mask 	|	active =  32644 	|	total =  589824 	|	layerwise sparsity =  0.05534532335069445
layer3.0.shortcut.0.weight_mask 	|	active =  2814 	|	total =  32768 	|	layerwise sparsity =  0.08587646484375
layer3.1.conv1.weight_mask 	|	active =  33814 	|	total =  589824 	|	layerwise sparsity =  0.05732896592881945
layer3.1.conv2.weight_mask 	|	active =  35617 	|	total =  589824 	|	layerwise sparsity =  0.060385810004340276
layer4.0.conv1.weight_mask 	|	active =  87946 	|	total =  1179648 	|	layerwise sparsity =  0.07455274793836805
layer4.0.conv2.weight_mask 	|	active =  218801 	|	total =  2359296 	|	layerwise sparsity =  0.09273995293511285
layer4.0.shortcut.0.weight_mask 	|	active =  11259 	|	total =  131072 	|	layerwise sparsity =  0.08589935302734375
layer4.1.conv1.weight_mask 	|	active =  231880 	|	total =  2359296 	|	layerwise sparsity =  0.09828355577256945
layer4.1.conv2.weight_mask 	|	active =  249471 	|	total =  2359296 	|	layerwise sparsity =  0.10573959350585938
------------------------ Checkpoint 35  ------------------------
best_val =  0.6924000000000001
------------------------ Checkpoint 36  ------------------------
pruning state: 11
remaining weight at start of iteration =  8.877564334176402
iteration: 11, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 11, epoch: 1, best train: 0.417, best val: 0.1, lr: 0.09991
iteration: 11, epoch: 2, best train: 0.513, best val: 0.1, lr: 0.09985
iteration: 11, epoch: 3, best train: 0.542, best val: 0.1594, lr: 0.09976
iteration: 11, epoch: 4, best train: 0.623, best val: 0.4138, lr: 0.09965
iteration: 11, epoch: 5, best train: 0.623, best val: 0.4902, lr: 0.09953
iteration: 11, epoch: 6, best train: 0.648, best val: 0.5443, lr: 0.09938
iteration: 11, epoch: 7, best train: 0.717, best val: 0.5815, lr: 0.09922
iteration: 11, epoch: 8, best train: 0.775, best val: 0.5815, lr: 0.09904
iteration: 11, epoch: 9, best train: 0.775, best val: 0.5815, lr: 0.09884
iteration: 11, epoch: 10, best train: 0.775, best val: 0.5832, lr: 0.09862
iteration: 11, epoch: 11, best train: 0.775, best val: 0.5832, lr: 0.09838
iteration: 11, epoch: 12, best train: 0.823, best val: 0.5832, lr: 0.09812
iteration: 11, epoch: 13, best train: 0.823, best val: 0.5832, lr: 0.09785
iteration: 11, epoch: 14, best train: 0.823, best val: 0.5832, lr: 0.09755
iteration: 11, epoch: 15, best train: 0.823, best val: 0.5832, lr: 0.09724
iteration: 11, epoch: 16, best train: 0.823, best val: 0.6009, lr: 0.09691
iteration: 11, epoch: 17, best train: 0.841, best val: 0.6009, lr: 0.09656
iteration: 11, epoch: 18, best train: 0.844, best val: 0.6009, lr: 0.09619
iteration: 11, epoch: 19, best train: 0.853, best val: 0.6241, lr: 0.09581
iteration: 11, epoch: 20, best train: 0.858, best val: 0.6241, lr: 0.09541
iteration: 11, epoch: 21, best train: 0.86, best val: 0.626, lr: 0.09499
iteration: 11, epoch: 22, best train: 0.866, best val: 0.626, lr: 0.09455
iteration: 11, epoch: 23, best train: 0.872, best val: 0.626, lr: 0.0941
iteration: 11, epoch: 24, best train: 0.872, best val: 0.626, lr: 0.09362
iteration: 11, epoch: 25, best train: 0.872, best val: 0.626, lr: 0.09314
iteration: 11, epoch: 26, best train: 0.872, best val: 0.626, lr: 0.09263
iteration: 11, epoch: 27, best train: 0.872, best val: 0.626, lr: 0.09211
iteration: 11, epoch: 28, best train: 0.875, best val: 0.626, lr: 0.09157
iteration: 11, epoch: 29, best train: 0.875, best val: 0.626, lr: 0.09102
iteration: 11, epoch: 30, best train: 0.875, best val: 0.645, lr: 0.09045
iteration: 11, epoch: 31, best train: 0.875, best val: 0.6473, lr: 0.08987
iteration: 11, epoch: 32, best train: 0.879, best val: 0.6473, lr: 0.08927
iteration: 11, epoch: 33, best train: 0.894, best val: 0.6473, lr: 0.08865
iteration: 11, epoch: 34, best train: 0.894, best val: 0.6473, lr: 0.08802
iteration: 11, epoch: 35, best train: 0.9, best val: 0.6473, lr: 0.08738
iteration: 11, epoch: 36, best train: 0.9, best val: 0.6473, lr: 0.08672
iteration: 11, epoch: 37, best train: 0.908, best val: 0.6497, lr: 0.08604
iteration: 11, epoch: 38, best train: 0.908, best val: 0.6497, lr: 0.08536
iteration: 11, epoch: 39, best train: 0.908, best val: 0.6497, lr: 0.08465
iteration: 11, epoch: 40, best train: 0.908, best val: 0.6497, lr: 0.08394
iteration: 11, epoch: 41, best train: 0.908, best val: 0.6497, lr: 0.08321
iteration: 11, epoch: 42, best train: 0.908, best val: 0.6497, lr: 0.08247
iteration: 11, epoch: 43, best train: 0.909, best val: 0.6497, lr: 0.08172
iteration: 11, epoch: 44, best train: 0.909, best val: 0.6497, lr: 0.08095
iteration: 11, epoch: 45, best train: 0.915, best val: 0.6497, lr: 0.08018
iteration: 11, epoch: 46, best train: 0.915, best val: 0.6497, lr: 0.07939
iteration: 11, epoch: 47, best train: 0.915, best val: 0.6497, lr: 0.07859
iteration: 11, epoch: 48, best train: 0.937, best val: 0.6565, lr: 0.07778
iteration: 11, epoch: 49, best train: 0.937, best val: 0.66, lr: 0.07696
iteration: 11, epoch: 50, best train: 0.937, best val: 0.66, lr: 0.07612
iteration: 11, epoch: 51, best train: 0.937, best val: 0.66, lr: 0.07528
iteration: 11, epoch: 52, best train: 0.937, best val: 0.66, lr: 0.07443
iteration: 11, epoch: 53, best train: 0.937, best val: 0.66, lr: 0.07357
iteration: 11, epoch: 54, best train: 0.937, best val: 0.66, lr: 0.0727
iteration: 11, epoch: 55, best train: 0.937, best val: 0.66, lr: 0.07182
iteration: 11, epoch: 56, best train: 0.937, best val: 0.66, lr: 0.07093
iteration: 11, epoch: 57, best train: 0.937, best val: 0.66, lr: 0.07004
iteration: 11, epoch: 58, best train: 0.937, best val: 0.66, lr: 0.06913
iteration: 11, epoch: 59, best train: 0.937, best val: 0.6673, lr: 0.06822
iteration: 11, epoch: 60, best train: 0.937, best val: 0.6673, lr: 0.06731
iteration: 11, epoch: 61, best train: 0.937, best val: 0.6673, lr: 0.06638
iteration: 11, epoch: 62, best train: 0.937, best val: 0.6673, lr: 0.06545
iteration: 11, epoch: 63, best train: 0.937, best val: 0.6673, lr: 0.06451
iteration: 11, epoch: 64, best train: 0.937, best val: 0.6673, lr: 0.06357
iteration: 11, epoch: 65, best train: 0.937, best val: 0.6673, lr: 0.06262
iteration: 11, epoch: 66, best train: 0.937, best val: 0.6673, lr: 0.06167
iteration: 11, epoch: 67, best train: 0.937, best val: 0.6673, lr: 0.06072
iteration: 11, epoch: 68, best train: 0.944, best val: 0.6673, lr: 0.05975
iteration: 11, epoch: 69, best train: 0.956, best val: 0.6673, lr: 0.05879
iteration: 11, epoch: 70, best train: 0.956, best val: 0.6673, lr: 0.05782
iteration: 11, epoch: 71, best train: 0.956, best val: 0.673, lr: 0.05685
iteration: 11, epoch: 72, best train: 0.956, best val: 0.673, lr: 0.05588
iteration: 11, epoch: 73, best train: 0.956, best val: 0.673, lr: 0.0549
iteration: 11, epoch: 74, best train: 0.956, best val: 0.673, lr: 0.05392
iteration: 11, epoch: 75, best train: 0.956, best val: 0.673, lr: 0.05294
iteration: 11, epoch: 76, best train: 0.956, best val: 0.673, lr: 0.05196
iteration: 11, epoch: 77, best train: 0.956, best val: 0.6805, lr: 0.05098
iteration: 11, epoch: 78, best train: 0.956, best val: 0.6805, lr: 0.05
iteration: 11, epoch: 79, best train: 0.956, best val: 0.6805, lr: 0.04902
iteration: 11, epoch: 80, best train: 0.956, best val: 0.6805, lr: 0.04804
iteration: 11, epoch: 81, best train: 0.961, best val: 0.6805, lr: 0.04706
iteration: 11, epoch: 82, best train: 0.961, best val: 0.6805, lr: 0.04608
iteration: 11, epoch: 83, best train: 0.961, best val: 0.6805, lr: 0.0451
iteration: 11, epoch: 84, best train: 0.961, best val: 0.6821, lr: 0.04412
iteration: 11, epoch: 85, best train: 0.961, best val: 0.6821, lr: 0.04315
iteration: 11, epoch: 86, best train: 0.961, best val: 0.6821, lr: 0.04218
iteration: 11, epoch: 87, best train: 0.961, best val: 0.6821, lr: 0.04121
iteration: 11, epoch: 88, best train: 0.961, best val: 0.6821, lr: 0.04025
iteration: 11, epoch: 89, best train: 0.961, best val: 0.6821, lr: 0.03928
iteration: 11, epoch: 90, best train: 0.961, best val: 0.6821, lr: 0.03833
iteration: 11, epoch: 91, best train: 0.961, best val: 0.686, lr: 0.03738
iteration: 11, epoch: 92, best train: 0.961, best val: 0.686, lr: 0.03643
iteration: 11, epoch: 93, best train: 0.961, best val: 0.686, lr: 0.03549
iteration: 11, epoch: 94, best train: 0.961, best val: 0.686, lr: 0.03455
iteration: 11, epoch: 95, best train: 0.961, best val: 0.686, lr: 0.03362
iteration: 11, epoch: 96, best train: 0.961, best val: 0.686, lr: 0.03269
iteration: 11, epoch: 97, best train: 0.961, best val: 0.686, lr: 0.03178
iteration: 11, epoch: 98, best train: 0.961, best val: 0.686, lr: 0.03087
iteration: 11, epoch: 99, best train: 0.961, best val: 0.686, lr: 0.02996
iteration: 11, epoch: 100, best train: 0.961, best val: 0.686, lr: 0.02907
iteration: 11, epoch: 101, best train: 0.961, best val: 0.686, lr: 0.02818
iteration: 11, epoch: 102, best train: 0.961, best val: 0.686, lr: 0.0273
iteration: 11, epoch: 103, best train: 0.961, best val: 0.686, lr: 0.02643
iteration: 11, epoch: 104, best train: 0.961, best val: 0.686, lr: 0.02557
iteration: 11, epoch: 105, best train: 0.961, best val: 0.686, lr: 0.02472
iteration: 11, epoch: 106, best train: 0.965, best val: 0.686, lr: 0.02388
iteration: 11, epoch: 107, best train: 0.965, best val: 0.686, lr: 0.02304
iteration: 11, epoch: 108, best train: 0.965, best val: 0.686, lr: 0.02222
iteration: 11, epoch: 109, best train: 0.965, best val: 0.686, lr: 0.02141
iteration: 11, epoch: 110, best train: 0.965, best val: 0.686, lr: 0.02061
iteration: 11, epoch: 111, best train: 0.965, best val: 0.686, lr: 0.01982
iteration: 11, epoch: 112, best train: 0.965, best val: 0.686, lr: 0.01905
iteration: 11, epoch: 113, best train: 0.965, best val: 0.686, lr: 0.01828
iteration: 11, epoch: 114, best train: 0.965, best val: 0.686, lr: 0.01753
iteration: 11, epoch: 115, best train: 0.965, best val: 0.686, lr: 0.01679
iteration: 11, epoch: 116, best train: 0.965, best val: 0.686, lr: 0.01606
iteration: 11, epoch: 117, best train: 0.969, best val: 0.686, lr: 0.01535
iteration: 11, epoch: 118, best train: 0.969, best val: 0.686, lr: 0.01464
iteration: 11, epoch: 119, best train: 0.969, best val: 0.686, lr: 0.01396
iteration: 11, epoch: 120, best train: 0.969, best val: 0.6882, lr: 0.01328
iteration: 11, epoch: 121, best train: 0.969, best val: 0.6899, lr: 0.01262
iteration: 11, epoch: 122, best train: 0.969, best val: 0.6932, lr: 0.01198
iteration: 11, epoch: 123, best train: 0.969, best val: 0.6932, lr: 0.01135
iteration: 11, epoch: 124, best train: 0.969, best val: 0.6932, lr: 0.01073
iteration: 11, epoch: 125, best train: 0.969, best val: 0.6932, lr: 0.01013
iteration: 11, epoch: 126, best train: 0.969, best val: 0.6932, lr: 0.00955
iteration: 11, epoch: 127, best train: 0.969, best val: 0.6932, lr: 0.00898
iteration: 11, epoch: 128, best train: 0.973, best val: 0.6932, lr: 0.00843
iteration: 11, epoch: 129, best train: 0.973, best val: 0.6932, lr: 0.00789
iteration: 11, epoch: 130, best train: 0.973, best val: 0.6932, lr: 0.00737
iteration: 11, epoch: 131, best train: 0.973, best val: 0.6932, lr: 0.00686
iteration: 11, epoch: 132, best train: 0.973, best val: 0.6932, lr: 0.00638
iteration: 11, epoch: 133, best train: 0.973, best val: 0.6932, lr: 0.0059
iteration: 11, epoch: 134, best train: 0.973, best val: 0.6932, lr: 0.00545
iteration: 11, epoch: 135, best train: 0.974, best val: 0.6932, lr: 0.00501
iteration: 11, epoch: 136, best train: 0.974, best val: 0.6932, lr: 0.00459
iteration: 11, epoch: 137, best train: 0.974, best val: 0.6932, lr: 0.00419
iteration: 11, epoch: 138, best train: 0.974, best val: 0.6932, lr: 0.00381
iteration: 11, epoch: 139, best train: 0.974, best val: 0.6932, lr: 0.00344
iteration: 11, epoch: 140, best train: 0.974, best val: 0.6932, lr: 0.00309
iteration: 11, epoch: 141, best train: 0.979, best val: 0.6932, lr: 0.00276
iteration: 11, epoch: 142, best train: 0.979, best val: 0.6932, lr: 0.00245
iteration: 11, epoch: 143, best train: 0.979, best val: 0.6932, lr: 0.00215
iteration: 11, epoch: 144, best train: 0.979, best val: 0.6932, lr: 0.00188
iteration: 11, epoch: 145, best train: 0.979, best val: 0.6932, lr: 0.00162
iteration: 11, epoch: 146, best train: 0.979, best val: 0.6936, lr: 0.00138
iteration: 11, epoch: 147, best train: 0.979, best val: 0.6951, lr: 0.00116
iteration: 11, epoch: 148, best train: 0.979, best val: 0.6951, lr: 0.00096
iteration: 11, epoch: 149, best train: 0.979, best val: 0.6951, lr: 0.00078
iteration: 11, epoch: 150, best train: 0.979, best val: 0.6951, lr: 0.00062
iteration: 11, epoch: 151, best train: 0.979, best val: 0.6951, lr: 0.00047
iteration: 11, epoch: 152, best train: 0.979, best val: 0.6951, lr: 0.00035
iteration: 11, epoch: 153, best train: 0.979, best val: 0.6951, lr: 0.00024
iteration: 11, epoch: 154, best train: 0.979, best val: 0.6951, lr: 0.00015
iteration: 11, epoch: 155, best train: 0.979, best val: 0.6951, lr: 9e-05
iteration: 11, epoch: 156, best train: 0.979, best val: 0.6951, lr: 4e-05
iteration: 11, epoch: 157, best train: 0.979, best val: 0.6951, lr: 1e-05
iteration: 11, epoch: 158, best train: 0.979, best val: 0.6951, lr: 0.0
iteration: 11, epoch: 159, best train: 0.979, best val: 0.6951, lr: 1e-05
------------------------ Checkpoint 37  ------------------------
pre_conv.0.weight_mask 	|	active =  658 	|	total =  1728 	|	layerwise sparsity =  0.38078703703703703
layer1.0.conv1.weight_mask 	|	active =  2533 	|	total =  36864 	|	layerwise sparsity =  0.06871202256944445
layer1.0.conv2.weight_mask 	|	active =  2533 	|	total =  36864 	|	layerwise sparsity =  0.06871202256944445
layer1.1.conv1.weight_mask 	|	active =  2533 	|	total =  36864 	|	layerwise sparsity =  0.06871202256944445
layer1.1.conv2.weight_mask 	|	active =  2533 	|	total =  36864 	|	layerwise sparsity =  0.06871202256944445
layer2.0.conv1.weight_mask 	|	active =  5067 	|	total =  73728 	|	layerwise sparsity =  0.0687255859375
layer2.0.conv2.weight_mask 	|	active =  10133 	|	total =  147456 	|	layerwise sparsity =  0.06871880425347222
layer2.0.shortcut.0.weight_mask 	|	active =  3119 	|	total =  8192 	|	layerwise sparsity =  0.3807373046875
layer2.1.conv1.weight_mask 	|	active =  10133 	|	total =  147456 	|	layerwise sparsity =  0.06871880425347222
layer2.1.conv2.weight_mask 	|	active =  10133 	|	total =  147456 	|	layerwise sparsity =  0.06871880425347222
layer3.0.conv1.weight_mask 	|	active =  20266 	|	total =  294912 	|	layerwise sparsity =  0.06871880425347222
layer3.0.conv2.weight_mask 	|	active =  25092 	|	total =  589824 	|	layerwise sparsity =  0.04254150390625
layer3.0.shortcut.0.weight_mask 	|	active =  2251 	|	total =  32768 	|	layerwise sparsity =  0.068695068359375
layer3.1.conv1.weight_mask 	|	active =  26075 	|	total =  589824 	|	layerwise sparsity =  0.04420810275607639
layer3.1.conv2.weight_mask 	|	active =  27595 	|	total =  589824 	|	layerwise sparsity =  0.04678514268663195
layer4.0.conv1.weight_mask 	|	active =  69456 	|	total =  1179648 	|	layerwise sparsity =  0.058878580729166664
layer4.0.conv2.weight_mask 	|	active =  176264 	|	total =  2359296 	|	layerwise sparsity =  0.0747104220920139
layer4.0.shortcut.0.weight_mask 	|	active =  9007 	|	total =  131072 	|	layerwise sparsity =  0.06871795654296875
layer4.1.conv1.weight_mask 	|	active =  187789 	|	total =  2359296 	|	layerwise sparsity =  0.07959535386827257
layer4.1.conv2.weight_mask 	|	active =  203383 	|	total =  2359296 	|	layerwise sparsity =  0.08620495266384548
------------------------ Checkpoint 38  ------------------------
best_val =  0.6951
------------------------ Checkpoint 39  ------------------------
pruning state: 12
remaining weight at start of iteration =  7.138062906121134
iteration: 12, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 12, epoch: 1, best train: 0.418, best val: 0.1, lr: 0.09991
iteration: 12, epoch: 2, best train: 0.496, best val: 0.1, lr: 0.09985
iteration: 12, epoch: 3, best train: 0.546, best val: 0.1303, lr: 0.09976
iteration: 12, epoch: 4, best train: 0.613, best val: 0.3149, lr: 0.09965
iteration: 12, epoch: 5, best train: 0.613, best val: 0.5004, lr: 0.09953
iteration: 12, epoch: 6, best train: 0.686, best val: 0.5458, lr: 0.09938
iteration: 12, epoch: 7, best train: 0.686, best val: 0.5458, lr: 0.09922
iteration: 12, epoch: 8, best train: 0.729, best val: 0.5458, lr: 0.09904
iteration: 12, epoch: 9, best train: 0.747, best val: 0.5458, lr: 0.09884
iteration: 12, epoch: 10, best train: 0.747, best val: 0.5458, lr: 0.09862
iteration: 12, epoch: 11, best train: 0.778, best val: 0.5458, lr: 0.09838
iteration: 12, epoch: 12, best train: 0.801, best val: 0.5786, lr: 0.09812
iteration: 12, epoch: 13, best train: 0.822, best val: 0.6123, lr: 0.09785
iteration: 12, epoch: 14, best train: 0.822, best val: 0.6123, lr: 0.09755
iteration: 12, epoch: 15, best train: 0.822, best val: 0.6123, lr: 0.09724
iteration: 12, epoch: 16, best train: 0.822, best val: 0.6123, lr: 0.09691
iteration: 12, epoch: 17, best train: 0.822, best val: 0.6123, lr: 0.09656
iteration: 12, epoch: 18, best train: 0.855, best val: 0.6123, lr: 0.09619
iteration: 12, epoch: 19, best train: 0.861, best val: 0.6238, lr: 0.09581
iteration: 12, epoch: 20, best train: 0.876, best val: 0.6238, lr: 0.09541
iteration: 12, epoch: 21, best train: 0.876, best val: 0.6238, lr: 0.09499
iteration: 12, epoch: 22, best train: 0.876, best val: 0.6238, lr: 0.09455
iteration: 12, epoch: 23, best train: 0.876, best val: 0.6238, lr: 0.0941
iteration: 12, epoch: 24, best train: 0.876, best val: 0.6238, lr: 0.09362
iteration: 12, epoch: 25, best train: 0.876, best val: 0.6243, lr: 0.09314
iteration: 12, epoch: 26, best train: 0.883, best val: 0.6332, lr: 0.09263
iteration: 12, epoch: 27, best train: 0.888, best val: 0.6332, lr: 0.09211
iteration: 12, epoch: 28, best train: 0.888, best val: 0.639, lr: 0.09157
iteration: 12, epoch: 29, best train: 0.89, best val: 0.639, lr: 0.09102
iteration: 12, epoch: 30, best train: 0.89, best val: 0.639, lr: 0.09045
iteration: 12, epoch: 31, best train: 0.897, best val: 0.639, lr: 0.08987
iteration: 12, epoch: 32, best train: 0.907, best val: 0.639, lr: 0.08927
iteration: 12, epoch: 33, best train: 0.907, best val: 0.639, lr: 0.08865
iteration: 12, epoch: 34, best train: 0.907, best val: 0.639, lr: 0.08802
iteration: 12, epoch: 35, best train: 0.907, best val: 0.639, lr: 0.08738
iteration: 12, epoch: 36, best train: 0.907, best val: 0.639, lr: 0.08672
iteration: 12, epoch: 37, best train: 0.907, best val: 0.639, lr: 0.08604
iteration: 12, epoch: 38, best train: 0.907, best val: 0.639, lr: 0.08536
iteration: 12, epoch: 39, best train: 0.907, best val: 0.639, lr: 0.08465
iteration: 12, epoch: 40, best train: 0.908, best val: 0.639, lr: 0.08394
iteration: 12, epoch: 41, best train: 0.908, best val: 0.6464, lr: 0.08321
iteration: 12, epoch: 42, best train: 0.908, best val: 0.6464, lr: 0.08247
iteration: 12, epoch: 43, best train: 0.91, best val: 0.6486, lr: 0.08172
iteration: 12, epoch: 44, best train: 0.91, best val: 0.6486, lr: 0.08095
iteration: 12, epoch: 45, best train: 0.91, best val: 0.6486, lr: 0.08018
iteration: 12, epoch: 46, best train: 0.929, best val: 0.6486, lr: 0.07939
iteration: 12, epoch: 47, best train: 0.929, best val: 0.6486, lr: 0.07859
iteration: 12, epoch: 48, best train: 0.929, best val: 0.6486, lr: 0.07778
iteration: 12, epoch: 49, best train: 0.929, best val: 0.6602, lr: 0.07696
iteration: 12, epoch: 50, best train: 0.929, best val: 0.6602, lr: 0.07612
iteration: 12, epoch: 51, best train: 0.929, best val: 0.6602, lr: 0.07528
iteration: 12, epoch: 52, best train: 0.929, best val: 0.6602, lr: 0.07443
iteration: 12, epoch: 53, best train: 0.929, best val: 0.6602, lr: 0.07357
iteration: 12, epoch: 54, best train: 0.93, best val: 0.6602, lr: 0.0727
iteration: 12, epoch: 55, best train: 0.93, best val: 0.6602, lr: 0.07182
iteration: 12, epoch: 56, best train: 0.93, best val: 0.6602, lr: 0.07093
iteration: 12, epoch: 57, best train: 0.93, best val: 0.6602, lr: 0.07004
iteration: 12, epoch: 58, best train: 0.933, best val: 0.6602, lr: 0.06913
iteration: 12, epoch: 59, best train: 0.933, best val: 0.6602, lr: 0.06822
iteration: 12, epoch: 60, best train: 0.933, best val: 0.6694, lr: 0.06731
iteration: 12, epoch: 61, best train: 0.933, best val: 0.6694, lr: 0.06638
iteration: 12, epoch: 62, best train: 0.933, best val: 0.6694, lr: 0.06545
iteration: 12, epoch: 63, best train: 0.933, best val: 0.6694, lr: 0.06451
iteration: 12, epoch: 64, best train: 0.945, best val: 0.6694, lr: 0.06357
iteration: 12, epoch: 65, best train: 0.945, best val: 0.6694, lr: 0.06262
iteration: 12, epoch: 66, best train: 0.945, best val: 0.6694, lr: 0.06167
iteration: 12, epoch: 67, best train: 0.945, best val: 0.6694, lr: 0.06072
iteration: 12, epoch: 68, best train: 0.945, best val: 0.6694, lr: 0.05975
iteration: 12, epoch: 69, best train: 0.945, best val: 0.6694, lr: 0.05879
iteration: 12, epoch: 70, best train: 0.945, best val: 0.6694, lr: 0.05782
iteration: 12, epoch: 71, best train: 0.945, best val: 0.6746, lr: 0.05685
iteration: 12, epoch: 72, best train: 0.945, best val: 0.6746, lr: 0.05588
iteration: 12, epoch: 73, best train: 0.945, best val: 0.6746, lr: 0.0549
iteration: 12, epoch: 74, best train: 0.945, best val: 0.6746, lr: 0.05392
iteration: 12, epoch: 75, best train: 0.945, best val: 0.6746, lr: 0.05294
iteration: 12, epoch: 76, best train: 0.945, best val: 0.6746, lr: 0.05196
iteration: 12, epoch: 77, best train: 0.945, best val: 0.6746, lr: 0.05098
iteration: 12, epoch: 78, best train: 0.951, best val: 0.6746, lr: 0.05
iteration: 12, epoch: 79, best train: 0.951, best val: 0.6746, lr: 0.04902
iteration: 12, epoch: 80, best train: 0.951, best val: 0.6781, lr: 0.04804
iteration: 12, epoch: 81, best train: 0.951, best val: 0.6781, lr: 0.04706
iteration: 12, epoch: 82, best train: 0.951, best val: 0.6781, lr: 0.04608
iteration: 12, epoch: 83, best train: 0.951, best val: 0.6781, lr: 0.0451
iteration: 12, epoch: 84, best train: 0.951, best val: 0.6781, lr: 0.04412
iteration: 12, epoch: 85, best train: 0.96, best val: 0.6781, lr: 0.04315
iteration: 12, epoch: 86, best train: 0.96, best val: 0.6781, lr: 0.04218
iteration: 12, epoch: 87, best train: 0.96, best val: 0.6788, lr: 0.04121
iteration: 12, epoch: 88, best train: 0.96, best val: 0.6791, lr: 0.04025
iteration: 12, epoch: 89, best train: 0.96, best val: 0.6791, lr: 0.03928
iteration: 12, epoch: 90, best train: 0.96, best val: 0.6791, lr: 0.03833
iteration: 12, epoch: 91, best train: 0.96, best val: 0.6791, lr: 0.03738
iteration: 12, epoch: 92, best train: 0.96, best val: 0.6824, lr: 0.03643
iteration: 12, epoch: 93, best train: 0.96, best val: 0.6906, lr: 0.03549
iteration: 12, epoch: 94, best train: 0.969, best val: 0.6951, lr: 0.03455
iteration: 12, epoch: 95, best train: 0.969, best val: 0.6951, lr: 0.03362
iteration: 12, epoch: 96, best train: 0.969, best val: 0.6951, lr: 0.03269
iteration: 12, epoch: 97, best train: 0.969, best val: 0.6951, lr: 0.03178
iteration: 12, epoch: 98, best train: 0.969, best val: 0.6951, lr: 0.03087
iteration: 12, epoch: 99, best train: 0.969, best val: 0.6951, lr: 0.02996
iteration: 12, epoch: 100, best train: 0.969, best val: 0.6951, lr: 0.02907
iteration: 12, epoch: 101, best train: 0.969, best val: 0.6951, lr: 0.02818
iteration: 12, epoch: 102, best train: 0.969, best val: 0.6951, lr: 0.0273
iteration: 12, epoch: 103, best train: 0.969, best val: 0.6951, lr: 0.02643
iteration: 12, epoch: 104, best train: 0.969, best val: 0.6951, lr: 0.02557
iteration: 12, epoch: 105, best train: 0.969, best val: 0.6951, lr: 0.02472
iteration: 12, epoch: 106, best train: 0.969, best val: 0.6951, lr: 0.02388
iteration: 12, epoch: 107, best train: 0.969, best val: 0.6951, lr: 0.02304
iteration: 12, epoch: 108, best train: 0.969, best val: 0.6951, lr: 0.02222
iteration: 12, epoch: 109, best train: 0.969, best val: 0.6951, lr: 0.02141
iteration: 12, epoch: 110, best train: 0.969, best val: 0.6951, lr: 0.02061
iteration: 12, epoch: 111, best train: 0.969, best val: 0.6951, lr: 0.01982
iteration: 12, epoch: 112, best train: 0.969, best val: 0.6951, lr: 0.01905
iteration: 12, epoch: 113, best train: 0.969, best val: 0.6951, lr: 0.01828
iteration: 12, epoch: 114, best train: 0.969, best val: 0.6951, lr: 0.01753
iteration: 12, epoch: 115, best train: 0.969, best val: 0.6951, lr: 0.01679
iteration: 12, epoch: 116, best train: 0.969, best val: 0.6951, lr: 0.01606
iteration: 12, epoch: 117, best train: 0.969, best val: 0.6951, lr: 0.01535
iteration: 12, epoch: 118, best train: 0.969, best val: 0.6951, lr: 0.01464
iteration: 12, epoch: 119, best train: 0.969, best val: 0.6951, lr: 0.01396
iteration: 12, epoch: 120, best train: 0.969, best val: 0.6951, lr: 0.01328
iteration: 12, epoch: 121, best train: 0.969, best val: 0.6951, lr: 0.01262
iteration: 12, epoch: 122, best train: 0.969, best val: 0.6962, lr: 0.01198
iteration: 12, epoch: 123, best train: 0.969, best val: 0.6973, lr: 0.01135
iteration: 12, epoch: 124, best train: 0.969, best val: 0.6973, lr: 0.01073
iteration: 12, epoch: 125, best train: 0.969, best val: 0.6973, lr: 0.01013
iteration: 12, epoch: 126, best train: 0.969, best val: 0.6973, lr: 0.00955
iteration: 12, epoch: 127, best train: 0.969, best val: 0.6973, lr: 0.00898
iteration: 12, epoch: 128, best train: 0.969, best val: 0.6973, lr: 0.00843
iteration: 12, epoch: 129, best train: 0.974, best val: 0.6973, lr: 0.00789
iteration: 12, epoch: 130, best train: 0.974, best val: 0.6973, lr: 0.00737
iteration: 12, epoch: 131, best train: 0.974, best val: 0.6973, lr: 0.00686
iteration: 12, epoch: 132, best train: 0.974, best val: 0.6973, lr: 0.00638
iteration: 12, epoch: 133, best train: 0.974, best val: 0.698, lr: 0.0059
iteration: 12, epoch: 134, best train: 0.974, best val: 0.698, lr: 0.00545
iteration: 12, epoch: 135, best train: 0.974, best val: 0.698, lr: 0.00501
iteration: 12, epoch: 136, best train: 0.974, best val: 0.698, lr: 0.00459
iteration: 12, epoch: 137, best train: 0.974, best val: 0.698, lr: 0.00419
iteration: 12, epoch: 138, best train: 0.974, best val: 0.698, lr: 0.00381
iteration: 12, epoch: 139, best train: 0.974, best val: 0.698, lr: 0.00344
iteration: 12, epoch: 140, best train: 0.974, best val: 0.698, lr: 0.00309
iteration: 12, epoch: 141, best train: 0.974, best val: 0.698, lr: 0.00276
iteration: 12, epoch: 142, best train: 0.976, best val: 0.6982, lr: 0.00245
iteration: 12, epoch: 143, best train: 0.976, best val: 0.6982, lr: 0.00215
iteration: 12, epoch: 144, best train: 0.976, best val: 0.6982, lr: 0.00188
iteration: 12, epoch: 145, best train: 0.976, best val: 0.6993, lr: 0.00162
iteration: 12, epoch: 146, best train: 0.976, best val: 0.6993, lr: 0.00138
iteration: 12, epoch: 147, best train: 0.976, best val: 0.6993, lr: 0.00116
iteration: 12, epoch: 148, best train: 0.976, best val: 0.6993, lr: 0.00096
iteration: 12, epoch: 149, best train: 0.976, best val: 0.6993, lr: 0.00078
iteration: 12, epoch: 150, best train: 0.976, best val: 0.6993, lr: 0.00062
iteration: 12, epoch: 151, best train: 0.976, best val: 0.6993, lr: 0.00047
iteration: 12, epoch: 152, best train: 0.976, best val: 0.6993, lr: 0.00035
iteration: 12, epoch: 153, best train: 0.976, best val: 0.6993, lr: 0.00024
iteration: 12, epoch: 154, best train: 0.976, best val: 0.6993, lr: 0.00015
iteration: 12, epoch: 155, best train: 0.976, best val: 0.6993, lr: 9e-05
iteration: 12, epoch: 156, best train: 0.976, best val: 0.6993, lr: 4e-05
iteration: 12, epoch: 157, best train: 0.976, best val: 0.6993, lr: 1e-05
iteration: 12, epoch: 158, best train: 0.976, best val: 0.6993, lr: 0.0
iteration: 12, epoch: 159, best train: 0.976, best val: 0.6993, lr: 1e-05
------------------------ Checkpoint 40  ------------------------
pre_conv.0.weight_mask 	|	active =  607 	|	total =  1728 	|	layerwise sparsity =  0.35127314814814814
layer1.0.conv1.weight_mask 	|	active =  2026 	|	total =  36864 	|	layerwise sparsity =  0.05495876736111111
layer1.0.conv2.weight_mask 	|	active =  2026 	|	total =  36864 	|	layerwise sparsity =  0.05495876736111111
layer1.1.conv1.weight_mask 	|	active =  2026 	|	total =  36864 	|	layerwise sparsity =  0.05495876736111111
layer1.1.conv2.weight_mask 	|	active =  2026 	|	total =  36864 	|	layerwise sparsity =  0.05495876736111111
layer2.0.conv1.weight_mask 	|	active =  4054 	|	total =  73728 	|	layerwise sparsity =  0.054985894097222224
layer2.0.conv2.weight_mask 	|	active =  8106 	|	total =  147456 	|	layerwise sparsity =  0.054972330729166664
layer2.0.shortcut.0.weight_mask 	|	active =  2878 	|	total =  8192 	|	layerwise sparsity =  0.351318359375
layer2.1.conv1.weight_mask 	|	active =  8106 	|	total =  147456 	|	layerwise sparsity =  0.054972330729166664
layer2.1.conv2.weight_mask 	|	active =  8106 	|	total =  147456 	|	layerwise sparsity =  0.054972330729166664
layer3.0.conv1.weight_mask 	|	active =  16213 	|	total =  294912 	|	layerwise sparsity =  0.05497572157118055
layer3.0.conv2.weight_mask 	|	active =  19287 	|	total =  589824 	|	layerwise sparsity =  0.0326995849609375
layer3.0.shortcut.0.weight_mask 	|	active =  1801 	|	total =  32768 	|	layerwise sparsity =  0.054962158203125
layer3.1.conv1.weight_mask 	|	active =  20107 	|	total =  589824 	|	layerwise sparsity =  0.03408983018663195
layer3.1.conv2.weight_mask 	|	active =  21380 	|	total =  589824 	|	layerwise sparsity =  0.036248101128472224
layer4.0.conv1.weight_mask 	|	active =  54854 	|	total =  1179648 	|	layerwise sparsity =  0.046500311957465276
layer4.0.conv2.weight_mask 	|	active =  141997 	|	total =  2359296 	|	layerwise sparsity =  0.06018617418077257
layer4.0.shortcut.0.weight_mask 	|	active =  7206 	|	total =  131072 	|	layerwise sparsity =  0.0549774169921875
layer4.1.conv1.weight_mask 	|	active =  152082 	|	total =  2359296 	|	layerwise sparsity =  0.06446075439453125
layer4.1.conv2.weight_mask 	|	active =  165809 	|	total =  2359296 	|	layerwise sparsity =  0.07027901543511285
------------------------ Checkpoint 41  ------------------------
best_val =  0.6992999999999999
------------------------ Checkpoint 42  ------------------------
pruning state: 13
remaining weight at start of iteration =  5.741407652426256
iteration: 13, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 13, epoch: 1, best train: 0.429, best val: 0.1, lr: 0.09991
iteration: 13, epoch: 2, best train: 0.506, best val: 0.1, lr: 0.09985
iteration: 13, epoch: 3, best train: 0.506, best val: 0.1341, lr: 0.09976
iteration: 13, epoch: 4, best train: 0.572, best val: 0.2283, lr: 0.09965
iteration: 13, epoch: 5, best train: 0.633, best val: 0.5013, lr: 0.09953
iteration: 13, epoch: 6, best train: 0.665, best val: 0.5132, lr: 0.09938
iteration: 13, epoch: 7, best train: 0.678, best val: 0.5132, lr: 0.09922
iteration: 13, epoch: 8, best train: 0.718, best val: 0.5183, lr: 0.09904
iteration: 13, epoch: 9, best train: 0.718, best val: 0.5183, lr: 0.09884
iteration: 13, epoch: 10, best train: 0.718, best val: 0.5803, lr: 0.09862
iteration: 13, epoch: 11, best train: 0.772, best val: 0.5946, lr: 0.09838
iteration: 13, epoch: 12, best train: 0.787, best val: 0.5946, lr: 0.09812
iteration: 13, epoch: 13, best train: 0.811, best val: 0.5946, lr: 0.09785
iteration: 13, epoch: 14, best train: 0.811, best val: 0.5946, lr: 0.09755
iteration: 13, epoch: 15, best train: 0.811, best val: 0.604, lr: 0.09724
iteration: 13, epoch: 16, best train: 0.811, best val: 0.604, lr: 0.09691
iteration: 13, epoch: 17, best train: 0.815, best val: 0.6054, lr: 0.09656
iteration: 13, epoch: 18, best train: 0.841, best val: 0.6054, lr: 0.09619
iteration: 13, epoch: 19, best train: 0.846, best val: 0.626, lr: 0.09581
iteration: 13, epoch: 20, best train: 0.846, best val: 0.626, lr: 0.09541
iteration: 13, epoch: 21, best train: 0.846, best val: 0.626, lr: 0.09499
iteration: 13, epoch: 22, best train: 0.846, best val: 0.626, lr: 0.09455
iteration: 13, epoch: 23, best train: 0.864, best val: 0.6264, lr: 0.0941
iteration: 13, epoch: 24, best train: 0.87, best val: 0.6264, lr: 0.09362
iteration: 13, epoch: 25, best train: 0.87, best val: 0.6264, lr: 0.09314
iteration: 13, epoch: 26, best train: 0.87, best val: 0.6264, lr: 0.09263
iteration: 13, epoch: 27, best train: 0.875, best val: 0.6264, lr: 0.09211
iteration: 13, epoch: 28, best train: 0.875, best val: 0.6264, lr: 0.09157
iteration: 13, epoch: 29, best train: 0.876, best val: 0.6264, lr: 0.09102
iteration: 13, epoch: 30, best train: 0.876, best val: 0.6264, lr: 0.09045
iteration: 13, epoch: 31, best train: 0.876, best val: 0.6264, lr: 0.08987
iteration: 13, epoch: 32, best train: 0.876, best val: 0.6264, lr: 0.08927
iteration: 13, epoch: 33, best train: 0.876, best val: 0.6264, lr: 0.08865
iteration: 13, epoch: 34, best train: 0.881, best val: 0.6264, lr: 0.08802
iteration: 13, epoch: 35, best train: 0.89, best val: 0.6401, lr: 0.08738
iteration: 13, epoch: 36, best train: 0.89, best val: 0.6552, lr: 0.08672
iteration: 13, epoch: 37, best train: 0.89, best val: 0.6552, lr: 0.08604
iteration: 13, epoch: 38, best train: 0.89, best val: 0.6552, lr: 0.08536
iteration: 13, epoch: 39, best train: 0.893, best val: 0.6552, lr: 0.08465
iteration: 13, epoch: 40, best train: 0.908, best val: 0.6552, lr: 0.08394
iteration: 13, epoch: 41, best train: 0.908, best val: 0.6552, lr: 0.08321
iteration: 13, epoch: 42, best train: 0.908, best val: 0.6552, lr: 0.08247
iteration: 13, epoch: 43, best train: 0.908, best val: 0.6552, lr: 0.08172
iteration: 13, epoch: 44, best train: 0.908, best val: 0.6552, lr: 0.08095
iteration: 13, epoch: 45, best train: 0.908, best val: 0.6552, lr: 0.08018
iteration: 13, epoch: 46, best train: 0.908, best val: 0.6552, lr: 0.07939
iteration: 13, epoch: 47, best train: 0.917, best val: 0.6552, lr: 0.07859
iteration: 13, epoch: 48, best train: 0.917, best val: 0.6552, lr: 0.07778
iteration: 13, epoch: 49, best train: 0.917, best val: 0.6554, lr: 0.07696
iteration: 13, epoch: 50, best train: 0.926, best val: 0.6554, lr: 0.07612
iteration: 13, epoch: 51, best train: 0.931, best val: 0.6701, lr: 0.07528
iteration: 13, epoch: 52, best train: 0.931, best val: 0.6701, lr: 0.07443
iteration: 13, epoch: 53, best train: 0.931, best val: 0.6701, lr: 0.07357
iteration: 13, epoch: 54, best train: 0.931, best val: 0.6701, lr: 0.0727
iteration: 13, epoch: 55, best train: 0.931, best val: 0.6701, lr: 0.07182
iteration: 13, epoch: 56, best train: 0.931, best val: 0.6701, lr: 0.07093
iteration: 13, epoch: 57, best train: 0.931, best val: 0.6701, lr: 0.07004
iteration: 13, epoch: 58, best train: 0.931, best val: 0.6701, lr: 0.06913
iteration: 13, epoch: 59, best train: 0.938, best val: 0.6701, lr: 0.06822
iteration: 13, epoch: 60, best train: 0.938, best val: 0.6701, lr: 0.06731
iteration: 13, epoch: 61, best train: 0.938, best val: 0.6701, lr: 0.06638
iteration: 13, epoch: 62, best train: 0.938, best val: 0.6701, lr: 0.06545
iteration: 13, epoch: 63, best train: 0.938, best val: 0.6701, lr: 0.06451
iteration: 13, epoch: 64, best train: 0.938, best val: 0.6701, lr: 0.06357
iteration: 13, epoch: 65, best train: 0.938, best val: 0.6701, lr: 0.06262
iteration: 13, epoch: 66, best train: 0.938, best val: 0.6701, lr: 0.06167
iteration: 13, epoch: 67, best train: 0.949, best val: 0.6701, lr: 0.06072
iteration: 13, epoch: 68, best train: 0.949, best val: 0.6701, lr: 0.05975
iteration: 13, epoch: 69, best train: 0.954, best val: 0.6701, lr: 0.05879
iteration: 13, epoch: 70, best train: 0.954, best val: 0.6701, lr: 0.05782
iteration: 13, epoch: 71, best train: 0.954, best val: 0.6701, lr: 0.05685
iteration: 13, epoch: 72, best train: 0.954, best val: 0.6701, lr: 0.05588
iteration: 13, epoch: 73, best train: 0.954, best val: 0.6701, lr: 0.0549
iteration: 13, epoch: 74, best train: 0.954, best val: 0.6701, lr: 0.05392
iteration: 13, epoch: 75, best train: 0.954, best val: 0.6727, lr: 0.05294
iteration: 13, epoch: 76, best train: 0.954, best val: 0.6767, lr: 0.05196
iteration: 13, epoch: 77, best train: 0.954, best val: 0.6767, lr: 0.05098
iteration: 13, epoch: 78, best train: 0.954, best val: 0.6767, lr: 0.05
iteration: 13, epoch: 79, best train: 0.954, best val: 0.6767, lr: 0.04902
iteration: 13, epoch: 80, best train: 0.954, best val: 0.6767, lr: 0.04804
iteration: 13, epoch: 81, best train: 0.954, best val: 0.6767, lr: 0.04706
iteration: 13, epoch: 82, best train: 0.954, best val: 0.6767, lr: 0.04608
iteration: 13, epoch: 83, best train: 0.954, best val: 0.6837, lr: 0.0451
iteration: 13, epoch: 84, best train: 0.954, best val: 0.6837, lr: 0.04412
iteration: 13, epoch: 85, best train: 0.954, best val: 0.6837, lr: 0.04315
iteration: 13, epoch: 86, best train: 0.959, best val: 0.6837, lr: 0.04218
iteration: 13, epoch: 87, best train: 0.959, best val: 0.6837, lr: 0.04121
iteration: 13, epoch: 88, best train: 0.959, best val: 0.6837, lr: 0.04025
iteration: 13, epoch: 89, best train: 0.959, best val: 0.6837, lr: 0.03928
iteration: 13, epoch: 90, best train: 0.959, best val: 0.6837, lr: 0.03833
iteration: 13, epoch: 91, best train: 0.959, best val: 0.6837, lr: 0.03738
iteration: 13, epoch: 92, best train: 0.959, best val: 0.6837, lr: 0.03643
iteration: 13, epoch: 93, best train: 0.959, best val: 0.6837, lr: 0.03549
iteration: 13, epoch: 94, best train: 0.959, best val: 0.6858, lr: 0.03455
iteration: 13, epoch: 95, best train: 0.959, best val: 0.6858, lr: 0.03362
iteration: 13, epoch: 96, best train: 0.959, best val: 0.6858, lr: 0.03269
iteration: 13, epoch: 97, best train: 0.959, best val: 0.6858, lr: 0.03178
iteration: 13, epoch: 98, best train: 0.959, best val: 0.6858, lr: 0.03087
iteration: 13, epoch: 99, best train: 0.959, best val: 0.6858, lr: 0.02996
iteration: 13, epoch: 100, best train: 0.965, best val: 0.6858, lr: 0.02907
iteration: 13, epoch: 101, best train: 0.965, best val: 0.6858, lr: 0.02818
iteration: 13, epoch: 102, best train: 0.965, best val: 0.6858, lr: 0.0273
iteration: 13, epoch: 103, best train: 0.965, best val: 0.6858, lr: 0.02643
iteration: 13, epoch: 104, best train: 0.965, best val: 0.6858, lr: 0.02557
iteration: 13, epoch: 105, best train: 0.965, best val: 0.6858, lr: 0.02472
iteration: 13, epoch: 106, best train: 0.965, best val: 0.6858, lr: 0.02388
iteration: 13, epoch: 107, best train: 0.965, best val: 0.6858, lr: 0.02304
iteration: 13, epoch: 108, best train: 0.965, best val: 0.6884, lr: 0.02222
iteration: 13, epoch: 109, best train: 0.965, best val: 0.69, lr: 0.02141
iteration: 13, epoch: 110, best train: 0.965, best val: 0.69, lr: 0.02061
iteration: 13, epoch: 111, best train: 0.965, best val: 0.69, lr: 0.01982
iteration: 13, epoch: 112, best train: 0.965, best val: 0.69, lr: 0.01905
iteration: 13, epoch: 113, best train: 0.965, best val: 0.69, lr: 0.01828
iteration: 13, epoch: 114, best train: 0.965, best val: 0.692, lr: 0.01753
iteration: 13, epoch: 115, best train: 0.965, best val: 0.692, lr: 0.01679
iteration: 13, epoch: 116, best train: 0.965, best val: 0.692, lr: 0.01606
iteration: 13, epoch: 117, best train: 0.974, best val: 0.692, lr: 0.01535
iteration: 13, epoch: 118, best train: 0.974, best val: 0.692, lr: 0.01464
iteration: 13, epoch: 119, best train: 0.974, best val: 0.692, lr: 0.01396
iteration: 13, epoch: 120, best train: 0.974, best val: 0.692, lr: 0.01328
iteration: 13, epoch: 121, best train: 0.974, best val: 0.692, lr: 0.01262
iteration: 13, epoch: 122, best train: 0.974, best val: 0.692, lr: 0.01198
iteration: 13, epoch: 123, best train: 0.974, best val: 0.692, lr: 0.01135
iteration: 13, epoch: 124, best train: 0.974, best val: 0.692, lr: 0.01073
iteration: 13, epoch: 125, best train: 0.974, best val: 0.692, lr: 0.01013
iteration: 13, epoch: 126, best train: 0.974, best val: 0.692, lr: 0.00955
iteration: 13, epoch: 127, best train: 0.974, best val: 0.692, lr: 0.00898
iteration: 13, epoch: 128, best train: 0.974, best val: 0.692, lr: 0.00843
iteration: 13, epoch: 129, best train: 0.98, best val: 0.692, lr: 0.00789
iteration: 13, epoch: 130, best train: 0.98, best val: 0.692, lr: 0.00737
iteration: 13, epoch: 131, best train: 0.98, best val: 0.692, lr: 0.00686
iteration: 13, epoch: 132, best train: 0.98, best val: 0.692, lr: 0.00638
iteration: 13, epoch: 133, best train: 0.98, best val: 0.692, lr: 0.0059
iteration: 13, epoch: 134, best train: 0.98, best val: 0.692, lr: 0.00545
iteration: 13, epoch: 135, best train: 0.98, best val: 0.692, lr: 0.00501
iteration: 13, epoch: 136, best train: 0.98, best val: 0.692, lr: 0.00459
iteration: 13, epoch: 137, best train: 0.98, best val: 0.692, lr: 0.00419
iteration: 13, epoch: 138, best train: 0.98, best val: 0.692, lr: 0.00381
iteration: 13, epoch: 139, best train: 0.98, best val: 0.692, lr: 0.00344
iteration: 13, epoch: 140, best train: 0.98, best val: 0.692, lr: 0.00309
iteration: 13, epoch: 141, best train: 0.98, best val: 0.692, lr: 0.00276
iteration: 13, epoch: 142, best train: 0.98, best val: 0.692, lr: 0.00245
iteration: 13, epoch: 143, best train: 0.98, best val: 0.692, lr: 0.00215
iteration: 13, epoch: 144, best train: 0.98, best val: 0.692, lr: 0.00188
iteration: 13, epoch: 145, best train: 0.98, best val: 0.692, lr: 0.00162
iteration: 13, epoch: 146, best train: 0.98, best val: 0.692, lr: 0.00138
iteration: 13, epoch: 147, best train: 0.98, best val: 0.692, lr: 0.00116
iteration: 13, epoch: 148, best train: 0.98, best val: 0.692, lr: 0.00096
iteration: 13, epoch: 149, best train: 0.98, best val: 0.692, lr: 0.00078
iteration: 13, epoch: 150, best train: 0.98, best val: 0.692, lr: 0.00062
iteration: 13, epoch: 151, best train: 0.98, best val: 0.692, lr: 0.00047
iteration: 13, epoch: 152, best train: 0.98, best val: 0.692, lr: 0.00035
iteration: 13, epoch: 153, best train: 0.98, best val: 0.692, lr: 0.00024
iteration: 13, epoch: 154, best train: 0.98, best val: 0.692, lr: 0.00015
iteration: 13, epoch: 155, best train: 0.98, best val: 0.692, lr: 9e-05
iteration: 13, epoch: 156, best train: 0.98, best val: 0.692, lr: 4e-05
iteration: 13, epoch: 157, best train: 0.98, best val: 0.692, lr: 1e-05
iteration: 13, epoch: 158, best train: 0.98, best val: 0.692, lr: 0.0
iteration: 13, epoch: 159, best train: 0.98, best val: 0.692, lr: 1e-05
------------------------ Checkpoint 43  ------------------------
pre_conv.0.weight_mask 	|	active =  560 	|	total =  1728 	|	layerwise sparsity =  0.32407407407407407
layer1.0.conv1.weight_mask 	|	active =  1621 	|	total =  36864 	|	layerwise sparsity =  0.04397243923611111
layer1.0.conv2.weight_mask 	|	active =  1621 	|	total =  36864 	|	layerwise sparsity =  0.04397243923611111
layer1.1.conv1.weight_mask 	|	active =  1621 	|	total =  36864 	|	layerwise sparsity =  0.04397243923611111
layer1.1.conv2.weight_mask 	|	active =  1621 	|	total =  36864 	|	layerwise sparsity =  0.04397243923611111
layer2.0.conv1.weight_mask 	|	active =  3243 	|	total =  73728 	|	layerwise sparsity =  0.043986002604166664
layer2.0.conv2.weight_mask 	|	active =  6485 	|	total =  147456 	|	layerwise sparsity =  0.04397922092013889
layer2.0.shortcut.0.weight_mask 	|	active =  2655 	|	total =  8192 	|	layerwise sparsity =  0.3240966796875
layer2.1.conv1.weight_mask 	|	active =  6485 	|	total =  147456 	|	layerwise sparsity =  0.04397922092013889
layer2.1.conv2.weight_mask 	|	active =  6485 	|	total =  147456 	|	layerwise sparsity =  0.04397922092013889
layer3.0.conv1.weight_mask 	|	active =  12970 	|	total =  294912 	|	layerwise sparsity =  0.04397922092013889
layer3.0.conv2.weight_mask 	|	active =  14825 	|	total =  589824 	|	layerwise sparsity =  0.025134616427951388
layer3.0.shortcut.0.weight_mask 	|	active =  1441 	|	total =  32768 	|	layerwise sparsity =  0.043975830078125
layer3.1.conv1.weight_mask 	|	active =  15505 	|	total =  589824 	|	layerwise sparsity =  0.026287502712673612
layer3.1.conv2.weight_mask 	|	active =  16565 	|	total =  589824 	|	layerwise sparsity =  0.028084648980034724
layer4.0.conv1.weight_mask 	|	active =  43322 	|	total =  1179648 	|	layerwise sparsity =  0.03672451443142361
layer4.0.conv2.weight_mask 	|	active =  114392 	|	total =  2359296 	|	layerwise sparsity =  0.048485649956597224
layer4.0.shortcut.0.weight_mask 	|	active =  5765 	|	total =  131072 	|	layerwise sparsity =  0.04398345947265625
layer4.1.conv1.weight_mask 	|	active =  123164 	|	total =  2359296 	|	layerwise sparsity =  0.05220370822482639
layer4.1.conv2.weight_mask 	|	active =  135177 	|	total =  2359296 	|	layerwise sparsity =  0.05729548136393229
------------------------ Checkpoint 44  ------------------------
best_val =  0.6919999999999998
------------------------ Checkpoint 45  ------------------------
pruning state: 14
remaining weight at start of iteration =  4.6196996352437125
iteration: 14, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 14, epoch: 1, best train: 0.354, best val: 0.1, lr: 0.09991
iteration: 14, epoch: 2, best train: 0.354, best val: 0.1, lr: 0.09985
iteration: 14, epoch: 3, best train: 0.446, best val: 0.1274, lr: 0.09976
iteration: 14, epoch: 4, best train: 0.476, best val: 0.1335, lr: 0.09965
iteration: 14, epoch: 5, best train: 0.547, best val: 0.4254, lr: 0.09953
iteration: 14, epoch: 6, best train: 0.587, best val: 0.4254, lr: 0.09938
iteration: 14, epoch: 7, best train: 0.587, best val: 0.5269, lr: 0.09922
iteration: 14, epoch: 8, best train: 0.66, best val: 0.5269, lr: 0.09904
iteration: 14, epoch: 9, best train: 0.66, best val: 0.5279, lr: 0.09884
iteration: 14, epoch: 10, best train: 0.706, best val: 0.5279, lr: 0.09862
iteration: 14, epoch: 11, best train: 0.717, best val: 0.5279, lr: 0.09838
iteration: 14, epoch: 12, best train: 0.72, best val: 0.5641, lr: 0.09812
iteration: 14, epoch: 13, best train: 0.763, best val: 0.5806, lr: 0.09785
iteration: 14, epoch: 14, best train: 0.763, best val: 0.5987, lr: 0.09755
iteration: 14, epoch: 15, best train: 0.763, best val: 0.5987, lr: 0.09724
iteration: 14, epoch: 16, best train: 0.786, best val: 0.6048, lr: 0.09691
iteration: 14, epoch: 17, best train: 0.807, best val: 0.6048, lr: 0.09656
iteration: 14, epoch: 18, best train: 0.817, best val: 0.6048, lr: 0.09619
iteration: 14, epoch: 19, best train: 0.817, best val: 0.6224, lr: 0.09581
iteration: 14, epoch: 20, best train: 0.835, best val: 0.6224, lr: 0.09541
iteration: 14, epoch: 21, best train: 0.835, best val: 0.6224, lr: 0.09499
iteration: 14, epoch: 22, best train: 0.836, best val: 0.6224, lr: 0.09455
iteration: 14, epoch: 23, best train: 0.836, best val: 0.6224, lr: 0.0941
iteration: 14, epoch: 24, best train: 0.847, best val: 0.6224, lr: 0.09362
iteration: 14, epoch: 25, best train: 0.855, best val: 0.6224, lr: 0.09314
iteration: 14, epoch: 26, best train: 0.855, best val: 0.6294, lr: 0.09263
iteration: 14, epoch: 27, best train: 0.855, best val: 0.6387, lr: 0.09211
iteration: 14, epoch: 28, best train: 0.873, best val: 0.6387, lr: 0.09157
iteration: 14, epoch: 29, best train: 0.878, best val: 0.6427, lr: 0.09102
iteration: 14, epoch: 30, best train: 0.881, best val: 0.6508, lr: 0.09045
iteration: 14, epoch: 31, best train: 0.881, best val: 0.6508, lr: 0.08987
iteration: 14, epoch: 32, best train: 0.881, best val: 0.6508, lr: 0.08927
iteration: 14, epoch: 33, best train: 0.881, best val: 0.6508, lr: 0.08865
iteration: 14, epoch: 34, best train: 0.885, best val: 0.6508, lr: 0.08802
iteration: 14, epoch: 35, best train: 0.885, best val: 0.6508, lr: 0.08738
iteration: 14, epoch: 36, best train: 0.885, best val: 0.6508, lr: 0.08672
iteration: 14, epoch: 37, best train: 0.885, best val: 0.6508, lr: 0.08604
iteration: 14, epoch: 38, best train: 0.885, best val: 0.6508, lr: 0.08536
iteration: 14, epoch: 39, best train: 0.902, best val: 0.6508, lr: 0.08465
iteration: 14, epoch: 40, best train: 0.902, best val: 0.6508, lr: 0.08394
iteration: 14, epoch: 41, best train: 0.905, best val: 0.6508, lr: 0.08321
iteration: 14, epoch: 42, best train: 0.917, best val: 0.6508, lr: 0.08247
iteration: 14, epoch: 43, best train: 0.917, best val: 0.6508, lr: 0.08172
iteration: 14, epoch: 44, best train: 0.917, best val: 0.6508, lr: 0.08095
iteration: 14, epoch: 45, best train: 0.917, best val: 0.6508, lr: 0.08018
iteration: 14, epoch: 46, best train: 0.917, best val: 0.6508, lr: 0.07939
iteration: 14, epoch: 47, best train: 0.917, best val: 0.6508, lr: 0.07859
iteration: 14, epoch: 48, best train: 0.917, best val: 0.6508, lr: 0.07778
iteration: 14, epoch: 49, best train: 0.917, best val: 0.6508, lr: 0.07696
iteration: 14, epoch: 50, best train: 0.917, best val: 0.6508, lr: 0.07612
iteration: 14, epoch: 51, best train: 0.917, best val: 0.6508, lr: 0.07528
iteration: 14, epoch: 52, best train: 0.917, best val: 0.6508, lr: 0.07443
iteration: 14, epoch: 53, best train: 0.917, best val: 0.6508, lr: 0.07357
iteration: 14, epoch: 54, best train: 0.919, best val: 0.6508, lr: 0.0727
iteration: 14, epoch: 55, best train: 0.919, best val: 0.6544, lr: 0.07182
iteration: 14, epoch: 56, best train: 0.922, best val: 0.665, lr: 0.07093
iteration: 14, epoch: 57, best train: 0.929, best val: 0.665, lr: 0.07004
iteration: 14, epoch: 58, best train: 0.929, best val: 0.665, lr: 0.06913
iteration: 14, epoch: 59, best train: 0.929, best val: 0.665, lr: 0.06822
iteration: 14, epoch: 60, best train: 0.929, best val: 0.665, lr: 0.06731
iteration: 14, epoch: 61, best train: 0.929, best val: 0.666, lr: 0.06638
iteration: 14, epoch: 62, best train: 0.934, best val: 0.666, lr: 0.06545
iteration: 14, epoch: 63, best train: 0.934, best val: 0.666, lr: 0.06451
iteration: 14, epoch: 64, best train: 0.936, best val: 0.6677, lr: 0.06357
iteration: 14, epoch: 65, best train: 0.945, best val: 0.6806, lr: 0.06262
iteration: 14, epoch: 66, best train: 0.945, best val: 0.6806, lr: 0.06167
iteration: 14, epoch: 67, best train: 0.945, best val: 0.6806, lr: 0.06072
iteration: 14, epoch: 68, best train: 0.945, best val: 0.6806, lr: 0.05975
iteration: 14, epoch: 69, best train: 0.945, best val: 0.6806, lr: 0.05879
iteration: 14, epoch: 70, best train: 0.945, best val: 0.6806, lr: 0.05782
iteration: 14, epoch: 71, best train: 0.945, best val: 0.6806, lr: 0.05685
iteration: 14, epoch: 72, best train: 0.945, best val: 0.6806, lr: 0.05588
iteration: 14, epoch: 73, best train: 0.945, best val: 0.6806, lr: 0.0549
iteration: 14, epoch: 74, best train: 0.945, best val: 0.6806, lr: 0.05392
iteration: 14, epoch: 75, best train: 0.945, best val: 0.6806, lr: 0.05294
iteration: 14, epoch: 76, best train: 0.945, best val: 0.6859, lr: 0.05196
iteration: 14, epoch: 77, best train: 0.945, best val: 0.6859, lr: 0.05098
iteration: 14, epoch: 78, best train: 0.945, best val: 0.6859, lr: 0.05
iteration: 14, epoch: 79, best train: 0.945, best val: 0.6859, lr: 0.04902
iteration: 14, epoch: 80, best train: 0.945, best val: 0.6859, lr: 0.04804
iteration: 14, epoch: 81, best train: 0.945, best val: 0.6859, lr: 0.04706
iteration: 14, epoch: 82, best train: 0.945, best val: 0.6859, lr: 0.04608
iteration: 14, epoch: 83, best train: 0.945, best val: 0.6859, lr: 0.0451
iteration: 14, epoch: 84, best train: 0.945, best val: 0.6938, lr: 0.04412
iteration: 14, epoch: 85, best train: 0.947, best val: 0.6938, lr: 0.04315
iteration: 14, epoch: 86, best train: 0.947, best val: 0.6938, lr: 0.04218
iteration: 14, epoch: 87, best train: 0.947, best val: 0.6938, lr: 0.04121
iteration: 14, epoch: 88, best train: 0.947, best val: 0.6938, lr: 0.04025
iteration: 14, epoch: 89, best train: 0.954, best val: 0.6938, lr: 0.03928
iteration: 14, epoch: 90, best train: 0.954, best val: 0.6938, lr: 0.03833
iteration: 14, epoch: 91, best train: 0.954, best val: 0.6938, lr: 0.03738
iteration: 14, epoch: 92, best train: 0.954, best val: 0.6938, lr: 0.03643
iteration: 14, epoch: 93, best train: 0.954, best val: 0.6938, lr: 0.03549
iteration: 14, epoch: 94, best train: 0.954, best val: 0.6938, lr: 0.03455
iteration: 14, epoch: 95, best train: 0.961, best val: 0.694, lr: 0.03362
iteration: 14, epoch: 96, best train: 0.961, best val: 0.694, lr: 0.03269
iteration: 14, epoch: 97, best train: 0.961, best val: 0.694, lr: 0.03178
iteration: 14, epoch: 98, best train: 0.961, best val: 0.694, lr: 0.03087
iteration: 14, epoch: 99, best train: 0.961, best val: 0.694, lr: 0.02996
iteration: 14, epoch: 100, best train: 0.961, best val: 0.694, lr: 0.02907
iteration: 14, epoch: 101, best train: 0.961, best val: 0.694, lr: 0.02818
iteration: 14, epoch: 102, best train: 0.961, best val: 0.694, lr: 0.0273
iteration: 14, epoch: 103, best train: 0.961, best val: 0.694, lr: 0.02643
iteration: 14, epoch: 104, best train: 0.961, best val: 0.694, lr: 0.02557
iteration: 14, epoch: 105, best train: 0.961, best val: 0.694, lr: 0.02472
iteration: 14, epoch: 106, best train: 0.961, best val: 0.694, lr: 0.02388
iteration: 14, epoch: 107, best train: 0.961, best val: 0.6974, lr: 0.02304
iteration: 14, epoch: 108, best train: 0.961, best val: 0.6984, lr: 0.02222
iteration: 14, epoch: 109, best train: 0.961, best val: 0.6984, lr: 0.02141
iteration: 14, epoch: 110, best train: 0.961, best val: 0.6984, lr: 0.02061
iteration: 14, epoch: 111, best train: 0.961, best val: 0.6984, lr: 0.01982
iteration: 14, epoch: 112, best train: 0.962, best val: 0.6984, lr: 0.01905
iteration: 14, epoch: 113, best train: 0.962, best val: 0.6984, lr: 0.01828
iteration: 14, epoch: 114, best train: 0.962, best val: 0.6984, lr: 0.01753
iteration: 14, epoch: 115, best train: 0.962, best val: 0.6984, lr: 0.01679
iteration: 14, epoch: 116, best train: 0.962, best val: 0.6984, lr: 0.01606
iteration: 14, epoch: 117, best train: 0.962, best val: 0.6984, lr: 0.01535
iteration: 14, epoch: 118, best train: 0.962, best val: 0.6984, lr: 0.01464
iteration: 14, epoch: 119, best train: 0.972, best val: 0.6984, lr: 0.01396
iteration: 14, epoch: 120, best train: 0.972, best val: 0.6984, lr: 0.01328
iteration: 14, epoch: 121, best train: 0.972, best val: 0.6984, lr: 0.01262
iteration: 14, epoch: 122, best train: 0.972, best val: 0.6984, lr: 0.01198
iteration: 14, epoch: 123, best train: 0.972, best val: 0.6984, lr: 0.01135
iteration: 14, epoch: 124, best train: 0.972, best val: 0.6984, lr: 0.01073
iteration: 14, epoch: 125, best train: 0.972, best val: 0.6984, lr: 0.01013
iteration: 14, epoch: 126, best train: 0.972, best val: 0.6984, lr: 0.00955
iteration: 14, epoch: 127, best train: 0.972, best val: 0.6984, lr: 0.00898
iteration: 14, epoch: 128, best train: 0.972, best val: 0.6984, lr: 0.00843
iteration: 14, epoch: 129, best train: 0.972, best val: 0.6984, lr: 0.00789
iteration: 14, epoch: 130, best train: 0.972, best val: 0.6984, lr: 0.00737
iteration: 14, epoch: 131, best train: 0.972, best val: 0.6984, lr: 0.00686
iteration: 14, epoch: 132, best train: 0.972, best val: 0.6984, lr: 0.00638
iteration: 14, epoch: 133, best train: 0.972, best val: 0.6984, lr: 0.0059
iteration: 14, epoch: 134, best train: 0.972, best val: 0.6984, lr: 0.00545
iteration: 14, epoch: 135, best train: 0.972, best val: 0.6984, lr: 0.00501
iteration: 14, epoch: 136, best train: 0.972, best val: 0.6984, lr: 0.00459
iteration: 14, epoch: 137, best train: 0.972, best val: 0.6992, lr: 0.00419
iteration: 14, epoch: 138, best train: 0.972, best val: 0.6992, lr: 0.00381
iteration: 14, epoch: 139, best train: 0.972, best val: 0.6992, lr: 0.00344
iteration: 14, epoch: 140, best train: 0.972, best val: 0.6992, lr: 0.00309
iteration: 14, epoch: 141, best train: 0.972, best val: 0.6992, lr: 0.00276
iteration: 14, epoch: 142, best train: 0.972, best val: 0.6992, lr: 0.00245
iteration: 14, epoch: 143, best train: 0.972, best val: 0.6992, lr: 0.00215
iteration: 14, epoch: 144, best train: 0.972, best val: 0.6992, lr: 0.00188
iteration: 14, epoch: 145, best train: 0.972, best val: 0.6992, lr: 0.00162
iteration: 14, epoch: 146, best train: 0.972, best val: 0.6992, lr: 0.00138
iteration: 14, epoch: 147, best train: 0.972, best val: 0.6992, lr: 0.00116
iteration: 14, epoch: 148, best train: 0.972, best val: 0.6992, lr: 0.00096
iteration: 14, epoch: 149, best train: 0.972, best val: 0.6992, lr: 0.00078
iteration: 14, epoch: 150, best train: 0.972, best val: 0.6992, lr: 0.00062
iteration: 14, epoch: 151, best train: 0.972, best val: 0.6992, lr: 0.00047
iteration: 14, epoch: 152, best train: 0.972, best val: 0.6992, lr: 0.00035
iteration: 14, epoch: 153, best train: 0.972, best val: 0.6992, lr: 0.00024
iteration: 14, epoch: 154, best train: 0.972, best val: 0.6992, lr: 0.00015
iteration: 14, epoch: 155, best train: 0.972, best val: 0.6992, lr: 9e-05
iteration: 14, epoch: 156, best train: 0.972, best val: 0.6992, lr: 4e-05
iteration: 14, epoch: 157, best train: 0.972, best val: 0.6992, lr: 1e-05
iteration: 14, epoch: 158, best train: 0.972, best val: 0.6992, lr: 0.0
iteration: 14, epoch: 159, best train: 0.972, best val: 0.6992, lr: 1e-05
------------------------ Checkpoint 46  ------------------------
pre_conv.0.weight_mask 	|	active =  517 	|	total =  1728 	|	layerwise sparsity =  0.2991898148148148
layer1.0.conv1.weight_mask 	|	active =  1297 	|	total =  36864 	|	layerwise sparsity =  0.03518337673611111
layer1.0.conv2.weight_mask 	|	active =  1297 	|	total =  36864 	|	layerwise sparsity =  0.03518337673611111
layer1.1.conv1.weight_mask 	|	active =  1297 	|	total =  36864 	|	layerwise sparsity =  0.03518337673611111
layer1.1.conv2.weight_mask 	|	active =  1297 	|	total =  36864 	|	layerwise sparsity =  0.03518337673611111
layer2.0.conv1.weight_mask 	|	active =  2594 	|	total =  73728 	|	layerwise sparsity =  0.03518337673611111
layer2.0.conv2.weight_mask 	|	active =  5188 	|	total =  147456 	|	layerwise sparsity =  0.03518337673611111
layer2.0.shortcut.0.weight_mask 	|	active =  2450 	|	total =  8192 	|	layerwise sparsity =  0.299072265625
layer2.1.conv1.weight_mask 	|	active =  5188 	|	total =  147456 	|	layerwise sparsity =  0.03518337673611111
layer2.1.conv2.weight_mask 	|	active =  5188 	|	total =  147456 	|	layerwise sparsity =  0.03518337673611111
layer3.0.conv1.weight_mask 	|	active =  10376 	|	total =  294912 	|	layerwise sparsity =  0.03518337673611111
layer3.0.conv2.weight_mask 	|	active =  11395 	|	total =  589824 	|	layerwise sparsity =  0.019319322374131944
layer3.0.shortcut.0.weight_mask 	|	active =  1153 	|	total =  32768 	|	layerwise sparsity =  0.035186767578125
layer3.1.conv1.weight_mask 	|	active =  11956 	|	total =  589824 	|	layerwise sparsity =  0.020270453559027776
layer3.1.conv2.weight_mask 	|	active =  12834 	|	total =  589824 	|	layerwise sparsity =  0.021759033203125
layer4.0.conv1.weight_mask 	|	active =  34214 	|	total =  1179648 	|	layerwise sparsity =  0.029003567165798612
layer4.0.conv2.weight_mask 	|	active =  92153 	|	total =  2359296 	|	layerwise sparsity =  0.03905953301323785
layer4.0.shortcut.0.weight_mask 	|	active =  4612 	|	total =  131072 	|	layerwise sparsity =  0.035186767578125
layer4.1.conv1.weight_mask 	|	active =  99745 	|	total =  2359296 	|	layerwise sparsity =  0.0422774420844184
layer4.1.conv2.weight_mask 	|	active =  110204 	|	total =  2359296 	|	layerwise sparsity =  0.04671054416232639
------------------------ Checkpoint 47  ------------------------
best_val =  0.6991999999999998
------------------------ Checkpoint 48  ------------------------
pruning state: 15
remaining weight at start of iteration =  3.7184906631567483
iteration: 15, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 15, epoch: 1, best train: 0.341, best val: 0.1, lr: 0.09991
iteration: 15, epoch: 2, best train: 0.341, best val: 0.1, lr: 0.09985
iteration: 15, epoch: 3, best train: 0.341, best val: 0.1001, lr: 0.09976
iteration: 15, epoch: 4, best train: 0.361, best val: 0.1568, lr: 0.09965
iteration: 15, epoch: 5, best train: 0.444, best val: 0.3439, lr: 0.09953
iteration: 15, epoch: 6, best train: 0.478, best val: 0.4453, lr: 0.09938
iteration: 15, epoch: 7, best train: 0.488, best val: 0.5025, lr: 0.09922
iteration: 15, epoch: 8, best train: 0.538, best val: 0.5025, lr: 0.09904
iteration: 15, epoch: 9, best train: 0.594, best val: 0.5182, lr: 0.09884
iteration: 15, epoch: 10, best train: 0.594, best val: 0.5306, lr: 0.09862
iteration: 15, epoch: 11, best train: 0.594, best val: 0.5306, lr: 0.09838
iteration: 15, epoch: 12, best train: 0.63, best val: 0.5306, lr: 0.09812
iteration: 15, epoch: 13, best train: 0.642, best val: 0.5306, lr: 0.09785
iteration: 15, epoch: 14, best train: 0.655, best val: 0.5421, lr: 0.09755
iteration: 15, epoch: 15, best train: 0.655, best val: 0.5421, lr: 0.09724
iteration: 15, epoch: 16, best train: 0.684, best val: 0.5421, lr: 0.09691
iteration: 15, epoch: 17, best train: 0.684, best val: 0.6064, lr: 0.09656
iteration: 15, epoch: 18, best train: 0.721, best val: 0.6064, lr: 0.09619
iteration: 15, epoch: 19, best train: 0.721, best val: 0.6064, lr: 0.09581
iteration: 15, epoch: 20, best train: 0.721, best val: 0.6064, lr: 0.09541
iteration: 15, epoch: 21, best train: 0.724, best val: 0.6064, lr: 0.09499
iteration: 15, epoch: 22, best train: 0.724, best val: 0.6064, lr: 0.09455
iteration: 15, epoch: 23, best train: 0.752, best val: 0.6065, lr: 0.0941
iteration: 15, epoch: 24, best train: 0.766, best val: 0.6165, lr: 0.09362
iteration: 15, epoch: 25, best train: 0.798, best val: 0.6165, lr: 0.09314
iteration: 15, epoch: 26, best train: 0.798, best val: 0.6369, lr: 0.09263
iteration: 15, epoch: 27, best train: 0.798, best val: 0.6369, lr: 0.09211
iteration: 15, epoch: 28, best train: 0.798, best val: 0.6369, lr: 0.09157
iteration: 15, epoch: 29, best train: 0.818, best val: 0.6369, lr: 0.09102
iteration: 15, epoch: 30, best train: 0.818, best val: 0.6369, lr: 0.09045
iteration: 15, epoch: 31, best train: 0.818, best val: 0.6369, lr: 0.08987
iteration: 15, epoch: 32, best train: 0.818, best val: 0.6369, lr: 0.08927
iteration: 15, epoch: 33, best train: 0.843, best val: 0.6499, lr: 0.08865
iteration: 15, epoch: 34, best train: 0.843, best val: 0.6499, lr: 0.08802
iteration: 15, epoch: 35, best train: 0.875, best val: 0.6499, lr: 0.08738
iteration: 15, epoch: 36, best train: 0.875, best val: 0.6499, lr: 0.08672
iteration: 15, epoch: 37, best train: 0.875, best val: 0.6499, lr: 0.08604
iteration: 15, epoch: 38, best train: 0.875, best val: 0.6499, lr: 0.08536
iteration: 15, epoch: 39, best train: 0.875, best val: 0.6499, lr: 0.08465
iteration: 15, epoch: 40, best train: 0.875, best val: 0.6499, lr: 0.08394
iteration: 15, epoch: 41, best train: 0.888, best val: 0.6499, lr: 0.08321
iteration: 15, epoch: 42, best train: 0.888, best val: 0.6499, lr: 0.08247
iteration: 15, epoch: 43, best train: 0.888, best val: 0.6499, lr: 0.08172
iteration: 15, epoch: 44, best train: 0.888, best val: 0.6499, lr: 0.08095
iteration: 15, epoch: 45, best train: 0.888, best val: 0.6499, lr: 0.08018
iteration: 15, epoch: 46, best train: 0.89, best val: 0.6499, lr: 0.07939
iteration: 15, epoch: 47, best train: 0.89, best val: 0.6499, lr: 0.07859
iteration: 15, epoch: 48, best train: 0.89, best val: 0.6499, lr: 0.07778
iteration: 15, epoch: 49, best train: 0.89, best val: 0.6552, lr: 0.07696
iteration: 15, epoch: 50, best train: 0.89, best val: 0.6552, lr: 0.07612
iteration: 15, epoch: 51, best train: 0.898, best val: 0.6552, lr: 0.07528
iteration: 15, epoch: 52, best train: 0.898, best val: 0.6672, lr: 0.07443
iteration: 15, epoch: 53, best train: 0.901, best val: 0.6672, lr: 0.07357
iteration: 15, epoch: 54, best train: 0.901, best val: 0.6672, lr: 0.0727
iteration: 15, epoch: 55, best train: 0.908, best val: 0.6672, lr: 0.07182
iteration: 15, epoch: 56, best train: 0.911, best val: 0.6672, lr: 0.07093
iteration: 15, epoch: 57, best train: 0.911, best val: 0.6672, lr: 0.07004
iteration: 15, epoch: 58, best train: 0.911, best val: 0.6672, lr: 0.06913
iteration: 15, epoch: 59, best train: 0.911, best val: 0.6672, lr: 0.06822
iteration: 15, epoch: 60, best train: 0.911, best val: 0.6672, lr: 0.06731
iteration: 15, epoch: 61, best train: 0.911, best val: 0.6672, lr: 0.06638
iteration: 15, epoch: 62, best train: 0.911, best val: 0.6672, lr: 0.06545
iteration: 15, epoch: 63, best train: 0.911, best val: 0.6672, lr: 0.06451
iteration: 15, epoch: 64, best train: 0.911, best val: 0.6672, lr: 0.06357
iteration: 15, epoch: 65, best train: 0.911, best val: 0.6672, lr: 0.06262
iteration: 15, epoch: 66, best train: 0.911, best val: 0.6672, lr: 0.06167
iteration: 15, epoch: 67, best train: 0.911, best val: 0.6672, lr: 0.06072
iteration: 15, epoch: 68, best train: 0.911, best val: 0.6672, lr: 0.05975
iteration: 15, epoch: 69, best train: 0.911, best val: 0.67, lr: 0.05879
iteration: 15, epoch: 70, best train: 0.928, best val: 0.67, lr: 0.05782
iteration: 15, epoch: 71, best train: 0.928, best val: 0.67, lr: 0.05685
iteration: 15, epoch: 72, best train: 0.928, best val: 0.6743, lr: 0.05588
iteration: 15, epoch: 73, best train: 0.93, best val: 0.6743, lr: 0.0549
iteration: 15, epoch: 74, best train: 0.93, best val: 0.6743, lr: 0.05392
iteration: 15, epoch: 75, best train: 0.93, best val: 0.6743, lr: 0.05294
iteration: 15, epoch: 76, best train: 0.93, best val: 0.6743, lr: 0.05196
iteration: 15, epoch: 77, best train: 0.93, best val: 0.6743, lr: 0.05098
iteration: 15, epoch: 78, best train: 0.93, best val: 0.6743, lr: 0.05
iteration: 15, epoch: 79, best train: 0.93, best val: 0.6743, lr: 0.04902
iteration: 15, epoch: 80, best train: 0.935, best val: 0.6765, lr: 0.04804
iteration: 15, epoch: 81, best train: 0.935, best val: 0.6765, lr: 0.04706
iteration: 15, epoch: 82, best train: 0.935, best val: 0.6842, lr: 0.04608
iteration: 15, epoch: 83, best train: 0.935, best val: 0.6842, lr: 0.0451
iteration: 15, epoch: 84, best train: 0.935, best val: 0.6842, lr: 0.04412
iteration: 15, epoch: 85, best train: 0.936, best val: 0.6842, lr: 0.04315
iteration: 15, epoch: 86, best train: 0.936, best val: 0.6842, lr: 0.04218
iteration: 15, epoch: 87, best train: 0.936, best val: 0.6842, lr: 0.04121
iteration: 15, epoch: 88, best train: 0.948, best val: 0.6842, lr: 0.04025
iteration: 15, epoch: 89, best train: 0.948, best val: 0.6842, lr: 0.03928
iteration: 15, epoch: 90, best train: 0.948, best val: 0.6842, lr: 0.03833
iteration: 15, epoch: 91, best train: 0.948, best val: 0.6842, lr: 0.03738
iteration: 15, epoch: 92, best train: 0.948, best val: 0.6843, lr: 0.03643
iteration: 15, epoch: 93, best train: 0.948, best val: 0.6843, lr: 0.03549
iteration: 15, epoch: 94, best train: 0.948, best val: 0.6843, lr: 0.03455
iteration: 15, epoch: 95, best train: 0.948, best val: 0.6844, lr: 0.03362
iteration: 15, epoch: 96, best train: 0.948, best val: 0.6855, lr: 0.03269
iteration: 15, epoch: 97, best train: 0.948, best val: 0.6855, lr: 0.03178
iteration: 15, epoch: 98, best train: 0.948, best val: 0.6855, lr: 0.03087
iteration: 15, epoch: 99, best train: 0.948, best val: 0.6917, lr: 0.02996
iteration: 15, epoch: 100, best train: 0.957, best val: 0.6917, lr: 0.02907
iteration: 15, epoch: 101, best train: 0.957, best val: 0.6917, lr: 0.02818
iteration: 15, epoch: 102, best train: 0.957, best val: 0.6982, lr: 0.0273
iteration: 15, epoch: 103, best train: 0.957, best val: 0.6982, lr: 0.02643
iteration: 15, epoch: 104, best train: 0.957, best val: 0.6982, lr: 0.02557
iteration: 15, epoch: 105, best train: 0.957, best val: 0.6982, lr: 0.02472
iteration: 15, epoch: 106, best train: 0.957, best val: 0.6982, lr: 0.02388
iteration: 15, epoch: 107, best train: 0.957, best val: 0.6982, lr: 0.02304
iteration: 15, epoch: 108, best train: 0.957, best val: 0.6982, lr: 0.02222
iteration: 15, epoch: 109, best train: 0.957, best val: 0.6982, lr: 0.02141
iteration: 15, epoch: 110, best train: 0.957, best val: 0.6982, lr: 0.02061
iteration: 15, epoch: 111, best train: 0.957, best val: 0.6982, lr: 0.01982
iteration: 15, epoch: 112, best train: 0.957, best val: 0.6982, lr: 0.01905
iteration: 15, epoch: 113, best train: 0.957, best val: 0.6982, lr: 0.01828
iteration: 15, epoch: 114, best train: 0.957, best val: 0.6982, lr: 0.01753
iteration: 15, epoch: 115, best train: 0.957, best val: 0.6982, lr: 0.01679
iteration: 15, epoch: 116, best train: 0.957, best val: 0.6982, lr: 0.01606
iteration: 15, epoch: 117, best train: 0.957, best val: 0.6982, lr: 0.01535
iteration: 15, epoch: 118, best train: 0.957, best val: 0.6982, lr: 0.01464
iteration: 15, epoch: 119, best train: 0.957, best val: 0.6982, lr: 0.01396
iteration: 15, epoch: 120, best train: 0.963, best val: 0.6982, lr: 0.01328
iteration: 15, epoch: 121, best train: 0.963, best val: 0.6982, lr: 0.01262
iteration: 15, epoch: 122, best train: 0.963, best val: 0.6982, lr: 0.01198
iteration: 15, epoch: 123, best train: 0.963, best val: 0.6982, lr: 0.01135
iteration: 15, epoch: 124, best train: 0.963, best val: 0.6982, lr: 0.01073
iteration: 15, epoch: 125, best train: 0.964, best val: 0.6982, lr: 0.01013
iteration: 15, epoch: 126, best train: 0.964, best val: 0.6982, lr: 0.00955
iteration: 15, epoch: 127, best train: 0.964, best val: 0.6982, lr: 0.00898
iteration: 15, epoch: 128, best train: 0.964, best val: 0.6982, lr: 0.00843
iteration: 15, epoch: 129, best train: 0.964, best val: 0.6982, lr: 0.00789
iteration: 15, epoch: 130, best train: 0.964, best val: 0.6982, lr: 0.00737
iteration: 15, epoch: 131, best train: 0.964, best val: 0.699, lr: 0.00686
iteration: 15, epoch: 132, best train: 0.964, best val: 0.699, lr: 0.00638
iteration: 15, epoch: 133, best train: 0.964, best val: 0.699, lr: 0.0059
iteration: 15, epoch: 134, best train: 0.964, best val: 0.699, lr: 0.00545
iteration: 15, epoch: 135, best train: 0.964, best val: 0.6994, lr: 0.00501
iteration: 15, epoch: 136, best train: 0.964, best val: 0.7006, lr: 0.00459
iteration: 15, epoch: 137, best train: 0.964, best val: 0.7006, lr: 0.00419
iteration: 15, epoch: 138, best train: 0.964, best val: 0.7007, lr: 0.00381
iteration: 15, epoch: 139, best train: 0.964, best val: 0.7007, lr: 0.00344
iteration: 15, epoch: 140, best train: 0.964, best val: 0.7007, lr: 0.00309
iteration: 15, epoch: 141, best train: 0.964, best val: 0.7007, lr: 0.00276
iteration: 15, epoch: 142, best train: 0.964, best val: 0.7015, lr: 0.00245
iteration: 15, epoch: 143, best train: 0.964, best val: 0.7015, lr: 0.00215
iteration: 15, epoch: 144, best train: 0.964, best val: 0.7015, lr: 0.00188
iteration: 15, epoch: 145, best train: 0.964, best val: 0.7015, lr: 0.00162
iteration: 15, epoch: 146, best train: 0.964, best val: 0.7015, lr: 0.00138
iteration: 15, epoch: 147, best train: 0.967, best val: 0.7019, lr: 0.00116
iteration: 15, epoch: 148, best train: 0.967, best val: 0.7019, lr: 0.00096
iteration: 15, epoch: 149, best train: 0.967, best val: 0.7019, lr: 0.00078
iteration: 15, epoch: 150, best train: 0.967, best val: 0.7019, lr: 0.00062
iteration: 15, epoch: 151, best train: 0.967, best val: 0.7019, lr: 0.00047
iteration: 15, epoch: 152, best train: 0.967, best val: 0.7019, lr: 0.00035
iteration: 15, epoch: 153, best train: 0.967, best val: 0.7019, lr: 0.00024
iteration: 15, epoch: 154, best train: 0.967, best val: 0.7019, lr: 0.00015
iteration: 15, epoch: 155, best train: 0.967, best val: 0.7019, lr: 9e-05
iteration: 15, epoch: 156, best train: 0.967, best val: 0.7019, lr: 4e-05
iteration: 15, epoch: 157, best train: 0.967, best val: 0.7023, lr: 1e-05
iteration: 15, epoch: 158, best train: 0.968, best val: 0.7023, lr: 0.0
iteration: 15, epoch: 159, best train: 0.968, best val: 0.7023, lr: 1e-05
------------------------ Checkpoint 49  ------------------------
pre_conv.0.weight_mask 	|	active =  477 	|	total =  1728 	|	layerwise sparsity =  0.2760416666666667
layer1.0.conv1.weight_mask 	|	active =  1038 	|	total =  36864 	|	layerwise sparsity =  0.028157552083333332
layer1.0.conv2.weight_mask 	|	active =  1038 	|	total =  36864 	|	layerwise sparsity =  0.028157552083333332
layer1.1.conv1.weight_mask 	|	active =  1038 	|	total =  36864 	|	layerwise sparsity =  0.028157552083333332
layer1.1.conv2.weight_mask 	|	active =  1038 	|	total =  36864 	|	layerwise sparsity =  0.028157552083333332
layer2.0.conv1.weight_mask 	|	active =  2075 	|	total =  73728 	|	layerwise sparsity =  0.028143988715277776
layer2.0.conv2.weight_mask 	|	active =  4150 	|	total =  147456 	|	layerwise sparsity =  0.028143988715277776
layer2.0.shortcut.0.weight_mask 	|	active =  2261 	|	total =  8192 	|	layerwise sparsity =  0.2760009765625
layer2.1.conv1.weight_mask 	|	active =  4150 	|	total =  147456 	|	layerwise sparsity =  0.028143988715277776
layer2.1.conv2.weight_mask 	|	active =  4150 	|	total =  147456 	|	layerwise sparsity =  0.028143988715277776
layer3.0.conv1.weight_mask 	|	active =  8301 	|	total =  294912 	|	layerwise sparsity =  0.028147379557291668
layer3.0.conv2.weight_mask 	|	active =  8759 	|	total =  589824 	|	layerwise sparsity =  0.014850192599826388
layer3.0.shortcut.0.weight_mask 	|	active =  922 	|	total =  32768 	|	layerwise sparsity =  0.02813720703125
layer3.1.conv1.weight_mask 	|	active =  9220 	|	total =  589824 	|	layerwise sparsity =  0.015631781684027776
layer3.1.conv2.weight_mask 	|	active =  9943 	|	total =  589824 	|	layerwise sparsity =  0.016857571072048612
layer4.0.conv1.weight_mask 	|	active =  27021 	|	total =  1179648 	|	layerwise sparsity =  0.022905985514322918
layer4.0.conv2.weight_mask 	|	active =  74238 	|	total =  2359296 	|	layerwise sparsity =  0.031466166178385414
layer4.0.shortcut.0.weight_mask 	|	active =  3690 	|	total =  131072 	|	layerwise sparsity =  0.0281524658203125
layer4.1.conv1.weight_mask 	|	active =  80779 	|	total =  2359296 	|	layerwise sparsity =  0.03423860337999132
layer4.1.conv2.weight_mask 	|	active =  89845 	|	total =  2359296 	|	layerwise sparsity =  0.0380812750922309
------------------------ Checkpoint 50  ------------------------
best_val =  0.7023
------------------------ Checkpoint 51  ------------------------
pruning state: 16
remaining weight at start of iteration =  2.994229351984079
iteration: 16, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 16, epoch: 1, best train: 0.244, best val: 0.1, lr: 0.09991
iteration: 16, epoch: 2, best train: 0.244, best val: 0.1, lr: 0.09985
iteration: 16, epoch: 3, best train: 0.274, best val: 0.1, lr: 0.09976
iteration: 16, epoch: 4, best train: 0.337, best val: 0.134, lr: 0.09965
iteration: 16, epoch: 5, best train: 0.361, best val: 0.2534, lr: 0.09953
iteration: 16, epoch: 6, best train: 0.384, best val: 0.3649, lr: 0.09938
iteration: 16, epoch: 7, best train: 0.411, best val: 0.4417, lr: 0.09922
iteration: 16, epoch: 8, best train: 0.413, best val: 0.4528, lr: 0.09904
iteration: 16, epoch: 9, best train: 0.415, best val: 0.4719, lr: 0.09884
iteration: 16, epoch: 10, best train: 0.483, best val: 0.4719, lr: 0.09862
iteration: 16, epoch: 11, best train: 0.503, best val: 0.493, lr: 0.09838
iteration: 16, epoch: 12, best train: 0.509, best val: 0.5092, lr: 0.09812
iteration: 16, epoch: 13, best train: 0.565, best val: 0.5154, lr: 0.09785
iteration: 16, epoch: 14, best train: 0.565, best val: 0.5154, lr: 0.09755
iteration: 16, epoch: 15, best train: 0.571, best val: 0.5154, lr: 0.09724
iteration: 16, epoch: 16, best train: 0.585, best val: 0.5439, lr: 0.09691
iteration: 16, epoch: 17, best train: 0.595, best val: 0.5439, lr: 0.09656
iteration: 16, epoch: 18, best train: 0.614, best val: 0.5439, lr: 0.09619
iteration: 16, epoch: 19, best train: 0.621, best val: 0.5439, lr: 0.09581
iteration: 16, epoch: 20, best train: 0.621, best val: 0.5843, lr: 0.09541
iteration: 16, epoch: 21, best train: 0.67, best val: 0.5843, lr: 0.09499
iteration: 16, epoch: 22, best train: 0.683, best val: 0.5843, lr: 0.09455
iteration: 16, epoch: 23, best train: 0.683, best val: 0.5843, lr: 0.0941
iteration: 16, epoch: 24, best train: 0.689, best val: 0.5843, lr: 0.09362
iteration: 16, epoch: 25, best train: 0.689, best val: 0.5843, lr: 0.09314
iteration: 16, epoch: 26, best train: 0.726, best val: 0.6142, lr: 0.09263
iteration: 16, epoch: 27, best train: 0.726, best val: 0.6142, lr: 0.09211
iteration: 16, epoch: 28, best train: 0.738, best val: 0.6142, lr: 0.09157
iteration: 16, epoch: 29, best train: 0.745, best val: 0.6142, lr: 0.09102
iteration: 16, epoch: 30, best train: 0.745, best val: 0.6142, lr: 0.09045
iteration: 16, epoch: 31, best train: 0.756, best val: 0.6142, lr: 0.08987
iteration: 16, epoch: 32, best train: 0.757, best val: 0.6348, lr: 0.08927
iteration: 16, epoch: 33, best train: 0.769, best val: 0.6348, lr: 0.08865
iteration: 16, epoch: 34, best train: 0.779, best val: 0.6348, lr: 0.08802
iteration: 16, epoch: 35, best train: 0.797, best val: 0.6348, lr: 0.08738
iteration: 16, epoch: 36, best train: 0.797, best val: 0.6348, lr: 0.08672
iteration: 16, epoch: 37, best train: 0.808, best val: 0.6348, lr: 0.08604
iteration: 16, epoch: 38, best train: 0.808, best val: 0.6348, lr: 0.08536
iteration: 16, epoch: 39, best train: 0.808, best val: 0.6348, lr: 0.08465
iteration: 16, epoch: 40, best train: 0.808, best val: 0.6348, lr: 0.08394
iteration: 16, epoch: 41, best train: 0.814, best val: 0.6381, lr: 0.08321
iteration: 16, epoch: 42, best train: 0.815, best val: 0.6381, lr: 0.08247
iteration: 16, epoch: 43, best train: 0.815, best val: 0.6381, lr: 0.08172
iteration: 16, epoch: 44, best train: 0.815, best val: 0.6381, lr: 0.08095
iteration: 16, epoch: 45, best train: 0.831, best val: 0.6381, lr: 0.08018
iteration: 16, epoch: 46, best train: 0.84, best val: 0.6381, lr: 0.07939
iteration: 16, epoch: 47, best train: 0.859, best val: 0.6406, lr: 0.07859
iteration: 16, epoch: 48, best train: 0.865, best val: 0.6406, lr: 0.07778
iteration: 16, epoch: 49, best train: 0.868, best val: 0.6406, lr: 0.07696
iteration: 16, epoch: 50, best train: 0.868, best val: 0.6406, lr: 0.07612
iteration: 16, epoch: 51, best train: 0.868, best val: 0.6421, lr: 0.07528
iteration: 16, epoch: 52, best train: 0.868, best val: 0.6421, lr: 0.07443
iteration: 16, epoch: 53, best train: 0.868, best val: 0.6421, lr: 0.07357
iteration: 16, epoch: 54, best train: 0.868, best val: 0.6421, lr: 0.0727
iteration: 16, epoch: 55, best train: 0.868, best val: 0.6421, lr: 0.07182
iteration: 16, epoch: 56, best train: 0.878, best val: 0.6421, lr: 0.07093
iteration: 16, epoch: 57, best train: 0.878, best val: 0.643, lr: 0.07004
iteration: 16, epoch: 58, best train: 0.88, best val: 0.6469, lr: 0.06913
iteration: 16, epoch: 59, best train: 0.882, best val: 0.6618, lr: 0.06822
iteration: 16, epoch: 60, best train: 0.882, best val: 0.6722, lr: 0.06731
iteration: 16, epoch: 61, best train: 0.882, best val: 0.6722, lr: 0.06638
iteration: 16, epoch: 62, best train: 0.882, best val: 0.6722, lr: 0.06545
iteration: 16, epoch: 63, best train: 0.882, best val: 0.6722, lr: 0.06451
iteration: 16, epoch: 64, best train: 0.889, best val: 0.6722, lr: 0.06357
iteration: 16, epoch: 65, best train: 0.889, best val: 0.6722, lr: 0.06262
iteration: 16, epoch: 66, best train: 0.892, best val: 0.6722, lr: 0.06167
iteration: 16, epoch: 67, best train: 0.894, best val: 0.6722, lr: 0.06072
iteration: 16, epoch: 68, best train: 0.918, best val: 0.6722, lr: 0.05975
iteration: 16, epoch: 69, best train: 0.918, best val: 0.6722, lr: 0.05879
iteration: 16, epoch: 70, best train: 0.918, best val: 0.6722, lr: 0.05782
iteration: 16, epoch: 71, best train: 0.918, best val: 0.6722, lr: 0.05685
iteration: 16, epoch: 72, best train: 0.918, best val: 0.6722, lr: 0.05588
iteration: 16, epoch: 73, best train: 0.918, best val: 0.6722, lr: 0.0549
iteration: 16, epoch: 74, best train: 0.918, best val: 0.6722, lr: 0.05392
iteration: 16, epoch: 75, best train: 0.918, best val: 0.6722, lr: 0.05294
iteration: 16, epoch: 76, best train: 0.923, best val: 0.6722, lr: 0.05196
iteration: 16, epoch: 77, best train: 0.923, best val: 0.6736, lr: 0.05098
iteration: 16, epoch: 78, best train: 0.923, best val: 0.6736, lr: 0.05
iteration: 16, epoch: 79, best train: 0.923, best val: 0.6758, lr: 0.04902
iteration: 16, epoch: 80, best train: 0.923, best val: 0.6758, lr: 0.04804
iteration: 16, epoch: 81, best train: 0.923, best val: 0.6758, lr: 0.04706
iteration: 16, epoch: 82, best train: 0.923, best val: 0.6793, lr: 0.04608
iteration: 16, epoch: 83, best train: 0.923, best val: 0.6808, lr: 0.0451
iteration: 16, epoch: 84, best train: 0.923, best val: 0.6833, lr: 0.04412
iteration: 16, epoch: 85, best train: 0.923, best val: 0.687, lr: 0.04315
iteration: 16, epoch: 86, best train: 0.923, best val: 0.687, lr: 0.04218
iteration: 16, epoch: 87, best train: 0.937, best val: 0.6917, lr: 0.04121
iteration: 16, epoch: 88, best train: 0.937, best val: 0.692, lr: 0.04025
iteration: 16, epoch: 89, best train: 0.937, best val: 0.692, lr: 0.03928
iteration: 16, epoch: 90, best train: 0.937, best val: 0.692, lr: 0.03833
iteration: 16, epoch: 91, best train: 0.937, best val: 0.6967, lr: 0.03738
iteration: 16, epoch: 92, best train: 0.937, best val: 0.6967, lr: 0.03643
iteration: 16, epoch: 93, best train: 0.937, best val: 0.6967, lr: 0.03549
iteration: 16, epoch: 94, best train: 0.937, best val: 0.6967, lr: 0.03455
iteration: 16, epoch: 95, best train: 0.937, best val: 0.6967, lr: 0.03362
iteration: 16, epoch: 96, best train: 0.937, best val: 0.6967, lr: 0.03269
iteration: 16, epoch: 97, best train: 0.937, best val: 0.6967, lr: 0.03178
iteration: 16, epoch: 98, best train: 0.942, best val: 0.6967, lr: 0.03087
iteration: 16, epoch: 99, best train: 0.942, best val: 0.6967, lr: 0.02996
iteration: 16, epoch: 100, best train: 0.942, best val: 0.6967, lr: 0.02907
iteration: 16, epoch: 101, best train: 0.942, best val: 0.6967, lr: 0.02818
iteration: 16, epoch: 102, best train: 0.942, best val: 0.6967, lr: 0.0273
iteration: 16, epoch: 103, best train: 0.946, best val: 0.6967, lr: 0.02643
iteration: 16, epoch: 104, best train: 0.946, best val: 0.6967, lr: 0.02557
iteration: 16, epoch: 105, best train: 0.946, best val: 0.6967, lr: 0.02472
iteration: 16, epoch: 106, best train: 0.946, best val: 0.6967, lr: 0.02388
iteration: 16, epoch: 107, best train: 0.946, best val: 0.6967, lr: 0.02304
iteration: 16, epoch: 108, best train: 0.946, best val: 0.6967, lr: 0.02222
iteration: 16, epoch: 109, best train: 0.946, best val: 0.6967, lr: 0.02141
iteration: 16, epoch: 110, best train: 0.946, best val: 0.6967, lr: 0.02061
iteration: 16, epoch: 111, best train: 0.946, best val: 0.6967, lr: 0.01982
iteration: 16, epoch: 112, best train: 0.946, best val: 0.6967, lr: 0.01905
iteration: 16, epoch: 113, best train: 0.946, best val: 0.6967, lr: 0.01828
iteration: 16, epoch: 114, best train: 0.946, best val: 0.6967, lr: 0.01753
iteration: 16, epoch: 115, best train: 0.946, best val: 0.6967, lr: 0.01679
iteration: 16, epoch: 116, best train: 0.946, best val: 0.701, lr: 0.01606
iteration: 16, epoch: 117, best train: 0.946, best val: 0.701, lr: 0.01535
iteration: 16, epoch: 118, best train: 0.946, best val: 0.701, lr: 0.01464
iteration: 16, epoch: 119, best train: 0.946, best val: 0.701, lr: 0.01396
iteration: 16, epoch: 120, best train: 0.951, best val: 0.701, lr: 0.01328
iteration: 16, epoch: 121, best train: 0.951, best val: 0.701, lr: 0.01262
iteration: 16, epoch: 122, best train: 0.951, best val: 0.702, lr: 0.01198
iteration: 16, epoch: 123, best train: 0.951, best val: 0.702, lr: 0.01135
iteration: 16, epoch: 124, best train: 0.951, best val: 0.702, lr: 0.01073
iteration: 16, epoch: 125, best train: 0.951, best val: 0.702, lr: 0.01013
iteration: 16, epoch: 126, best train: 0.951, best val: 0.702, lr: 0.00955
iteration: 16, epoch: 127, best train: 0.958, best val: 0.702, lr: 0.00898
iteration: 16, epoch: 128, best train: 0.958, best val: 0.702, lr: 0.00843
iteration: 16, epoch: 129, best train: 0.958, best val: 0.7036, lr: 0.00789
iteration: 16, epoch: 130, best train: 0.958, best val: 0.7036, lr: 0.00737
iteration: 16, epoch: 131, best train: 0.958, best val: 0.7036, lr: 0.00686
iteration: 16, epoch: 132, best train: 0.958, best val: 0.7036, lr: 0.00638
iteration: 16, epoch: 133, best train: 0.958, best val: 0.7036, lr: 0.0059
iteration: 16, epoch: 134, best train: 0.958, best val: 0.7036, lr: 0.00545
iteration: 16, epoch: 135, best train: 0.958, best val: 0.7042, lr: 0.00501
iteration: 16, epoch: 136, best train: 0.958, best val: 0.7042, lr: 0.00459
iteration: 16, epoch: 137, best train: 0.958, best val: 0.7042, lr: 0.00419
iteration: 16, epoch: 138, best train: 0.958, best val: 0.7042, lr: 0.00381
iteration: 16, epoch: 139, best train: 0.958, best val: 0.7042, lr: 0.00344
iteration: 16, epoch: 140, best train: 0.958, best val: 0.7048, lr: 0.00309
iteration: 16, epoch: 141, best train: 0.958, best val: 0.705, lr: 0.00276
iteration: 16, epoch: 142, best train: 0.958, best val: 0.705, lr: 0.00245
iteration: 16, epoch: 143, best train: 0.958, best val: 0.705, lr: 0.00215
iteration: 16, epoch: 144, best train: 0.958, best val: 0.705, lr: 0.00188
iteration: 16, epoch: 145, best train: 0.958, best val: 0.705, lr: 0.00162
iteration: 16, epoch: 146, best train: 0.958, best val: 0.705, lr: 0.00138
iteration: 16, epoch: 147, best train: 0.958, best val: 0.705, lr: 0.00116
iteration: 16, epoch: 148, best train: 0.958, best val: 0.7056, lr: 0.00096
iteration: 16, epoch: 149, best train: 0.958, best val: 0.7056, lr: 0.00078
iteration: 16, epoch: 150, best train: 0.958, best val: 0.7056, lr: 0.00062
iteration: 16, epoch: 151, best train: 0.958, best val: 0.7056, lr: 0.00047
iteration: 16, epoch: 152, best train: 0.958, best val: 0.7056, lr: 0.00035
iteration: 16, epoch: 153, best train: 0.958, best val: 0.7056, lr: 0.00024
iteration: 16, epoch: 154, best train: 0.96, best val: 0.7056, lr: 0.00015
iteration: 16, epoch: 155, best train: 0.96, best val: 0.7056, lr: 9e-05
iteration: 16, epoch: 156, best train: 0.96, best val: 0.7056, lr: 4e-05
iteration: 16, epoch: 157, best train: 0.96, best val: 0.7056, lr: 1e-05
iteration: 16, epoch: 158, best train: 0.96, best val: 0.7056, lr: 0.0
iteration: 16, epoch: 159, best train: 0.96, best val: 0.7056, lr: 1e-05
------------------------ Checkpoint 52  ------------------------
pre_conv.0.weight_mask 	|	active =  440 	|	total =  1728 	|	layerwise sparsity =  0.25462962962962965
layer1.0.conv1.weight_mask 	|	active =  830 	|	total =  36864 	|	layerwise sparsity =  0.022515190972222224
layer1.0.conv2.weight_mask 	|	active =  830 	|	total =  36864 	|	layerwise sparsity =  0.022515190972222224
layer1.1.conv1.weight_mask 	|	active =  830 	|	total =  36864 	|	layerwise sparsity =  0.022515190972222224
layer1.1.conv2.weight_mask 	|	active =  830 	|	total =  36864 	|	layerwise sparsity =  0.022515190972222224
layer2.0.conv1.weight_mask 	|	active =  1660 	|	total =  73728 	|	layerwise sparsity =  0.022515190972222224
layer2.0.conv2.weight_mask 	|	active =  3320 	|	total =  147456 	|	layerwise sparsity =  0.022515190972222224
layer2.0.shortcut.0.weight_mask 	|	active =  2086 	|	total =  8192 	|	layerwise sparsity =  0.254638671875
layer2.1.conv1.weight_mask 	|	active =  3320 	|	total =  147456 	|	layerwise sparsity =  0.022515190972222224
layer2.1.conv2.weight_mask 	|	active =  3320 	|	total =  147456 	|	layerwise sparsity =  0.022515190972222224
layer3.0.conv1.weight_mask 	|	active =  6641 	|	total =  294912 	|	layerwise sparsity =  0.022518581814236112
layer3.0.conv2.weight_mask 	|	active =  6733 	|	total =  589824 	|	layerwise sparsity =  0.011415269639756944
layer3.0.shortcut.0.weight_mask 	|	active =  738 	|	total =  32768 	|	layerwise sparsity =  0.02252197265625
layer3.1.conv1.weight_mask 	|	active =  7110 	|	total =  589824 	|	layerwise sparsity =  0.012054443359375
layer3.1.conv2.weight_mask 	|	active =  7704 	|	total =  589824 	|	layerwise sparsity =  0.0130615234375
layer4.0.conv1.weight_mask 	|	active =  21340 	|	total =  1179648 	|	layerwise sparsity =  0.018090142144097224
layer4.0.conv2.weight_mask 	|	active =  59806 	|	total =  2359296 	|	layerwise sparsity =  0.025349087185329862
layer4.0.shortcut.0.weight_mask 	|	active =  2952 	|	total =  131072 	|	layerwise sparsity =  0.02252197265625
layer4.1.conv1.weight_mask 	|	active =  65419 	|	total =  2359296 	|	layerwise sparsity =  0.02772818671332465
layer4.1.conv2.weight_mask 	|	active =  73247 	|	total =  2359296 	|	layerwise sparsity =  0.03104612562391493
------------------------ Checkpoint 53  ------------------------
best_val =  0.7055999999999999
------------------------ Checkpoint 54  ------------------------
pruning state: 17
remaining weight at start of iteration =  2.4119580989085954
iteration: 17, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 17, epoch: 1, best train: 0.227, best val: 0.1, lr: 0.09991
iteration: 17, epoch: 2, best train: 0.229, best val: 0.1, lr: 0.09985
iteration: 17, epoch: 3, best train: 0.242, best val: 0.1538, lr: 0.09976
iteration: 17, epoch: 4, best train: 0.289, best val: 0.216, lr: 0.09965
iteration: 17, epoch: 5, best train: 0.309, best val: 0.2791, lr: 0.09953
iteration: 17, epoch: 6, best train: 0.322, best val: 0.3565, lr: 0.09938
iteration: 17, epoch: 7, best train: 0.342, best val: 0.3858, lr: 0.09922
iteration: 17, epoch: 8, best train: 0.374, best val: 0.3866, lr: 0.09904
iteration: 17, epoch: 9, best train: 0.387, best val: 0.4022, lr: 0.09884
iteration: 17, epoch: 10, best train: 0.408, best val: 0.4022, lr: 0.09862
iteration: 17, epoch: 11, best train: 0.443, best val: 0.4027, lr: 0.09838
iteration: 17, epoch: 12, best train: 0.443, best val: 0.4323, lr: 0.09812
iteration: 17, epoch: 13, best train: 0.443, best val: 0.4323, lr: 0.09785
iteration: 17, epoch: 14, best train: 0.443, best val: 0.4611, lr: 0.09755
iteration: 17, epoch: 15, best train: 0.487, best val: 0.4983, lr: 0.09724
iteration: 17, epoch: 16, best train: 0.513, best val: 0.5197, lr: 0.09691
iteration: 17, epoch: 17, best train: 0.516, best val: 0.5197, lr: 0.09656
iteration: 17, epoch: 18, best train: 0.54, best val: 0.5197, lr: 0.09619
iteration: 17, epoch: 19, best train: 0.54, best val: 0.5197, lr: 0.09581
iteration: 17, epoch: 20, best train: 0.546, best val: 0.5197, lr: 0.09541
iteration: 17, epoch: 21, best train: 0.546, best val: 0.5197, lr: 0.09499
iteration: 17, epoch: 22, best train: 0.581, best val: 0.5197, lr: 0.09455
iteration: 17, epoch: 23, best train: 0.581, best val: 0.5668, lr: 0.0941
iteration: 17, epoch: 24, best train: 0.581, best val: 0.5668, lr: 0.09362
iteration: 17, epoch: 25, best train: 0.581, best val: 0.5668, lr: 0.09314
iteration: 17, epoch: 26, best train: 0.599, best val: 0.5668, lr: 0.09263
iteration: 17, epoch: 27, best train: 0.609, best val: 0.5668, lr: 0.09211
iteration: 17, epoch: 28, best train: 0.635, best val: 0.5692, lr: 0.09157
iteration: 17, epoch: 29, best train: 0.67, best val: 0.5692, lr: 0.09102
iteration: 17, epoch: 30, best train: 0.67, best val: 0.5692, lr: 0.09045
iteration: 17, epoch: 31, best train: 0.67, best val: 0.5692, lr: 0.08987
iteration: 17, epoch: 32, best train: 0.67, best val: 0.5692, lr: 0.08927
iteration: 17, epoch: 33, best train: 0.674, best val: 0.5692, lr: 0.08865
iteration: 17, epoch: 34, best train: 0.674, best val: 0.5982, lr: 0.08802
iteration: 17, epoch: 35, best train: 0.695, best val: 0.5982, lr: 0.08738
iteration: 17, epoch: 36, best train: 0.695, best val: 0.5982, lr: 0.08672
iteration: 17, epoch: 37, best train: 0.695, best val: 0.5982, lr: 0.08604
iteration: 17, epoch: 38, best train: 0.695, best val: 0.5982, lr: 0.08536
iteration: 17, epoch: 39, best train: 0.701, best val: 0.5982, lr: 0.08465
iteration: 17, epoch: 40, best train: 0.72, best val: 0.6171, lr: 0.08394
iteration: 17, epoch: 41, best train: 0.723, best val: 0.6342, lr: 0.08321
iteration: 17, epoch: 42, best train: 0.723, best val: 0.6342, lr: 0.08247
iteration: 17, epoch: 43, best train: 0.723, best val: 0.6342, lr: 0.08172
iteration: 17, epoch: 44, best train: 0.766, best val: 0.6342, lr: 0.08095
iteration: 17, epoch: 45, best train: 0.766, best val: 0.6342, lr: 0.08018
iteration: 17, epoch: 46, best train: 0.766, best val: 0.6342, lr: 0.07939
iteration: 17, epoch: 47, best train: 0.766, best val: 0.6342, lr: 0.07859
iteration: 17, epoch: 48, best train: 0.766, best val: 0.6342, lr: 0.07778
iteration: 17, epoch: 49, best train: 0.766, best val: 0.6342, lr: 0.07696
iteration: 17, epoch: 50, best train: 0.766, best val: 0.6342, lr: 0.07612
iteration: 17, epoch: 51, best train: 0.782, best val: 0.6342, lr: 0.07528
iteration: 17, epoch: 52, best train: 0.782, best val: 0.6422, lr: 0.07443
iteration: 17, epoch: 53, best train: 0.782, best val: 0.6422, lr: 0.07357
iteration: 17, epoch: 54, best train: 0.799, best val: 0.6422, lr: 0.0727
iteration: 17, epoch: 55, best train: 0.803, best val: 0.6422, lr: 0.07182
iteration: 17, epoch: 56, best train: 0.803, best val: 0.6422, lr: 0.07093
iteration: 17, epoch: 57, best train: 0.834, best val: 0.6422, lr: 0.07004
iteration: 17, epoch: 58, best train: 0.834, best val: 0.6422, lr: 0.06913
iteration: 17, epoch: 59, best train: 0.834, best val: 0.6422, lr: 0.06822
iteration: 17, epoch: 60, best train: 0.834, best val: 0.6422, lr: 0.06731
iteration: 17, epoch: 61, best train: 0.834, best val: 0.6422, lr: 0.06638
iteration: 17, epoch: 62, best train: 0.836, best val: 0.6422, lr: 0.06545
iteration: 17, epoch: 63, best train: 0.836, best val: 0.6559, lr: 0.06451
iteration: 17, epoch: 64, best train: 0.836, best val: 0.6559, lr: 0.06357
iteration: 17, epoch: 65, best train: 0.836, best val: 0.6559, lr: 0.06262
iteration: 17, epoch: 66, best train: 0.836, best val: 0.6559, lr: 0.06167
iteration: 17, epoch: 67, best train: 0.842, best val: 0.6559, lr: 0.06072
iteration: 17, epoch: 68, best train: 0.842, best val: 0.6559, lr: 0.05975
iteration: 17, epoch: 69, best train: 0.845, best val: 0.6559, lr: 0.05879
iteration: 17, epoch: 70, best train: 0.845, best val: 0.6559, lr: 0.05782
iteration: 17, epoch: 71, best train: 0.845, best val: 0.6559, lr: 0.05685
iteration: 17, epoch: 72, best train: 0.845, best val: 0.6559, lr: 0.05588
iteration: 17, epoch: 73, best train: 0.845, best val: 0.6559, lr: 0.0549
iteration: 17, epoch: 74, best train: 0.848, best val: 0.6586, lr: 0.05392
iteration: 17, epoch: 75, best train: 0.848, best val: 0.6586, lr: 0.05294
iteration: 17, epoch: 76, best train: 0.864, best val: 0.6586, lr: 0.05196
iteration: 17, epoch: 77, best train: 0.864, best val: 0.6586, lr: 0.05098
iteration: 17, epoch: 78, best train: 0.888, best val: 0.6586, lr: 0.05
iteration: 17, epoch: 79, best train: 0.888, best val: 0.6622, lr: 0.04902
iteration: 17, epoch: 80, best train: 0.888, best val: 0.6622, lr: 0.04804
iteration: 17, epoch: 81, best train: 0.893, best val: 0.6622, lr: 0.04706
iteration: 17, epoch: 82, best train: 0.893, best val: 0.6622, lr: 0.04608
iteration: 17, epoch: 83, best train: 0.893, best val: 0.6622, lr: 0.0451
iteration: 17, epoch: 84, best train: 0.893, best val: 0.6622, lr: 0.04412
iteration: 17, epoch: 85, best train: 0.893, best val: 0.6622, lr: 0.04315
iteration: 17, epoch: 86, best train: 0.9, best val: 0.6622, lr: 0.04218
iteration: 17, epoch: 87, best train: 0.9, best val: 0.6622, lr: 0.04121
iteration: 17, epoch: 88, best train: 0.9, best val: 0.6664, lr: 0.04025
iteration: 17, epoch: 89, best train: 0.9, best val: 0.6664, lr: 0.03928
iteration: 17, epoch: 90, best train: 0.9, best val: 0.6664, lr: 0.03833
iteration: 17, epoch: 91, best train: 0.9, best val: 0.6746, lr: 0.03738
iteration: 17, epoch: 92, best train: 0.9, best val: 0.6746, lr: 0.03643
iteration: 17, epoch: 93, best train: 0.901, best val: 0.6746, lr: 0.03549
iteration: 17, epoch: 94, best train: 0.901, best val: 0.6746, lr: 0.03455
iteration: 17, epoch: 95, best train: 0.905, best val: 0.6756, lr: 0.03362
iteration: 17, epoch: 96, best train: 0.905, best val: 0.6756, lr: 0.03269
iteration: 17, epoch: 97, best train: 0.905, best val: 0.6756, lr: 0.03178
iteration: 17, epoch: 98, best train: 0.918, best val: 0.6756, lr: 0.03087
iteration: 17, epoch: 99, best train: 0.918, best val: 0.6756, lr: 0.02996
iteration: 17, epoch: 100, best train: 0.918, best val: 0.6756, lr: 0.02907
iteration: 17, epoch: 101, best train: 0.918, best val: 0.6756, lr: 0.02818
iteration: 17, epoch: 102, best train: 0.918, best val: 0.6756, lr: 0.0273
iteration: 17, epoch: 103, best train: 0.918, best val: 0.6756, lr: 0.02643
iteration: 17, epoch: 104, best train: 0.918, best val: 0.6792, lr: 0.02557
iteration: 17, epoch: 105, best train: 0.918, best val: 0.6812, lr: 0.02472
iteration: 17, epoch: 106, best train: 0.918, best val: 0.6812, lr: 0.02388
iteration: 17, epoch: 107, best train: 0.918, best val: 0.6812, lr: 0.02304
iteration: 17, epoch: 108, best train: 0.919, best val: 0.685, lr: 0.02222
iteration: 17, epoch: 109, best train: 0.919, best val: 0.6855, lr: 0.02141
iteration: 17, epoch: 110, best train: 0.92, best val: 0.6864, lr: 0.02061
iteration: 17, epoch: 111, best train: 0.92, best val: 0.6864, lr: 0.01982
iteration: 17, epoch: 112, best train: 0.92, best val: 0.6864, lr: 0.01905
iteration: 17, epoch: 113, best train: 0.924, best val: 0.6864, lr: 0.01828
iteration: 17, epoch: 114, best train: 0.924, best val: 0.6864, lr: 0.01753
iteration: 17, epoch: 115, best train: 0.924, best val: 0.6864, lr: 0.01679
iteration: 17, epoch: 116, best train: 0.924, best val: 0.6864, lr: 0.01606
iteration: 17, epoch: 117, best train: 0.925, best val: 0.6864, lr: 0.01535
iteration: 17, epoch: 118, best train: 0.925, best val: 0.6864, lr: 0.01464
iteration: 17, epoch: 119, best train: 0.942, best val: 0.6864, lr: 0.01396
iteration: 17, epoch: 120, best train: 0.942, best val: 0.6864, lr: 0.01328
iteration: 17, epoch: 121, best train: 0.942, best val: 0.6864, lr: 0.01262
iteration: 17, epoch: 122, best train: 0.942, best val: 0.6903, lr: 0.01198
iteration: 17, epoch: 123, best train: 0.942, best val: 0.6903, lr: 0.01135
iteration: 17, epoch: 124, best train: 0.942, best val: 0.6903, lr: 0.01073
iteration: 17, epoch: 125, best train: 0.942, best val: 0.6921, lr: 0.01013
iteration: 17, epoch: 126, best train: 0.942, best val: 0.6921, lr: 0.00955
iteration: 17, epoch: 127, best train: 0.942, best val: 0.6921, lr: 0.00898
iteration: 17, epoch: 128, best train: 0.942, best val: 0.6921, lr: 0.00843
iteration: 17, epoch: 129, best train: 0.942, best val: 0.6921, lr: 0.00789
iteration: 17, epoch: 130, best train: 0.942, best val: 0.6921, lr: 0.00737
iteration: 17, epoch: 131, best train: 0.942, best val: 0.6921, lr: 0.00686
iteration: 17, epoch: 132, best train: 0.942, best val: 0.6921, lr: 0.00638
iteration: 17, epoch: 133, best train: 0.942, best val: 0.6921, lr: 0.0059
iteration: 17, epoch: 134, best train: 0.942, best val: 0.6921, lr: 0.00545
iteration: 17, epoch: 135, best train: 0.942, best val: 0.6921, lr: 0.00501
iteration: 17, epoch: 136, best train: 0.942, best val: 0.6921, lr: 0.00459
iteration: 17, epoch: 137, best train: 0.942, best val: 0.6921, lr: 0.00419
iteration: 17, epoch: 138, best train: 0.942, best val: 0.6921, lr: 0.00381
iteration: 17, epoch: 139, best train: 0.942, best val: 0.6921, lr: 0.00344
iteration: 17, epoch: 140, best train: 0.942, best val: 0.6921, lr: 0.00309
iteration: 17, epoch: 141, best train: 0.942, best val: 0.6921, lr: 0.00276
iteration: 17, epoch: 142, best train: 0.942, best val: 0.6921, lr: 0.00245
iteration: 17, epoch: 143, best train: 0.942, best val: 0.6921, lr: 0.00215
iteration: 17, epoch: 144, best train: 0.945, best val: 0.6921, lr: 0.00188
iteration: 17, epoch: 145, best train: 0.945, best val: 0.6921, lr: 0.00162
iteration: 17, epoch: 146, best train: 0.945, best val: 0.6921, lr: 0.00138
iteration: 17, epoch: 147, best train: 0.945, best val: 0.6921, lr: 0.00116
iteration: 17, epoch: 148, best train: 0.945, best val: 0.6921, lr: 0.00096
iteration: 17, epoch: 149, best train: 0.945, best val: 0.6921, lr: 0.00078
iteration: 17, epoch: 150, best train: 0.946, best val: 0.6921, lr: 0.00062
iteration: 17, epoch: 151, best train: 0.946, best val: 0.6921, lr: 0.00047
iteration: 17, epoch: 152, best train: 0.946, best val: 0.6921, lr: 0.00035
iteration: 17, epoch: 153, best train: 0.946, best val: 0.6921, lr: 0.00024
iteration: 17, epoch: 154, best train: 0.946, best val: 0.6921, lr: 0.00015
iteration: 17, epoch: 155, best train: 0.946, best val: 0.6921, lr: 9e-05
iteration: 17, epoch: 156, best train: 0.946, best val: 0.6921, lr: 4e-05
iteration: 17, epoch: 157, best train: 0.946, best val: 0.6921, lr: 1e-05
iteration: 17, epoch: 158, best train: 0.946, best val: 0.6921, lr: 0.0
iteration: 17, epoch: 159, best train: 0.946, best val: 0.6921, lr: 1e-05
------------------------ Checkpoint 55  ------------------------
pre_conv.0.weight_mask 	|	active =  406 	|	total =  1728 	|	layerwise sparsity =  0.2349537037037037
layer1.0.conv1.weight_mask 	|	active =  664 	|	total =  36864 	|	layerwise sparsity =  0.018012152777777776
layer1.0.conv2.weight_mask 	|	active =  664 	|	total =  36864 	|	layerwise sparsity =  0.018012152777777776
layer1.1.conv1.weight_mask 	|	active =  664 	|	total =  36864 	|	layerwise sparsity =  0.018012152777777776
layer1.1.conv2.weight_mask 	|	active =  664 	|	total =  36864 	|	layerwise sparsity =  0.018012152777777776
layer2.0.conv1.weight_mask 	|	active =  1328 	|	total =  73728 	|	layerwise sparsity =  0.018012152777777776
layer2.0.conv2.weight_mask 	|	active =  2656 	|	total =  147456 	|	layerwise sparsity =  0.018012152777777776
layer2.0.shortcut.0.weight_mask 	|	active =  1925 	|	total =  8192 	|	layerwise sparsity =  0.2349853515625
layer2.1.conv1.weight_mask 	|	active =  2656 	|	total =  147456 	|	layerwise sparsity =  0.018012152777777776
layer2.1.conv2.weight_mask 	|	active =  2656 	|	total =  147456 	|	layerwise sparsity =  0.018012152777777776
layer3.0.conv1.weight_mask 	|	active =  5313 	|	total =  294912 	|	layerwise sparsity =  0.018015543619791668
layer3.0.conv2.weight_mask 	|	active =  5175 	|	total =  589824 	|	layerwise sparsity =  0.0087738037109375
layer3.0.shortcut.0.weight_mask 	|	active =  590 	|	total =  32768 	|	layerwise sparsity =  0.01800537109375
layer3.1.conv1.weight_mask 	|	active =  5483 	|	total =  589824 	|	layerwise sparsity =  0.009295993381076388
layer3.1.conv2.weight_mask 	|	active =  5969 	|	total =  589824 	|	layerwise sparsity =  0.010119967990451388
layer4.0.conv1.weight_mask 	|	active =  16854 	|	total =  1179648 	|	layerwise sparsity =  0.014287312825520834
layer4.0.conv2.weight_mask 	|	active =  48179 	|	total =  2359296 	|	layerwise sparsity =  0.0204209221733941
layer4.0.shortcut.0.weight_mask 	|	active =  2362 	|	total =  131072 	|	layerwise sparsity =  0.0180206298828125
layer4.1.conv1.weight_mask 	|	active =  52980 	|	total =  2359296 	|	layerwise sparsity =  0.022455851236979168
layer4.1.conv2.weight_mask 	|	active =  59715 	|	total =  2359296 	|	layerwise sparsity =  0.025310516357421875
------------------------ Checkpoint 56  ------------------------
best_val =  0.6920999999999999
------------------------ Checkpoint 57  ------------------------
pruning state: 18
remaining weight at start of iteration =  1.9437090294385895
iteration: 18, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 18, epoch: 1, best train: 0.208, best val: 0.1, lr: 0.09991
iteration: 18, epoch: 2, best train: 0.208, best val: 0.1, lr: 0.09985
iteration: 18, epoch: 3, best train: 0.244, best val: 0.1001, lr: 0.09976
iteration: 18, epoch: 4, best train: 0.244, best val: 0.1531, lr: 0.09965
iteration: 18, epoch: 5, best train: 0.267, best val: 0.191, lr: 0.09953
iteration: 18, epoch: 6, best train: 0.267, best val: 0.3137, lr: 0.09938
iteration: 18, epoch: 7, best train: 0.278, best val: 0.3293, lr: 0.09922
iteration: 18, epoch: 8, best train: 0.301, best val: 0.3293, lr: 0.09904
iteration: 18, epoch: 9, best train: 0.301, best val: 0.3293, lr: 0.09884
iteration: 18, epoch: 10, best train: 0.313, best val: 0.3513, lr: 0.09862
iteration: 18, epoch: 11, best train: 0.327, best val: 0.3675, lr: 0.09838
iteration: 18, epoch: 12, best train: 0.34, best val: 0.3675, lr: 0.09812
iteration: 18, epoch: 13, best train: 0.343, best val: 0.42, lr: 0.09785
iteration: 18, epoch: 14, best train: 0.376, best val: 0.42, lr: 0.09755
iteration: 18, epoch: 15, best train: 0.376, best val: 0.42, lr: 0.09724
iteration: 18, epoch: 16, best train: 0.381, best val: 0.42, lr: 0.09691
iteration: 18, epoch: 17, best train: 0.408, best val: 0.42, lr: 0.09656
iteration: 18, epoch: 18, best train: 0.408, best val: 0.4429, lr: 0.09619
iteration: 18, epoch: 19, best train: 0.423, best val: 0.4429, lr: 0.09581
iteration: 18, epoch: 20, best train: 0.423, best val: 0.4429, lr: 0.09541
iteration: 18, epoch: 21, best train: 0.445, best val: 0.4623, lr: 0.09499
iteration: 18, epoch: 22, best train: 0.462, best val: 0.4663, lr: 0.09455
iteration: 18, epoch: 23, best train: 0.465, best val: 0.4663, lr: 0.0941
iteration: 18, epoch: 24, best train: 0.474, best val: 0.4663, lr: 0.09362
iteration: 18, epoch: 25, best train: 0.499, best val: 0.4737, lr: 0.09314
iteration: 18, epoch: 26, best train: 0.499, best val: 0.4797, lr: 0.09263
iteration: 18, epoch: 27, best train: 0.53, best val: 0.4797, lr: 0.09211
iteration: 18, epoch: 28, best train: 0.537, best val: 0.4797, lr: 0.09157
iteration: 18, epoch: 29, best train: 0.537, best val: 0.5214, lr: 0.09102
iteration: 18, epoch: 30, best train: 0.537, best val: 0.5214, lr: 0.09045
iteration: 18, epoch: 31, best train: 0.554, best val: 0.5336, lr: 0.08987
iteration: 18, epoch: 32, best train: 0.554, best val: 0.545, lr: 0.08927
iteration: 18, epoch: 33, best train: 0.586, best val: 0.545, lr: 0.08865
iteration: 18, epoch: 34, best train: 0.586, best val: 0.545, lr: 0.08802
iteration: 18, epoch: 35, best train: 0.586, best val: 0.545, lr: 0.08738
iteration: 18, epoch: 36, best train: 0.586, best val: 0.545, lr: 0.08672
iteration: 18, epoch: 37, best train: 0.586, best val: 0.545, lr: 0.08604
iteration: 18, epoch: 38, best train: 0.588, best val: 0.545, lr: 0.08536
iteration: 18, epoch: 39, best train: 0.607, best val: 0.5621, lr: 0.08465
iteration: 18, epoch: 40, best train: 0.607, best val: 0.5621, lr: 0.08394
iteration: 18, epoch: 41, best train: 0.607, best val: 0.5621, lr: 0.08321
iteration: 18, epoch: 42, best train: 0.609, best val: 0.5894, lr: 0.08247
iteration: 18, epoch: 43, best train: 0.617, best val: 0.5894, lr: 0.08172
iteration: 18, epoch: 44, best train: 0.644, best val: 0.5894, lr: 0.08095
iteration: 18, epoch: 45, best train: 0.644, best val: 0.5894, lr: 0.08018
iteration: 18, epoch: 46, best train: 0.644, best val: 0.5909, lr: 0.07939
iteration: 18, epoch: 47, best train: 0.644, best val: 0.5909, lr: 0.07859
iteration: 18, epoch: 48, best train: 0.659, best val: 0.5909, lr: 0.07778
iteration: 18, epoch: 49, best train: 0.659, best val: 0.5909, lr: 0.07696
iteration: 18, epoch: 50, best train: 0.659, best val: 0.5909, lr: 0.07612
iteration: 18, epoch: 51, best train: 0.659, best val: 0.5909, lr: 0.07528
iteration: 18, epoch: 52, best train: 0.662, best val: 0.5963, lr: 0.07443
iteration: 18, epoch: 53, best train: 0.687, best val: 0.5963, lr: 0.07357
iteration: 18, epoch: 54, best train: 0.698, best val: 0.5963, lr: 0.0727
iteration: 18, epoch: 55, best train: 0.698, best val: 0.5963, lr: 0.07182
iteration: 18, epoch: 56, best train: 0.698, best val: 0.6039, lr: 0.07093
iteration: 18, epoch: 57, best train: 0.698, best val: 0.6039, lr: 0.07004
iteration: 18, epoch: 58, best train: 0.698, best val: 0.6039, lr: 0.06913
iteration: 18, epoch: 59, best train: 0.722, best val: 0.6044, lr: 0.06822
iteration: 18, epoch: 60, best train: 0.726, best val: 0.6044, lr: 0.06731
iteration: 18, epoch: 61, best train: 0.726, best val: 0.6044, lr: 0.06638
iteration: 18, epoch: 62, best train: 0.726, best val: 0.6044, lr: 0.06545
iteration: 18, epoch: 63, best train: 0.729, best val: 0.6044, lr: 0.06451
iteration: 18, epoch: 64, best train: 0.743, best val: 0.6044, lr: 0.06357
iteration: 18, epoch: 65, best train: 0.743, best val: 0.624, lr: 0.06262
iteration: 18, epoch: 66, best train: 0.743, best val: 0.624, lr: 0.06167
iteration: 18, epoch: 67, best train: 0.743, best val: 0.624, lr: 0.06072
iteration: 18, epoch: 68, best train: 0.743, best val: 0.624, lr: 0.05975
iteration: 18, epoch: 69, best train: 0.747, best val: 0.624, lr: 0.05879
iteration: 18, epoch: 70, best train: 0.766, best val: 0.624, lr: 0.05782
iteration: 18, epoch: 71, best train: 0.766, best val: 0.624, lr: 0.05685
iteration: 18, epoch: 72, best train: 0.772, best val: 0.624, lr: 0.05588
iteration: 18, epoch: 73, best train: 0.772, best val: 0.624, lr: 0.0549
iteration: 18, epoch: 74, best train: 0.778, best val: 0.6406, lr: 0.05392
iteration: 18, epoch: 75, best train: 0.778, best val: 0.6406, lr: 0.05294
iteration: 18, epoch: 76, best train: 0.778, best val: 0.6406, lr: 0.05196
iteration: 18, epoch: 77, best train: 0.778, best val: 0.6406, lr: 0.05098
iteration: 18, epoch: 78, best train: 0.782, best val: 0.6406, lr: 0.05
iteration: 18, epoch: 79, best train: 0.792, best val: 0.6406, lr: 0.04902
iteration: 18, epoch: 80, best train: 0.792, best val: 0.6406, lr: 0.04804
iteration: 18, epoch: 81, best train: 0.814, best val: 0.6406, lr: 0.04706
iteration: 18, epoch: 82, best train: 0.814, best val: 0.6406, lr: 0.04608
iteration: 18, epoch: 83, best train: 0.814, best val: 0.6406, lr: 0.0451
iteration: 18, epoch: 84, best train: 0.814, best val: 0.6406, lr: 0.04412
iteration: 18, epoch: 85, best train: 0.814, best val: 0.6406, lr: 0.04315
iteration: 18, epoch: 86, best train: 0.824, best val: 0.6406, lr: 0.04218
iteration: 18, epoch: 87, best train: 0.824, best val: 0.6516, lr: 0.04121
iteration: 18, epoch: 88, best train: 0.824, best val: 0.6516, lr: 0.04025
iteration: 18, epoch: 89, best train: 0.824, best val: 0.6516, lr: 0.03928
iteration: 18, epoch: 90, best train: 0.835, best val: 0.6534, lr: 0.03833
iteration: 18, epoch: 91, best train: 0.835, best val: 0.6534, lr: 0.03738
iteration: 18, epoch: 92, best train: 0.849, best val: 0.6534, lr: 0.03643
iteration: 18, epoch: 93, best train: 0.849, best val: 0.6534, lr: 0.03549
iteration: 18, epoch: 94, best train: 0.849, best val: 0.6534, lr: 0.03455
iteration: 18, epoch: 95, best train: 0.849, best val: 0.6534, lr: 0.03362
iteration: 18, epoch: 96, best train: 0.849, best val: 0.6534, lr: 0.03269
iteration: 18, epoch: 97, best train: 0.849, best val: 0.6606, lr: 0.03178
iteration: 18, epoch: 98, best train: 0.854, best val: 0.6606, lr: 0.03087
iteration: 18, epoch: 99, best train: 0.856, best val: 0.6606, lr: 0.02996
iteration: 18, epoch: 100, best train: 0.862, best val: 0.6606, lr: 0.02907
iteration: 18, epoch: 101, best train: 0.862, best val: 0.6606, lr: 0.02818
iteration: 18, epoch: 102, best train: 0.871, best val: 0.6606, lr: 0.0273
iteration: 18, epoch: 103, best train: 0.871, best val: 0.6606, lr: 0.02643
iteration: 18, epoch: 104, best train: 0.885, best val: 0.6606, lr: 0.02557
iteration: 18, epoch: 105, best train: 0.885, best val: 0.6606, lr: 0.02472
iteration: 18, epoch: 106, best train: 0.885, best val: 0.6606, lr: 0.02388
iteration: 18, epoch: 107, best train: 0.885, best val: 0.6606, lr: 0.02304
iteration: 18, epoch: 108, best train: 0.885, best val: 0.6623, lr: 0.02222
iteration: 18, epoch: 109, best train: 0.885, best val: 0.6624, lr: 0.02141
iteration: 18, epoch: 110, best train: 0.888, best val: 0.6624, lr: 0.02061
iteration: 18, epoch: 111, best train: 0.888, best val: 0.6624, lr: 0.01982
iteration: 18, epoch: 112, best train: 0.888, best val: 0.6627, lr: 0.01905
iteration: 18, epoch: 113, best train: 0.888, best val: 0.6668, lr: 0.01828
iteration: 18, epoch: 114, best train: 0.888, best val: 0.6668, lr: 0.01753
iteration: 18, epoch: 115, best train: 0.888, best val: 0.6668, lr: 0.01679
iteration: 18, epoch: 116, best train: 0.888, best val: 0.6683, lr: 0.01606
iteration: 18, epoch: 117, best train: 0.888, best val: 0.6683, lr: 0.01535
iteration: 18, epoch: 118, best train: 0.895, best val: 0.6683, lr: 0.01464
iteration: 18, epoch: 119, best train: 0.895, best val: 0.6694, lr: 0.01396
iteration: 18, epoch: 120, best train: 0.895, best val: 0.674, lr: 0.01328
iteration: 18, epoch: 121, best train: 0.899, best val: 0.674, lr: 0.01262
iteration: 18, epoch: 122, best train: 0.899, best val: 0.674, lr: 0.01198
iteration: 18, epoch: 123, best train: 0.899, best val: 0.674, lr: 0.01135
iteration: 18, epoch: 124, best train: 0.899, best val: 0.674, lr: 0.01073
iteration: 18, epoch: 125, best train: 0.899, best val: 0.674, lr: 0.01013
iteration: 18, epoch: 126, best train: 0.899, best val: 0.674, lr: 0.00955
iteration: 18, epoch: 127, best train: 0.899, best val: 0.674, lr: 0.00898
iteration: 18, epoch: 128, best train: 0.899, best val: 0.674, lr: 0.00843
iteration: 18, epoch: 129, best train: 0.902, best val: 0.674, lr: 0.00789
iteration: 18, epoch: 130, best train: 0.902, best val: 0.674, lr: 0.00737
iteration: 18, epoch: 131, best train: 0.914, best val: 0.6791, lr: 0.00686
iteration: 18, epoch: 132, best train: 0.914, best val: 0.6791, lr: 0.00638
iteration: 18, epoch: 133, best train: 0.914, best val: 0.6791, lr: 0.0059
iteration: 18, epoch: 134, best train: 0.914, best val: 0.6791, lr: 0.00545
iteration: 18, epoch: 135, best train: 0.914, best val: 0.6791, lr: 0.00501
iteration: 18, epoch: 136, best train: 0.914, best val: 0.6791, lr: 0.00459
iteration: 18, epoch: 137, best train: 0.914, best val: 0.6791, lr: 0.00419
iteration: 18, epoch: 138, best train: 0.914, best val: 0.6791, lr: 0.00381
iteration: 18, epoch: 139, best train: 0.915, best val: 0.6791, lr: 0.00344
iteration: 18, epoch: 140, best train: 0.922, best val: 0.6791, lr: 0.00309
iteration: 18, epoch: 141, best train: 0.922, best val: 0.6791, lr: 0.00276
iteration: 18, epoch: 142, best train: 0.922, best val: 0.6791, lr: 0.00245
iteration: 18, epoch: 143, best train: 0.922, best val: 0.6791, lr: 0.00215
iteration: 18, epoch: 144, best train: 0.922, best val: 0.6791, lr: 0.00188
iteration: 18, epoch: 145, best train: 0.922, best val: 0.6791, lr: 0.00162
iteration: 18, epoch: 146, best train: 0.922, best val: 0.6791, lr: 0.00138
iteration: 18, epoch: 147, best train: 0.922, best val: 0.6791, lr: 0.00116
iteration: 18, epoch: 148, best train: 0.922, best val: 0.6796, lr: 0.00096
iteration: 18, epoch: 149, best train: 0.922, best val: 0.6814, lr: 0.00078
iteration: 18, epoch: 150, best train: 0.922, best val: 0.6814, lr: 0.00062
iteration: 18, epoch: 151, best train: 0.922, best val: 0.6814, lr: 0.00047
iteration: 18, epoch: 152, best train: 0.922, best val: 0.6814, lr: 0.00035
iteration: 18, epoch: 153, best train: 0.922, best val: 0.6814, lr: 0.00024
iteration: 18, epoch: 154, best train: 0.922, best val: 0.6814, lr: 0.00015
iteration: 18, epoch: 155, best train: 0.922, best val: 0.6814, lr: 9e-05
iteration: 18, epoch: 156, best train: 0.922, best val: 0.6814, lr: 4e-05
iteration: 18, epoch: 157, best train: 0.922, best val: 0.6814, lr: 1e-05
iteration: 18, epoch: 158, best train: 0.922, best val: 0.6814, lr: 0.0
iteration: 18, epoch: 159, best train: 0.922, best val: 0.6814, lr: 1e-05
------------------------ Checkpoint 58  ------------------------
pre_conv.0.weight_mask 	|	active =  375 	|	total =  1728 	|	layerwise sparsity =  0.2170138888888889
layer1.0.conv1.weight_mask 	|	active =  531 	|	total =  36864 	|	layerwise sparsity =  0.014404296875
layer1.0.conv2.weight_mask 	|	active =  531 	|	total =  36864 	|	layerwise sparsity =  0.014404296875
layer1.1.conv1.weight_mask 	|	active =  531 	|	total =  36864 	|	layerwise sparsity =  0.014404296875
layer1.1.conv2.weight_mask 	|	active =  531 	|	total =  36864 	|	layerwise sparsity =  0.014404296875
layer2.0.conv1.weight_mask 	|	active =  1062 	|	total =  73728 	|	layerwise sparsity =  0.014404296875
layer2.0.conv2.weight_mask 	|	active =  2125 	|	total =  147456 	|	layerwise sparsity =  0.014411078559027778
layer2.0.shortcut.0.weight_mask 	|	active =  1776 	|	total =  8192 	|	layerwise sparsity =  0.216796875
layer2.1.conv1.weight_mask 	|	active =  2125 	|	total =  147456 	|	layerwise sparsity =  0.014411078559027778
layer2.1.conv2.weight_mask 	|	active =  2125 	|	total =  147456 	|	layerwise sparsity =  0.014411078559027778
layer3.0.conv1.weight_mask 	|	active =  4250 	|	total =  294912 	|	layerwise sparsity =  0.014411078559027778
layer3.0.conv2.weight_mask 	|	active =  3978 	|	total =  589824 	|	layerwise sparsity =  0.006744384765625
layer3.0.shortcut.0.weight_mask 	|	active =  472 	|	total =  32768 	|	layerwise sparsity =  0.014404296875
layer3.1.conv1.weight_mask 	|	active =  4228 	|	total =  589824 	|	layerwise sparsity =  0.007168240017361111
layer3.1.conv2.weight_mask 	|	active =  4625 	|	total =  589824 	|	layerwise sparsity =  0.007841322157118056
layer4.0.conv1.weight_mask 	|	active =  13311 	|	total =  1179648 	|	layerwise sparsity =  0.01128387451171875
layer4.0.conv2.weight_mask 	|	active =  38813 	|	total =  2359296 	|	layerwise sparsity =  0.01645109388563368
layer4.0.shortcut.0.weight_mask 	|	active =  1890 	|	total =  131072 	|	layerwise sparsity =  0.0144195556640625
layer4.1.conv1.weight_mask 	|	active =  42906 	|	total =  2359296 	|	layerwise sparsity =  0.018185933430989582
layer4.1.conv2.weight_mask 	|	active =  48683 	|	total =  2359296 	|	layerwise sparsity =  0.0206345452202691
------------------------ Checkpoint 59  ------------------------
best_val =  0.6814
------------------------ Checkpoint 60  ------------------------
pruning state: 19
remaining weight at start of iteration =  1.5670254010311857
iteration: 19, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 19, epoch: 1, best train: 0.16, best val: 0.1, lr: 0.09991
iteration: 19, epoch: 2, best train: 0.19, best val: 0.1, lr: 0.09985
iteration: 19, epoch: 3, best train: 0.212, best val: 0.1, lr: 0.09976
iteration: 19, epoch: 4, best train: 0.233, best val: 0.1882, lr: 0.09965
iteration: 19, epoch: 5, best train: 0.254, best val: 0.2398, lr: 0.09953
iteration: 19, epoch: 6, best train: 0.286, best val: 0.3119, lr: 0.09938
iteration: 19, epoch: 7, best train: 0.306, best val: 0.3119, lr: 0.09922
iteration: 19, epoch: 8, best train: 0.314, best val: 0.3867, lr: 0.09904
iteration: 19, epoch: 9, best train: 0.314, best val: 0.3867, lr: 0.09884
iteration: 19, epoch: 10, best train: 0.319, best val: 0.3867, lr: 0.09862
iteration: 19, epoch: 11, best train: 0.341, best val: 0.3965, lr: 0.09838
iteration: 19, epoch: 12, best train: 0.385, best val: 0.4022, lr: 0.09812
iteration: 19, epoch: 13, best train: 0.385, best val: 0.4022, lr: 0.09785
iteration: 19, epoch: 14, best train: 0.385, best val: 0.4022, lr: 0.09755
iteration: 19, epoch: 15, best train: 0.385, best val: 0.4103, lr: 0.09724
iteration: 19, epoch: 16, best train: 0.407, best val: 0.424, lr: 0.09691
iteration: 19, epoch: 17, best train: 0.435, best val: 0.424, lr: 0.09656
iteration: 19, epoch: 18, best train: 0.435, best val: 0.424, lr: 0.09619
iteration: 19, epoch: 19, best train: 0.435, best val: 0.4396, lr: 0.09581
iteration: 19, epoch: 20, best train: 0.435, best val: 0.4396, lr: 0.09541
iteration: 19, epoch: 21, best train: 0.458, best val: 0.4396, lr: 0.09499
iteration: 19, epoch: 22, best train: 0.458, best val: 0.4396, lr: 0.09455
iteration: 19, epoch: 23, best train: 0.472, best val: 0.4396, lr: 0.0941
iteration: 19, epoch: 24, best train: 0.476, best val: 0.4396, lr: 0.09362
iteration: 19, epoch: 25, best train: 0.476, best val: 0.4396, lr: 0.09314
iteration: 19, epoch: 26, best train: 0.476, best val: 0.4424, lr: 0.09263
iteration: 19, epoch: 27, best train: 0.5, best val: 0.4484, lr: 0.09211
iteration: 19, epoch: 28, best train: 0.5, best val: 0.4558, lr: 0.09157
iteration: 19, epoch: 29, best train: 0.5, best val: 0.531, lr: 0.09102
iteration: 19, epoch: 30, best train: 0.5, best val: 0.531, lr: 0.09045
iteration: 19, epoch: 31, best train: 0.533, best val: 0.531, lr: 0.08987
iteration: 19, epoch: 32, best train: 0.533, best val: 0.531, lr: 0.08927
iteration: 19, epoch: 33, best train: 0.544, best val: 0.531, lr: 0.08865
iteration: 19, epoch: 34, best train: 0.544, best val: 0.531, lr: 0.08802
iteration: 19, epoch: 35, best train: 0.544, best val: 0.531, lr: 0.08738
iteration: 19, epoch: 36, best train: 0.544, best val: 0.531, lr: 0.08672
iteration: 19, epoch: 37, best train: 0.544, best val: 0.531, lr: 0.08604
iteration: 19, epoch: 38, best train: 0.551, best val: 0.544, lr: 0.08536
iteration: 19, epoch: 39, best train: 0.551, best val: 0.544, lr: 0.08465
iteration: 19, epoch: 40, best train: 0.568, best val: 0.544, lr: 0.08394
iteration: 19, epoch: 41, best train: 0.568, best val: 0.544, lr: 0.08321
iteration: 19, epoch: 42, best train: 0.573, best val: 0.544, lr: 0.08247
iteration: 19, epoch: 43, best train: 0.573, best val: 0.544, lr: 0.08172
iteration: 19, epoch: 44, best train: 0.594, best val: 0.544, lr: 0.08095
iteration: 19, epoch: 45, best train: 0.594, best val: 0.5449, lr: 0.08018
iteration: 19, epoch: 46, best train: 0.594, best val: 0.5449, lr: 0.07939
iteration: 19, epoch: 47, best train: 0.594, best val: 0.5578, lr: 0.07859
iteration: 19, epoch: 48, best train: 0.624, best val: 0.5578, lr: 0.07778
iteration: 19, epoch: 49, best train: 0.624, best val: 0.5578, lr: 0.07696
iteration: 19, epoch: 50, best train: 0.624, best val: 0.5578, lr: 0.07612
iteration: 19, epoch: 51, best train: 0.624, best val: 0.5578, lr: 0.07528
iteration: 19, epoch: 52, best train: 0.624, best val: 0.5578, lr: 0.07443
iteration: 19, epoch: 53, best train: 0.624, best val: 0.5578, lr: 0.07357
iteration: 19, epoch: 54, best train: 0.626, best val: 0.5578, lr: 0.0727
iteration: 19, epoch: 55, best train: 0.626, best val: 0.5578, lr: 0.07182
iteration: 19, epoch: 56, best train: 0.626, best val: 0.5578, lr: 0.07093
iteration: 19, epoch: 57, best train: 0.645, best val: 0.5578, lr: 0.07004
iteration: 19, epoch: 58, best train: 0.645, best val: 0.5638, lr: 0.06913
iteration: 19, epoch: 59, best train: 0.67, best val: 0.5783, lr: 0.06822
iteration: 19, epoch: 60, best train: 0.67, best val: 0.5783, lr: 0.06731
iteration: 19, epoch: 61, best train: 0.67, best val: 0.5783, lr: 0.06638
iteration: 19, epoch: 62, best train: 0.67, best val: 0.5783, lr: 0.06545
iteration: 19, epoch: 63, best train: 0.67, best val: 0.5783, lr: 0.06451
iteration: 19, epoch: 64, best train: 0.67, best val: 0.5783, lr: 0.06357
iteration: 19, epoch: 65, best train: 0.676, best val: 0.5783, lr: 0.06262
iteration: 19, epoch: 66, best train: 0.676, best val: 0.5783, lr: 0.06167
iteration: 19, epoch: 67, best train: 0.676, best val: 0.5783, lr: 0.06072
iteration: 19, epoch: 68, best train: 0.677, best val: 0.5783, lr: 0.05975
iteration: 19, epoch: 69, best train: 0.678, best val: 0.5805, lr: 0.05879
iteration: 19, epoch: 70, best train: 0.708, best val: 0.6059, lr: 0.05782
iteration: 19, epoch: 71, best train: 0.721, best val: 0.6059, lr: 0.05685
iteration: 19, epoch: 72, best train: 0.721, best val: 0.6059, lr: 0.05588
iteration: 19, epoch: 73, best train: 0.721, best val: 0.6059, lr: 0.0549
iteration: 19, epoch: 74, best train: 0.721, best val: 0.6059, lr: 0.05392
iteration: 19, epoch: 75, best train: 0.721, best val: 0.6059, lr: 0.05294
iteration: 19, epoch: 76, best train: 0.721, best val: 0.6059, lr: 0.05196
iteration: 19, epoch: 77, best train: 0.721, best val: 0.6059, lr: 0.05098
iteration: 19, epoch: 78, best train: 0.721, best val: 0.6059, lr: 0.05
iteration: 19, epoch: 79, best train: 0.734, best val: 0.6059, lr: 0.04902
iteration: 19, epoch: 80, best train: 0.734, best val: 0.6059, lr: 0.04804
iteration: 19, epoch: 81, best train: 0.735, best val: 0.6059, lr: 0.04706
iteration: 19, epoch: 82, best train: 0.735, best val: 0.6059, lr: 0.04608
iteration: 19, epoch: 83, best train: 0.749, best val: 0.6059, lr: 0.0451
iteration: 19, epoch: 84, best train: 0.749, best val: 0.6059, lr: 0.04412
iteration: 19, epoch: 85, best train: 0.749, best val: 0.6059, lr: 0.04315
iteration: 19, epoch: 86, best train: 0.749, best val: 0.6059, lr: 0.04218
iteration: 19, epoch: 87, best train: 0.749, best val: 0.6059, lr: 0.04121
iteration: 19, epoch: 88, best train: 0.752, best val: 0.607, lr: 0.04025
iteration: 19, epoch: 89, best train: 0.764, best val: 0.6207, lr: 0.03928
iteration: 19, epoch: 90, best train: 0.764, best val: 0.6207, lr: 0.03833
iteration: 19, epoch: 91, best train: 0.764, best val: 0.6207, lr: 0.03738
iteration: 19, epoch: 92, best train: 0.774, best val: 0.6207, lr: 0.03643
iteration: 19, epoch: 93, best train: 0.775, best val: 0.6207, lr: 0.03549
iteration: 19, epoch: 94, best train: 0.782, best val: 0.6207, lr: 0.03455
iteration: 19, epoch: 95, best train: 0.795, best val: 0.6207, lr: 0.03362
iteration: 19, epoch: 96, best train: 0.795, best val: 0.6207, lr: 0.03269
iteration: 19, epoch: 97, best train: 0.795, best val: 0.6207, lr: 0.03178
iteration: 19, epoch: 98, best train: 0.795, best val: 0.6207, lr: 0.03087
iteration: 19, epoch: 99, best train: 0.795, best val: 0.6218, lr: 0.02996
iteration: 19, epoch: 100, best train: 0.796, best val: 0.6218, lr: 0.02907
iteration: 19, epoch: 101, best train: 0.8, best val: 0.6218, lr: 0.02818
iteration: 19, epoch: 102, best train: 0.8, best val: 0.6218, lr: 0.0273
iteration: 19, epoch: 103, best train: 0.811, best val: 0.6218, lr: 0.02643
iteration: 19, epoch: 104, best train: 0.811, best val: 0.6218, lr: 0.02557
iteration: 19, epoch: 105, best train: 0.811, best val: 0.6218, lr: 0.02472
iteration: 19, epoch: 106, best train: 0.811, best val: 0.6251, lr: 0.02388
iteration: 19, epoch: 107, best train: 0.811, best val: 0.6251, lr: 0.02304
iteration: 19, epoch: 108, best train: 0.811, best val: 0.6251, lr: 0.02222
iteration: 19, epoch: 109, best train: 0.811, best val: 0.6281, lr: 0.02141
iteration: 19, epoch: 110, best train: 0.811, best val: 0.6298, lr: 0.02061
iteration: 19, epoch: 111, best train: 0.825, best val: 0.6303, lr: 0.01982
iteration: 19, epoch: 112, best train: 0.825, best val: 0.6391, lr: 0.01905
iteration: 19, epoch: 113, best train: 0.833, best val: 0.6391, lr: 0.01828
iteration: 19, epoch: 114, best train: 0.835, best val: 0.6391, lr: 0.01753
iteration: 19, epoch: 115, best train: 0.835, best val: 0.6391, lr: 0.01679
iteration: 19, epoch: 116, best train: 0.835, best val: 0.6391, lr: 0.01606
iteration: 19, epoch: 117, best train: 0.844, best val: 0.6391, lr: 0.01535
iteration: 19, epoch: 118, best train: 0.844, best val: 0.6391, lr: 0.01464
iteration: 19, epoch: 119, best train: 0.844, best val: 0.6391, lr: 0.01396
iteration: 19, epoch: 120, best train: 0.844, best val: 0.6391, lr: 0.01328
iteration: 19, epoch: 121, best train: 0.853, best val: 0.6391, lr: 0.01262
iteration: 19, epoch: 122, best train: 0.853, best val: 0.6391, lr: 0.01198
iteration: 19, epoch: 123, best train: 0.853, best val: 0.6391, lr: 0.01135
iteration: 19, epoch: 124, best train: 0.853, best val: 0.6391, lr: 0.01073
iteration: 19, epoch: 125, best train: 0.853, best val: 0.6391, lr: 0.01013
iteration: 19, epoch: 126, best train: 0.86, best val: 0.6417, lr: 0.00955
iteration: 19, epoch: 127, best train: 0.86, best val: 0.6417, lr: 0.00898
iteration: 19, epoch: 128, best train: 0.861, best val: 0.6431, lr: 0.00843
iteration: 19, epoch: 129, best train: 0.861, best val: 0.6431, lr: 0.00789
iteration: 19, epoch: 130, best train: 0.861, best val: 0.6431, lr: 0.00737
iteration: 19, epoch: 131, best train: 0.861, best val: 0.6431, lr: 0.00686
iteration: 19, epoch: 132, best train: 0.861, best val: 0.6431, lr: 0.00638
iteration: 19, epoch: 133, best train: 0.861, best val: 0.6462, lr: 0.0059
iteration: 19, epoch: 134, best train: 0.862, best val: 0.6462, lr: 0.00545
iteration: 19, epoch: 135, best train: 0.862, best val: 0.6462, lr: 0.00501
iteration: 19, epoch: 136, best train: 0.862, best val: 0.6479, lr: 0.00459
iteration: 19, epoch: 137, best train: 0.866, best val: 0.6484, lr: 0.00419
iteration: 19, epoch: 138, best train: 0.866, best val: 0.6484, lr: 0.00381
iteration: 19, epoch: 139, best train: 0.866, best val: 0.6484, lr: 0.00344
iteration: 19, epoch: 140, best train: 0.866, best val: 0.6484, lr: 0.00309
iteration: 19, epoch: 141, best train: 0.866, best val: 0.6484, lr: 0.00276
iteration: 19, epoch: 142, best train: 0.867, best val: 0.6484, lr: 0.00245
iteration: 19, epoch: 143, best train: 0.867, best val: 0.6484, lr: 0.00215
iteration: 19, epoch: 144, best train: 0.867, best val: 0.6484, lr: 0.00188
iteration: 19, epoch: 145, best train: 0.867, best val: 0.6484, lr: 0.00162
iteration: 19, epoch: 146, best train: 0.867, best val: 0.6484, lr: 0.00138
iteration: 19, epoch: 147, best train: 0.867, best val: 0.6484, lr: 0.00116
iteration: 19, epoch: 148, best train: 0.867, best val: 0.6484, lr: 0.00096
iteration: 19, epoch: 149, best train: 0.867, best val: 0.6484, lr: 0.00078
iteration: 19, epoch: 150, best train: 0.874, best val: 0.6484, lr: 0.00062
iteration: 19, epoch: 151, best train: 0.874, best val: 0.6484, lr: 0.00047
iteration: 19, epoch: 152, best train: 0.874, best val: 0.6484, lr: 0.00035
iteration: 19, epoch: 153, best train: 0.874, best val: 0.6484, lr: 0.00024
iteration: 19, epoch: 154, best train: 0.882, best val: 0.6484, lr: 0.00015
iteration: 19, epoch: 155, best train: 0.882, best val: 0.6484, lr: 9e-05
iteration: 19, epoch: 156, best train: 0.882, best val: 0.6484, lr: 4e-05
iteration: 19, epoch: 157, best train: 0.89, best val: 0.6484, lr: 1e-05
iteration: 19, epoch: 158, best train: 0.89, best val: 0.6484, lr: 0.0
iteration: 19, epoch: 159, best train: 0.89, best val: 0.6484, lr: 1e-05
------------------------ Checkpoint 61  ------------------------
pre_conv.0.weight_mask 	|	active =  346 	|	total =  1728 	|	layerwise sparsity =  0.20023148148148148
layer1.0.conv1.weight_mask 	|	active =  425 	|	total =  36864 	|	layerwise sparsity =  0.011528862847222222
layer1.0.conv2.weight_mask 	|	active =  425 	|	total =  36864 	|	layerwise sparsity =  0.011528862847222222
layer1.1.conv1.weight_mask 	|	active =  425 	|	total =  36864 	|	layerwise sparsity =  0.011528862847222222
layer1.1.conv2.weight_mask 	|	active =  425 	|	total =  36864 	|	layerwise sparsity =  0.011528862847222222
layer2.0.conv1.weight_mask 	|	active =  850 	|	total =  73728 	|	layerwise sparsity =  0.011528862847222222
layer2.0.conv2.weight_mask 	|	active =  1700 	|	total =  147456 	|	layerwise sparsity =  0.011528862847222222
layer2.0.shortcut.0.weight_mask 	|	active =  1639 	|	total =  8192 	|	layerwise sparsity =  0.2000732421875
layer2.1.conv1.weight_mask 	|	active =  1700 	|	total =  147456 	|	layerwise sparsity =  0.011528862847222222
layer2.1.conv2.weight_mask 	|	active =  1700 	|	total =  147456 	|	layerwise sparsity =  0.011528862847222222
layer3.0.conv1.weight_mask 	|	active =  3400 	|	total =  294912 	|	layerwise sparsity =  0.011528862847222222
layer3.0.conv2.weight_mask 	|	active =  3058 	|	total =  589824 	|	layerwise sparsity =  0.005184597439236111
layer3.0.shortcut.0.weight_mask 	|	active =  378 	|	total =  32768 	|	layerwise sparsity =  0.01153564453125
layer3.1.conv1.weight_mask 	|	active =  3260 	|	total =  589824 	|	layerwise sparsity =  0.005527072482638889
layer3.1.conv2.weight_mask 	|	active =  3583 	|	total =  589824 	|	layerwise sparsity =  0.006074693467881944
layer4.0.conv1.weight_mask 	|	active =  10513 	|	total =  1179648 	|	layerwise sparsity =  0.008911980523003472
layer4.0.conv2.weight_mask 	|	active =  31267 	|	total =  2359296 	|	layerwise sparsity =  0.013252682156032987
layer4.0.shortcut.0.weight_mask 	|	active =  1512 	|	total =  131072 	|	layerwise sparsity =  0.01153564453125
layer4.1.conv1.weight_mask 	|	active =  34748 	|	total =  2359296 	|	layerwise sparsity =  0.014728122287326388
layer4.1.conv2.weight_mask 	|	active =  39689 	|	total =  2359296 	|	layerwise sparsity =  0.016822391086154513
------------------------ Checkpoint 62  ------------------------
remaining weight at end of iteration =  1.2639131438435869
------------------------ Checkpoint 63  ------------------------
best_val =  0.6483999999999999
