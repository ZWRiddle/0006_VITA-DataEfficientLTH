
---- experiment configuration ----
 * mode => IMP
 * dist => False
 * seed => 666
 * dset => cifar10
 * contrast_aug => False
 * color_jitter_strength => 0.5
 * color_jitter_prob => 0.8
 * gray_prob => 0.2
 * rand_aug => False
 * n_rand_aug => 4
 * auto_aug => True
 * auto_aug_policy => 2
 * custom_aug => False
 * blur => False
 * blur_sigma => [0.1, 2]
 * blur_prob => 0.5
 * cutout => False
 * cut_len => 16
 * data_root => data/
 * data_size => 1.0
 * data_size_2 => 0.02
 * long_tailed => False
 * long_tailed_type => exp
 * long_tailed_factor => 0.01
 * batch_size => 100
 * n_workers => 4
 * net => resnet18
 * in_planes => 64
 * pretrained => False
 * optim => sgd
 * lr => 0.1
 * momentum => 0.9
 * weight_decay => 0.0005
 * warmup_epochs => 0
 * lr_sched => cosine
 * multi_step_milestones => [100, 150]
 * multi_step_gamma => 0.1
 * resume => False
 * out_dir => checkpoints/08-10_07-30_SNIP+-IMP_0.02_autoaug_S3
 * load_dir => checkpoints/_SNIP+-IMP_1_autoaug
 * pruning_iters => 20
 * epochs => 160
 * rewind_type => epoch
 * rewind_epoch => 2
 * prune_type => l1
 * prune_strategy => SNIP+
 * prune_rate => 0.2
 * load_ticket => 
 * adv_prop => False
 * cos_criterion => False
 * cos_linear => False
 * tvmf_linear => False
 * attack_n_iter => 1
 * attack_eps => 0.03137254901960784
 * attack_step_size => 0.00784313725490196
 * prune_ff_only => False
----------------------------------

setting up device, distributed = False
 | cuda:0
Files already downloaded and verified
Files already downloaded and verified

------------------------ Checkpoint 1  ------------------------

2024-08-10 07:30:11.117856
setting up dataset, train: 50000, val: 10000
setting up dataset_2, train: 1000, val: 10000

starting training from scratch

------------------------ Checkpoint 2  ------------------------

2024-08-10 07:30:12.156113

prune_rate = 0.2, iters = 20, final_sparsity = 0.9884707849539315.

Initialize by SNIP+
layer-wise sparsity is [0.0, 0.00043402777777777775, 0.0005696614583333334, 0.001003689236111111, 0.0009765625, 0.001193576388888889, 0.00225830078125, 0.0003662109375, 0.002285427517361111, 0.0028279622395833335, 0.0038045247395833335, 0.005967881944444444, 0.0018310546875, 0.005896674262152778, 0.006615532769097222, 0.009435865614149306, 0.013507843017578125, 0.003570556640625, 0.014967176649305556, 0.015499114990234375, 0.0]
Layerwise Density after patching:  [0.2, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.2, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.005967881944444444, 0.01152921504606852, 0.005896674262152778, 0.006615532769097222, 0.009435865614149306, 0.013507843017578125, 0.01152921504606852, 0.014967176649305556, 0.015499114990234375, 0.0]

------------------------ Checkpoint 3  ------------------------
pruning state: 0
remaining weight at start of iteration =  99.99998207761968
iteration: 0, epoch: 0, best train: 0, best val: 0, lr: 0.1
iteration: 0, epoch: 1, best train: 0.112, best val: 0.1, lr: 0.09999
iteration: 0, epoch: 2, best train: 0.112, best val: 0.1007, lr: 0.09996
iteration: 0, epoch: 3, best train: 0.128, best val: 0.1237, lr: 0.09991
iteration: 0, epoch: 4, best train: 0.138, best val: 0.1446, lr: 0.09985
iteration: 0, epoch: 5, best train: 0.167, best val: 0.1851, lr: 0.09976
iteration: 0, epoch: 6, best train: 0.167, best val: 0.1851, lr: 0.09965
iteration: 0, epoch: 7, best train: 0.176, best val: 0.2201, lr: 0.09953
iteration: 0, epoch: 8, best train: 0.187, best val: 0.2329, lr: 0.09938
iteration: 0, epoch: 9, best train: 0.187, best val: 0.2329, lr: 0.09922
iteration: 0, epoch: 10, best train: 0.187, best val: 0.2386, lr: 0.09904
iteration: 0, epoch: 11, best train: 0.19, best val: 0.2386, lr: 0.09884
iteration: 0, epoch: 12, best train: 0.191, best val: 0.2655, lr: 0.09862
iteration: 0, epoch: 13, best train: 0.206, best val: 0.2655, lr: 0.09838
iteration: 0, epoch: 14, best train: 0.217, best val: 0.2655, lr: 0.09812
iteration: 0, epoch: 15, best train: 0.217, best val: 0.2655, lr: 0.09785
iteration: 0, epoch: 16, best train: 0.228, best val: 0.2919, lr: 0.09755
iteration: 0, epoch: 17, best train: 0.228, best val: 0.2945, lr: 0.09724
iteration: 0, epoch: 18, best train: 0.251, best val: 0.2945, lr: 0.09691
iteration: 0, epoch: 19, best train: 0.251, best val: 0.2945, lr: 0.09656
iteration: 0, epoch: 20, best train: 0.264, best val: 0.3056, lr: 0.09619
iteration: 0, epoch: 21, best train: 0.264, best val: 0.3056, lr: 0.09581
iteration: 0, epoch: 22, best train: 0.27, best val: 0.3056, lr: 0.09541
iteration: 0, epoch: 23, best train: 0.27, best val: 0.3247, lr: 0.09499
iteration: 0, epoch: 24, best train: 0.27, best val: 0.3247, lr: 0.09455
iteration: 0, epoch: 25, best train: 0.27, best val: 0.3247, lr: 0.0941
iteration: 0, epoch: 26, best train: 0.298, best val: 0.3247, lr: 0.09362
iteration: 0, epoch: 27, best train: 0.298, best val: 0.3304, lr: 0.09314
iteration: 0, epoch: 28, best train: 0.308, best val: 0.3383, lr: 0.09263
iteration: 0, epoch: 29, best train: 0.308, best val: 0.3383, lr: 0.09211
iteration: 0, epoch: 30, best train: 0.308, best val: 0.3383, lr: 0.09157
iteration: 0, epoch: 31, best train: 0.308, best val: 0.3636, lr: 0.09102
iteration: 0, epoch: 32, best train: 0.308, best val: 0.3636, lr: 0.09045
iteration: 0, epoch: 33, best train: 0.329, best val: 0.3636, lr: 0.08987
iteration: 0, epoch: 34, best train: 0.33, best val: 0.3699, lr: 0.08927
iteration: 0, epoch: 35, best train: 0.332, best val: 0.3699, lr: 0.08865
iteration: 0, epoch: 36, best train: 0.332, best val: 0.3699, lr: 0.08802
iteration: 0, epoch: 37, best train: 0.342, best val: 0.3699, lr: 0.08738
iteration: 0, epoch: 38, best train: 0.342, best val: 0.3699, lr: 0.08672
iteration: 0, epoch: 39, best train: 0.342, best val: 0.3699, lr: 0.08604
iteration: 0, epoch: 40, best train: 0.342, best val: 0.4008, lr: 0.08536
iteration: 0, epoch: 41, best train: 0.342, best val: 0.4008, lr: 0.08465
iteration: 0, epoch: 42, best train: 0.342, best val: 0.4008, lr: 0.08394
iteration: 0, epoch: 43, best train: 0.375, best val: 0.4008, lr: 0.08321
iteration: 0, epoch: 44, best train: 0.375, best val: 0.4008, lr: 0.08247
iteration: 0, epoch: 45, best train: 0.384, best val: 0.4008, lr: 0.08172
iteration: 0, epoch: 46, best train: 0.384, best val: 0.4008, lr: 0.08095
iteration: 0, epoch: 47, best train: 0.384, best val: 0.4016, lr: 0.08018
iteration: 0, epoch: 48, best train: 0.384, best val: 0.4086, lr: 0.07939
iteration: 0, epoch: 49, best train: 0.416, best val: 0.4086, lr: 0.07859
iteration: 0, epoch: 50, best train: 0.416, best val: 0.4086, lr: 0.07778
iteration: 0, epoch: 51, best train: 0.419, best val: 0.4086, lr: 0.07696
iteration: 0, epoch: 52, best train: 0.421, best val: 0.4134, lr: 0.07612
iteration: 0, epoch: 53, best train: 0.424, best val: 0.4261, lr: 0.07528
iteration: 0, epoch: 54, best train: 0.424, best val: 0.4261, lr: 0.07443
iteration: 0, epoch: 55, best train: 0.436, best val: 0.4261, lr: 0.07357
iteration: 0, epoch: 56, best train: 0.436, best val: 0.4261, lr: 0.0727
iteration: 0, epoch: 57, best train: 0.436, best val: 0.4261, lr: 0.07182
iteration: 0, epoch: 58, best train: 0.436, best val: 0.4261, lr: 0.07093
iteration: 0, epoch: 59, best train: 0.438, best val: 0.4261, lr: 0.07004
iteration: 0, epoch: 60, best train: 0.444, best val: 0.4261, lr: 0.06913
iteration: 0, epoch: 61, best train: 0.444, best val: 0.4349, lr: 0.06822
iteration: 0, epoch: 62, best train: 0.444, best val: 0.4349, lr: 0.06731
iteration: 0, epoch: 63, best train: 0.466, best val: 0.4349, lr: 0.06638
iteration: 0, epoch: 64, best train: 0.473, best val: 0.4374, lr: 0.06545
iteration: 0, epoch: 65, best train: 0.473, best val: 0.4374, lr: 0.06451
iteration: 0, epoch: 66, best train: 0.484, best val: 0.4573, lr: 0.06357
iteration: 0, epoch: 67, best train: 0.484, best val: 0.4573, lr: 0.06262
iteration: 0, epoch: 68, best train: 0.5, best val: 0.4573, lr: 0.06167
iteration: 0, epoch: 69, best train: 0.5, best val: 0.4573, lr: 0.06072
iteration: 0, epoch: 70, best train: 0.5, best val: 0.4576, lr: 0.05975
iteration: 0, epoch: 71, best train: 0.5, best val: 0.4576, lr: 0.05879
iteration: 0, epoch: 72, best train: 0.5, best val: 0.4576, lr: 0.05782
iteration: 0, epoch: 73, best train: 0.5, best val: 0.4576, lr: 0.05685
iteration: 0, epoch: 74, best train: 0.518, best val: 0.4576, lr: 0.05588
iteration: 0, epoch: 75, best train: 0.518, best val: 0.4576, lr: 0.0549
iteration: 0, epoch: 76, best train: 0.518, best val: 0.4629, lr: 0.05392
iteration: 0, epoch: 77, best train: 0.518, best val: 0.4629, lr: 0.05294
iteration: 0, epoch: 78, best train: 0.542, best val: 0.4629, lr: 0.05196
iteration: 0, epoch: 79, best train: 0.542, best val: 0.4629, lr: 0.05098
iteration: 0, epoch: 80, best train: 0.542, best val: 0.4629, lr: 0.05
iteration: 0, epoch: 81, best train: 0.542, best val: 0.4629, lr: 0.04902
iteration: 0, epoch: 82, best train: 0.542, best val: 0.4629, lr: 0.04804
iteration: 0, epoch: 83, best train: 0.544, best val: 0.4629, lr: 0.04706
iteration: 0, epoch: 84, best train: 0.55, best val: 0.4629, lr: 0.04608
iteration: 0, epoch: 85, best train: 0.563, best val: 0.4796, lr: 0.0451
iteration: 0, epoch: 86, best train: 0.563, best val: 0.4796, lr: 0.04412
iteration: 0, epoch: 87, best train: 0.583, best val: 0.4796, lr: 0.04315
iteration: 0, epoch: 88, best train: 0.583, best val: 0.4803, lr: 0.04218
iteration: 0, epoch: 89, best train: 0.615, best val: 0.4803, lr: 0.04121
iteration: 0, epoch: 90, best train: 0.615, best val: 0.4803, lr: 0.04025
iteration: 0, epoch: 91, best train: 0.615, best val: 0.4825, lr: 0.03928
iteration: 0, epoch: 92, best train: 0.615, best val: 0.4856, lr: 0.03833
iteration: 0, epoch: 93, best train: 0.615, best val: 0.4856, lr: 0.03738
iteration: 0, epoch: 94, best train: 0.615, best val: 0.4856, lr: 0.03643
iteration: 0, epoch: 95, best train: 0.615, best val: 0.4856, lr: 0.03549
iteration: 0, epoch: 96, best train: 0.615, best val: 0.4856, lr: 0.03455
iteration: 0, epoch: 97, best train: 0.625, best val: 0.4889, lr: 0.03362
iteration: 0, epoch: 98, best train: 0.63, best val: 0.4912, lr: 0.03269
iteration: 0, epoch: 99, best train: 0.646, best val: 0.5066, lr: 0.03178
iteration: 0, epoch: 100, best train: 0.646, best val: 0.5066, lr: 0.03087
iteration: 0, epoch: 101, best train: 0.657, best val: 0.5066, lr: 0.02996
iteration: 0, epoch: 102, best train: 0.657, best val: 0.5066, lr: 0.02907
iteration: 0, epoch: 103, best train: 0.664, best val: 0.5066, lr: 0.02818
iteration: 0, epoch: 104, best train: 0.682, best val: 0.5066, lr: 0.0273
iteration: 0, epoch: 105, best train: 0.682, best val: 0.5066, lr: 0.02643
iteration: 0, epoch: 106, best train: 0.682, best val: 0.5066, lr: 0.02557
iteration: 0, epoch: 107, best train: 0.682, best val: 0.5066, lr: 0.02472
iteration: 0, epoch: 108, best train: 0.682, best val: 0.5094, lr: 0.02388
iteration: 0, epoch: 109, best train: 0.682, best val: 0.5094, lr: 0.02304
iteration: 0, epoch: 110, best train: 0.696, best val: 0.5094, lr: 0.02222
iteration: 0, epoch: 111, best train: 0.698, best val: 0.5111, lr: 0.02141
iteration: 0, epoch: 112, best train: 0.698, best val: 0.5216, lr: 0.02061
iteration: 0, epoch: 113, best train: 0.721, best val: 0.5216, lr: 0.01982
iteration: 0, epoch: 114, best train: 0.721, best val: 0.5216, lr: 0.01905
iteration: 0, epoch: 115, best train: 0.721, best val: 0.5241, lr: 0.01828
iteration: 0, epoch: 116, best train: 0.724, best val: 0.5241, lr: 0.01753
iteration: 0, epoch: 117, best train: 0.73, best val: 0.5241, lr: 0.01679
iteration: 0, epoch: 118, best train: 0.759, best val: 0.5241, lr: 0.01606
iteration: 0, epoch: 119, best train: 0.759, best val: 0.5241, lr: 0.01535
iteration: 0, epoch: 120, best train: 0.759, best val: 0.5241, lr: 0.01464
iteration: 0, epoch: 121, best train: 0.789, best val: 0.5404, lr: 0.01396
iteration: 0, epoch: 122, best train: 0.789, best val: 0.5404, lr: 0.01328
iteration: 0, epoch: 123, best train: 0.789, best val: 0.5404, lr: 0.01262
iteration: 0, epoch: 124, best train: 0.789, best val: 0.5404, lr: 0.01198
iteration: 0, epoch: 125, best train: 0.789, best val: 0.5404, lr: 0.01135
iteration: 0, epoch: 126, best train: 0.789, best val: 0.5404, lr: 0.01073
iteration: 0, epoch: 127, best train: 0.789, best val: 0.5404, lr: 0.01013
iteration: 0, epoch: 128, best train: 0.795, best val: 0.5404, lr: 0.00955
iteration: 0, epoch: 129, best train: 0.795, best val: 0.5404, lr: 0.00898
iteration: 0, epoch: 130, best train: 0.812, best val: 0.5404, lr: 0.00843
iteration: 0, epoch: 131, best train: 0.812, best val: 0.5454, lr: 0.00789
iteration: 0, epoch: 132, best train: 0.812, best val: 0.5454, lr: 0.00737
iteration: 0, epoch: 133, best train: 0.812, best val: 0.5461, lr: 0.00686
iteration: 0, epoch: 134, best train: 0.815, best val: 0.5461, lr: 0.00638
iteration: 0, epoch: 135, best train: 0.817, best val: 0.5461, lr: 0.0059
iteration: 0, epoch: 136, best train: 0.817, best val: 0.5461, lr: 0.00545
iteration: 0, epoch: 137, best train: 0.829, best val: 0.5461, lr: 0.00501
iteration: 0, epoch: 138, best train: 0.836, best val: 0.5479, lr: 0.00459
iteration: 0, epoch: 139, best train: 0.836, best val: 0.5479, lr: 0.00419
iteration: 0, epoch: 140, best train: 0.836, best val: 0.551, lr: 0.00381
iteration: 0, epoch: 141, best train: 0.836, best val: 0.553, lr: 0.00344
iteration: 0, epoch: 142, best train: 0.836, best val: 0.555, lr: 0.00309
iteration: 0, epoch: 143, best train: 0.836, best val: 0.555, lr: 0.00276
iteration: 0, epoch: 144, best train: 0.836, best val: 0.5558, lr: 0.00245
iteration: 0, epoch: 145, best train: 0.836, best val: 0.5587, lr: 0.00215
iteration: 0, epoch: 146, best train: 0.836, best val: 0.5587, lr: 0.00188
iteration: 0, epoch: 147, best train: 0.836, best val: 0.5587, lr: 0.00162
iteration: 0, epoch: 148, best train: 0.836, best val: 0.5587, lr: 0.00138
iteration: 0, epoch: 149, best train: 0.836, best val: 0.5587, lr: 0.00116
iteration: 0, epoch: 150, best train: 0.836, best val: 0.5587, lr: 0.00096
iteration: 0, epoch: 151, best train: 0.84, best val: 0.5587, lr: 0.00078
iteration: 0, epoch: 152, best train: 0.84, best val: 0.5587, lr: 0.00062
iteration: 0, epoch: 153, best train: 0.84, best val: 0.5587, lr: 0.00047
iteration: 0, epoch: 154, best train: 0.842, best val: 0.5587, lr: 0.00035
iteration: 0, epoch: 155, best train: 0.842, best val: 0.5587, lr: 0.00024
iteration: 0, epoch: 156, best train: 0.859, best val: 0.5587, lr: 0.00015
iteration: 0, epoch: 157, best train: 0.859, best val: 0.5587, lr: 9e-05
iteration: 0, epoch: 158, best train: 0.859, best val: 0.5587, lr: 4e-05
iteration: 0, epoch: 159, best train: 0.859, best val: 0.5587, lr: 1e-05
------------------------ Checkpoint 4  ------------------------
pre_conv.0.weight_mask 	|	active =  1594 	|	total =  1728 	|	layerwise sparsity =  0.9224537037037037
layer1.0.conv1.weight_mask 	|	active =  29491 	|	total =  36864 	|	layerwise sparsity =  0.7999945746527778
layer1.0.conv2.weight_mask 	|	active =  29491 	|	total =  36864 	|	layerwise sparsity =  0.7999945746527778
layer1.1.conv1.weight_mask 	|	active =  29491 	|	total =  36864 	|	layerwise sparsity =  0.7999945746527778
layer1.1.conv2.weight_mask 	|	active =  29491 	|	total =  36864 	|	layerwise sparsity =  0.7999945746527778
layer2.0.conv1.weight_mask 	|	active =  58982 	|	total =  73728 	|	layerwise sparsity =  0.7999945746527778
layer2.0.conv2.weight_mask 	|	active =  117965 	|	total =  147456 	|	layerwise sparsity =  0.8000013563368056
layer2.0.shortcut.0.weight_mask 	|	active =  7559 	|	total =  8192 	|	layerwise sparsity =  0.9227294921875
layer2.1.conv1.weight_mask 	|	active =  117965 	|	total =  147456 	|	layerwise sparsity =  0.8000013563368056
layer2.1.conv2.weight_mask 	|	active =  117965 	|	total =  147456 	|	layerwise sparsity =  0.8000013563368056
layer3.0.conv1.weight_mask 	|	active =  235930 	|	total =  294912 	|	layerwise sparsity =  0.8000013563368056
layer3.0.conv2.weight_mask 	|	active =  456576 	|	total =  589824 	|	layerwise sparsity =  0.7740885416666666
layer3.0.shortcut.0.weight_mask 	|	active =  26214 	|	total =  32768 	|	layerwise sparsity =  0.79998779296875
layer3.1.conv1.weight_mask 	|	active =  456302 	|	total =  589824 	|	layerwise sparsity =  0.7736239963107638
layer3.1.conv2.weight_mask 	|	active =  458934 	|	total =  589824 	|	layerwise sparsity =  0.7780863444010416
layer4.0.conv1.weight_mask 	|	active =  934311 	|	total =  1179648 	|	layerwise sparsity =  0.7920252482096354
layer4.0.conv2.weight_mask 	|	active =  1902443 	|	total =  2359296 	|	layerwise sparsity =  0.8063604566786025
layer4.0.shortcut.0.weight_mask 	|	active =  104858 	|	total =  131072 	|	layerwise sparsity =  0.8000030517578125
layer4.1.conv1.weight_mask 	|	active =  1912227 	|	total =  2359296 	|	layerwise sparsity =  0.8105074564615885
layer4.1.conv2.weight_mask 	|	active =  1915569 	|	total =  2359296 	|	layerwise sparsity =  0.8119239807128906
------------------------ Checkpoint 5  ------------------------
best_val =  0.5587
------------------------ Checkpoint 6  ------------------------
pruning state: 1
remaining weight at start of iteration =  80.14313171372368
iteration: 1, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 1, epoch: 1, best train: 0.163, best val: 0.1949, lr: 0.09991
iteration: 1, epoch: 2, best train: 0.178, best val: 0.2095, lr: 0.09985
iteration: 1, epoch: 3, best train: 0.178, best val: 0.2512, lr: 0.09976
iteration: 1, epoch: 4, best train: 0.2, best val: 0.2512, lr: 0.09965
iteration: 1, epoch: 5, best train: 0.2, best val: 0.2512, lr: 0.09953
iteration: 1, epoch: 6, best train: 0.229, best val: 0.2512, lr: 0.09938
iteration: 1, epoch: 7, best train: 0.256, best val: 0.2886, lr: 0.09922
iteration: 1, epoch: 8, best train: 0.263, best val: 0.303, lr: 0.09904
iteration: 1, epoch: 9, best train: 0.277, best val: 0.303, lr: 0.09884
iteration: 1, epoch: 10, best train: 0.277, best val: 0.3239, lr: 0.09862
iteration: 1, epoch: 11, best train: 0.284, best val: 0.3239, lr: 0.09838
iteration: 1, epoch: 12, best train: 0.323, best val: 0.3395, lr: 0.09812
iteration: 1, epoch: 13, best train: 0.323, best val: 0.3454, lr: 0.09785
iteration: 1, epoch: 14, best train: 0.327, best val: 0.3454, lr: 0.09755
iteration: 1, epoch: 15, best train: 0.351, best val: 0.3454, lr: 0.09724
iteration: 1, epoch: 16, best train: 0.351, best val: 0.3454, lr: 0.09691
iteration: 1, epoch: 17, best train: 0.368, best val: 0.3455, lr: 0.09656
iteration: 1, epoch: 18, best train: 0.368, best val: 0.3455, lr: 0.09619
iteration: 1, epoch: 19, best train: 0.368, best val: 0.3954, lr: 0.09581
iteration: 1, epoch: 20, best train: 0.388, best val: 0.3987, lr: 0.09541
iteration: 1, epoch: 21, best train: 0.388, best val: 0.3987, lr: 0.09499
iteration: 1, epoch: 22, best train: 0.389, best val: 0.3987, lr: 0.09455
iteration: 1, epoch: 23, best train: 0.389, best val: 0.3987, lr: 0.0941
iteration: 1, epoch: 24, best train: 0.396, best val: 0.4238, lr: 0.09362
iteration: 1, epoch: 25, best train: 0.408, best val: 0.4238, lr: 0.09314
iteration: 1, epoch: 26, best train: 0.42, best val: 0.4238, lr: 0.09263
iteration: 1, epoch: 27, best train: 0.424, best val: 0.4238, lr: 0.09211
iteration: 1, epoch: 28, best train: 0.439, best val: 0.4238, lr: 0.09157
iteration: 1, epoch: 29, best train: 0.439, best val: 0.4275, lr: 0.09102
iteration: 1, epoch: 30, best train: 0.439, best val: 0.4275, lr: 0.09045
iteration: 1, epoch: 31, best train: 0.458, best val: 0.4462, lr: 0.08987
iteration: 1, epoch: 32, best train: 0.462, best val: 0.4462, lr: 0.08927
iteration: 1, epoch: 33, best train: 0.485, best val: 0.4488, lr: 0.08865
iteration: 1, epoch: 34, best train: 0.485, best val: 0.4488, lr: 0.08802
iteration: 1, epoch: 35, best train: 0.485, best val: 0.4488, lr: 0.08738
iteration: 1, epoch: 36, best train: 0.485, best val: 0.4488, lr: 0.08672
iteration: 1, epoch: 37, best train: 0.505, best val: 0.4488, lr: 0.08604
iteration: 1, epoch: 38, best train: 0.53, best val: 0.4488, lr: 0.08536
iteration: 1, epoch: 39, best train: 0.53, best val: 0.4488, lr: 0.08465
iteration: 1, epoch: 40, best train: 0.53, best val: 0.4488, lr: 0.08394
iteration: 1, epoch: 41, best train: 0.53, best val: 0.4488, lr: 0.08321
iteration: 1, epoch: 42, best train: 0.53, best val: 0.4488, lr: 0.08247
iteration: 1, epoch: 43, best train: 0.546, best val: 0.4488, lr: 0.08172
iteration: 1, epoch: 44, best train: 0.546, best val: 0.4488, lr: 0.08095
iteration: 1, epoch: 45, best train: 0.546, best val: 0.4668, lr: 0.08018
iteration: 1, epoch: 46, best train: 0.553, best val: 0.4668, lr: 0.07939
iteration: 1, epoch: 47, best train: 0.553, best val: 0.4668, lr: 0.07859
iteration: 1, epoch: 48, best train: 0.554, best val: 0.4668, lr: 0.07778
iteration: 1, epoch: 49, best train: 0.579, best val: 0.4668, lr: 0.07696
iteration: 1, epoch: 50, best train: 0.579, best val: 0.4874, lr: 0.07612
iteration: 1, epoch: 51, best train: 0.597, best val: 0.4874, lr: 0.07528
iteration: 1, epoch: 52, best train: 0.597, best val: 0.4874, lr: 0.07443
iteration: 1, epoch: 53, best train: 0.597, best val: 0.4874, lr: 0.07357
iteration: 1, epoch: 54, best train: 0.598, best val: 0.4874, lr: 0.0727
iteration: 1, epoch: 55, best train: 0.598, best val: 0.4874, lr: 0.07182
iteration: 1, epoch: 56, best train: 0.605, best val: 0.4874, lr: 0.07093
iteration: 1, epoch: 57, best train: 0.609, best val: 0.5017, lr: 0.07004
iteration: 1, epoch: 58, best train: 0.621, best val: 0.5017, lr: 0.06913
iteration: 1, epoch: 59, best train: 0.621, best val: 0.5017, lr: 0.06822
iteration: 1, epoch: 60, best train: 0.662, best val: 0.5076, lr: 0.06731
iteration: 1, epoch: 61, best train: 0.662, best val: 0.5076, lr: 0.06638
iteration: 1, epoch: 62, best train: 0.671, best val: 0.5076, lr: 0.06545
iteration: 1, epoch: 63, best train: 0.671, best val: 0.5076, lr: 0.06451
iteration: 1, epoch: 64, best train: 0.671, best val: 0.5076, lr: 0.06357
iteration: 1, epoch: 65, best train: 0.671, best val: 0.5076, lr: 0.06262
iteration: 1, epoch: 66, best train: 0.688, best val: 0.5109, lr: 0.06167
iteration: 1, epoch: 67, best train: 0.688, best val: 0.5109, lr: 0.06072
iteration: 1, epoch: 68, best train: 0.688, best val: 0.5109, lr: 0.05975
iteration: 1, epoch: 69, best train: 0.688, best val: 0.5109, lr: 0.05879
iteration: 1, epoch: 70, best train: 0.688, best val: 0.5215, lr: 0.05782
iteration: 1, epoch: 71, best train: 0.688, best val: 0.5215, lr: 0.05685
iteration: 1, epoch: 72, best train: 0.708, best val: 0.5215, lr: 0.05588
iteration: 1, epoch: 73, best train: 0.708, best val: 0.5215, lr: 0.0549
iteration: 1, epoch: 74, best train: 0.708, best val: 0.5392, lr: 0.05392
iteration: 1, epoch: 75, best train: 0.708, best val: 0.5392, lr: 0.05294
iteration: 1, epoch: 76, best train: 0.726, best val: 0.5392, lr: 0.05196
iteration: 1, epoch: 77, best train: 0.726, best val: 0.5392, lr: 0.05098
iteration: 1, epoch: 78, best train: 0.726, best val: 0.5442, lr: 0.05
iteration: 1, epoch: 79, best train: 0.738, best val: 0.5442, lr: 0.04902
iteration: 1, epoch: 80, best train: 0.738, best val: 0.5442, lr: 0.04804
iteration: 1, epoch: 81, best train: 0.738, best val: 0.5442, lr: 0.04706
iteration: 1, epoch: 82, best train: 0.738, best val: 0.5442, lr: 0.04608
iteration: 1, epoch: 83, best train: 0.738, best val: 0.5442, lr: 0.0451
iteration: 1, epoch: 84, best train: 0.773, best val: 0.5442, lr: 0.04412
iteration: 1, epoch: 85, best train: 0.773, best val: 0.5551, lr: 0.04315
iteration: 1, epoch: 86, best train: 0.773, best val: 0.5551, lr: 0.04218
iteration: 1, epoch: 87, best train: 0.773, best val: 0.5551, lr: 0.04121
iteration: 1, epoch: 88, best train: 0.773, best val: 0.5551, lr: 0.04025
iteration: 1, epoch: 89, best train: 0.773, best val: 0.5551, lr: 0.03928
iteration: 1, epoch: 90, best train: 0.809, best val: 0.5551, lr: 0.03833
iteration: 1, epoch: 91, best train: 0.809, best val: 0.5551, lr: 0.03738
iteration: 1, epoch: 92, best train: 0.809, best val: 0.5551, lr: 0.03643
iteration: 1, epoch: 93, best train: 0.809, best val: 0.5551, lr: 0.03549
iteration: 1, epoch: 94, best train: 0.809, best val: 0.5552, lr: 0.03455
iteration: 1, epoch: 95, best train: 0.824, best val: 0.5552, lr: 0.03362
iteration: 1, epoch: 96, best train: 0.824, best val: 0.5552, lr: 0.03269
iteration: 1, epoch: 97, best train: 0.824, best val: 0.5552, lr: 0.03178
iteration: 1, epoch: 98, best train: 0.824, best val: 0.5552, lr: 0.03087
iteration: 1, epoch: 99, best train: 0.824, best val: 0.5552, lr: 0.02996
iteration: 1, epoch: 100, best train: 0.834, best val: 0.5558, lr: 0.02907
iteration: 1, epoch: 101, best train: 0.834, best val: 0.5558, lr: 0.02818
iteration: 1, epoch: 102, best train: 0.834, best val: 0.5558, lr: 0.0273
iteration: 1, epoch: 103, best train: 0.834, best val: 0.5558, lr: 0.02643
iteration: 1, epoch: 104, best train: 0.834, best val: 0.5558, lr: 0.02557
iteration: 1, epoch: 105, best train: 0.836, best val: 0.5558, lr: 0.02472
iteration: 1, epoch: 106, best train: 0.836, best val: 0.5626, lr: 0.02388
iteration: 1, epoch: 107, best train: 0.841, best val: 0.5709, lr: 0.02304
iteration: 1, epoch: 108, best train: 0.841, best val: 0.5709, lr: 0.02222
iteration: 1, epoch: 109, best train: 0.855, best val: 0.5709, lr: 0.02141
iteration: 1, epoch: 110, best train: 0.855, best val: 0.5709, lr: 0.02061
iteration: 1, epoch: 111, best train: 0.855, best val: 0.5709, lr: 0.01982
iteration: 1, epoch: 112, best train: 0.865, best val: 0.5717, lr: 0.01905
iteration: 1, epoch: 113, best train: 0.865, best val: 0.5717, lr: 0.01828
iteration: 1, epoch: 114, best train: 0.878, best val: 0.5717, lr: 0.01753
iteration: 1, epoch: 115, best train: 0.878, best val: 0.5725, lr: 0.01679
iteration: 1, epoch: 116, best train: 0.878, best val: 0.5725, lr: 0.01606
iteration: 1, epoch: 117, best train: 0.878, best val: 0.5725, lr: 0.01535
iteration: 1, epoch: 118, best train: 0.878, best val: 0.5751, lr: 0.01464
iteration: 1, epoch: 119, best train: 0.878, best val: 0.5751, lr: 0.01396
iteration: 1, epoch: 120, best train: 0.881, best val: 0.58, lr: 0.01328
iteration: 1, epoch: 121, best train: 0.881, best val: 0.5879, lr: 0.01262
iteration: 1, epoch: 122, best train: 0.887, best val: 0.5879, lr: 0.01198
iteration: 1, epoch: 123, best train: 0.887, best val: 0.5879, lr: 0.01135
iteration: 1, epoch: 124, best train: 0.887, best val: 0.5879, lr: 0.01073
iteration: 1, epoch: 125, best train: 0.887, best val: 0.5879, lr: 0.01013
iteration: 1, epoch: 126, best train: 0.887, best val: 0.5879, lr: 0.00955
iteration: 1, epoch: 127, best train: 0.887, best val: 0.5879, lr: 0.00898
iteration: 1, epoch: 128, best train: 0.913, best val: 0.5888, lr: 0.00843
iteration: 1, epoch: 129, best train: 0.913, best val: 0.5888, lr: 0.00789
iteration: 1, epoch: 130, best train: 0.913, best val: 0.5888, lr: 0.00737
iteration: 1, epoch: 131, best train: 0.913, best val: 0.5888, lr: 0.00686
iteration: 1, epoch: 132, best train: 0.913, best val: 0.5895, lr: 0.00638
iteration: 1, epoch: 133, best train: 0.913, best val: 0.5895, lr: 0.0059
iteration: 1, epoch: 134, best train: 0.913, best val: 0.5895, lr: 0.00545
iteration: 1, epoch: 135, best train: 0.913, best val: 0.5911, lr: 0.00501
iteration: 1, epoch: 136, best train: 0.913, best val: 0.5911, lr: 0.00459
iteration: 1, epoch: 137, best train: 0.913, best val: 0.5911, lr: 0.00419
iteration: 1, epoch: 138, best train: 0.913, best val: 0.5924, lr: 0.00381
iteration: 1, epoch: 139, best train: 0.913, best val: 0.5924, lr: 0.00344
iteration: 1, epoch: 140, best train: 0.913, best val: 0.5924, lr: 0.00309
iteration: 1, epoch: 141, best train: 0.913, best val: 0.5924, lr: 0.00276
iteration: 1, epoch: 142, best train: 0.913, best val: 0.5924, lr: 0.00245
iteration: 1, epoch: 143, best train: 0.914, best val: 0.5925, lr: 0.00215
iteration: 1, epoch: 144, best train: 0.914, best val: 0.5925, lr: 0.00188
iteration: 1, epoch: 145, best train: 0.917, best val: 0.5925, lr: 0.00162
iteration: 1, epoch: 146, best train: 0.917, best val: 0.5925, lr: 0.00138
iteration: 1, epoch: 147, best train: 0.917, best val: 0.5925, lr: 0.00116
iteration: 1, epoch: 148, best train: 0.917, best val: 0.5925, lr: 0.00096
iteration: 1, epoch: 149, best train: 0.917, best val: 0.5925, lr: 0.00078
iteration: 1, epoch: 150, best train: 0.917, best val: 0.5925, lr: 0.00062
iteration: 1, epoch: 151, best train: 0.917, best val: 0.5925, lr: 0.00047
iteration: 1, epoch: 152, best train: 0.917, best val: 0.5925, lr: 0.00035
iteration: 1, epoch: 153, best train: 0.917, best val: 0.5925, lr: 0.00024
iteration: 1, epoch: 154, best train: 0.917, best val: 0.5925, lr: 0.00015
iteration: 1, epoch: 155, best train: 0.917, best val: 0.5925, lr: 9e-05
iteration: 1, epoch: 156, best train: 0.918, best val: 0.5925, lr: 4e-05
iteration: 1, epoch: 157, best train: 0.922, best val: 0.5925, lr: 1e-05
iteration: 1, epoch: 158, best train: 0.922, best val: 0.5925, lr: 0.0
iteration: 1, epoch: 159, best train: 0.922, best val: 0.5925, lr: 1e-05
------------------------ Checkpoint 7  ------------------------
pre_conv.0.weight_mask 	|	active =  1471 	|	total =  1728 	|	layerwise sparsity =  0.8512731481481481
layer1.0.conv1.weight_mask 	|	active =  23593 	|	total =  36864 	|	layerwise sparsity =  0.6400010850694444
layer1.0.conv2.weight_mask 	|	active =  23593 	|	total =  36864 	|	layerwise sparsity =  0.6400010850694444
layer1.1.conv1.weight_mask 	|	active =  23593 	|	total =  36864 	|	layerwise sparsity =  0.6400010850694444
layer1.1.conv2.weight_mask 	|	active =  23593 	|	total =  36864 	|	layerwise sparsity =  0.6400010850694444
layer2.0.conv1.weight_mask 	|	active =  47186 	|	total =  73728 	|	layerwise sparsity =  0.6400010850694444
layer2.0.conv2.weight_mask 	|	active =  94372 	|	total =  147456 	|	layerwise sparsity =  0.6400010850694444
layer2.0.shortcut.0.weight_mask 	|	active =  6975 	|	total =  8192 	|	layerwise sparsity =  0.8514404296875
layer2.1.conv1.weight_mask 	|	active =  94372 	|	total =  147456 	|	layerwise sparsity =  0.6400010850694444
layer2.1.conv2.weight_mask 	|	active =  94372 	|	total =  147456 	|	layerwise sparsity =  0.6400010850694444
layer3.0.conv1.weight_mask 	|	active =  188744 	|	total =  294912 	|	layerwise sparsity =  0.6400010850694444
layer3.0.conv2.weight_mask 	|	active =  353431 	|	total =  589824 	|	layerwise sparsity =  0.5992143419053819
layer3.0.shortcut.0.weight_mask 	|	active =  20971 	|	total =  32768 	|	layerwise sparsity =  0.639984130859375
layer3.1.conv1.weight_mask 	|	active =  353007 	|	total =  589824 	|	layerwise sparsity =  0.5984954833984375
layer3.1.conv2.weight_mask 	|	active =  357091 	|	total =  589824 	|	layerwise sparsity =  0.6054195827907987
layer4.0.conv1.weight_mask 	|	active =  739998 	|	total =  1179648 	|	layerwise sparsity =  0.6273040771484375
layer4.0.conv2.weight_mask 	|	active =  1534055 	|	total =  2359296 	|	layerwise sparsity =  0.65021726820204
layer4.0.shortcut.0.weight_mask 	|	active =  83886 	|	total =  131072 	|	layerwise sparsity =  0.6399993896484375
layer4.1.conv1.weight_mask 	|	active =  1549874 	|	total =  2359296 	|	layerwise sparsity =  0.6569222344292535
layer4.1.conv2.weight_mask 	|	active =  1555296 	|	total =  2359296 	|	layerwise sparsity =  0.6592203776041666
------------------------ Checkpoint 8  ------------------------
best_val =  0.5925
------------------------ Checkpoint 9  ------------------------
pruning state: 2
remaining weight at start of iteration =  64.24701090540998
iteration: 2, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 2, epoch: 1, best train: 0.202, best val: 0.1919, lr: 0.09991
iteration: 2, epoch: 2, best train: 0.206, best val: 0.252, lr: 0.09985
iteration: 2, epoch: 3, best train: 0.227, best val: 0.2625, lr: 0.09976
iteration: 2, epoch: 4, best train: 0.279, best val: 0.2986, lr: 0.09965
iteration: 2, epoch: 5, best train: 0.303, best val: 0.3329, lr: 0.09953
iteration: 2, epoch: 6, best train: 0.326, best val: 0.3329, lr: 0.09938
iteration: 2, epoch: 7, best train: 0.353, best val: 0.3804, lr: 0.09922
iteration: 2, epoch: 8, best train: 0.387, best val: 0.3804, lr: 0.09904
iteration: 2, epoch: 9, best train: 0.409, best val: 0.3804, lr: 0.09884
iteration: 2, epoch: 10, best train: 0.409, best val: 0.3859, lr: 0.09862
iteration: 2, epoch: 11, best train: 0.437, best val: 0.3859, lr: 0.09838
iteration: 2, epoch: 12, best train: 0.437, best val: 0.3991, lr: 0.09812
iteration: 2, epoch: 13, best train: 0.466, best val: 0.3991, lr: 0.09785
iteration: 2, epoch: 14, best train: 0.466, best val: 0.3991, lr: 0.09755
iteration: 2, epoch: 15, best train: 0.466, best val: 0.4377, lr: 0.09724
iteration: 2, epoch: 16, best train: 0.466, best val: 0.4377, lr: 0.09691
iteration: 2, epoch: 17, best train: 0.49, best val: 0.4377, lr: 0.09656
iteration: 2, epoch: 18, best train: 0.49, best val: 0.4377, lr: 0.09619
iteration: 2, epoch: 19, best train: 0.533, best val: 0.4576, lr: 0.09581
iteration: 2, epoch: 20, best train: 0.564, best val: 0.4576, lr: 0.09541
iteration: 2, epoch: 21, best train: 0.564, best val: 0.4576, lr: 0.09499
iteration: 2, epoch: 22, best train: 0.564, best val: 0.4576, lr: 0.09455
iteration: 2, epoch: 23, best train: 0.565, best val: 0.4755, lr: 0.0941
iteration: 2, epoch: 24, best train: 0.574, best val: 0.5028, lr: 0.09362
iteration: 2, epoch: 25, best train: 0.624, best val: 0.5028, lr: 0.09314
iteration: 2, epoch: 26, best train: 0.624, best val: 0.5028, lr: 0.09263
iteration: 2, epoch: 27, best train: 0.624, best val: 0.5028, lr: 0.09211
iteration: 2, epoch: 28, best train: 0.624, best val: 0.5028, lr: 0.09157
iteration: 2, epoch: 29, best train: 0.624, best val: 0.5028, lr: 0.09102
iteration: 2, epoch: 30, best train: 0.624, best val: 0.5097, lr: 0.09045
iteration: 2, epoch: 31, best train: 0.639, best val: 0.5097, lr: 0.08987
iteration: 2, epoch: 32, best train: 0.648, best val: 0.5097, lr: 0.08927
iteration: 2, epoch: 33, best train: 0.648, best val: 0.5097, lr: 0.08865
iteration: 2, epoch: 34, best train: 0.664, best val: 0.5097, lr: 0.08802
iteration: 2, epoch: 35, best train: 0.664, best val: 0.5097, lr: 0.08738
iteration: 2, epoch: 36, best train: 0.664, best val: 0.5097, lr: 0.08672
iteration: 2, epoch: 37, best train: 0.671, best val: 0.5097, lr: 0.08604
iteration: 2, epoch: 38, best train: 0.685, best val: 0.5097, lr: 0.08536
iteration: 2, epoch: 39, best train: 0.685, best val: 0.5097, lr: 0.08465
iteration: 2, epoch: 40, best train: 0.685, best val: 0.5097, lr: 0.08394
iteration: 2, epoch: 41, best train: 0.689, best val: 0.5097, lr: 0.08321
iteration: 2, epoch: 42, best train: 0.707, best val: 0.5097, lr: 0.08247
iteration: 2, epoch: 43, best train: 0.718, best val: 0.5154, lr: 0.08172
iteration: 2, epoch: 44, best train: 0.718, best val: 0.5164, lr: 0.08095
iteration: 2, epoch: 45, best train: 0.718, best val: 0.5164, lr: 0.08018
iteration: 2, epoch: 46, best train: 0.73, best val: 0.5164, lr: 0.07939
iteration: 2, epoch: 47, best train: 0.73, best val: 0.5281, lr: 0.07859
iteration: 2, epoch: 48, best train: 0.734, best val: 0.5281, lr: 0.07778
iteration: 2, epoch: 49, best train: 0.751, best val: 0.5281, lr: 0.07696
iteration: 2, epoch: 50, best train: 0.758, best val: 0.5281, lr: 0.07612
iteration: 2, epoch: 51, best train: 0.762, best val: 0.5281, lr: 0.07528
iteration: 2, epoch: 52, best train: 0.762, best val: 0.5281, lr: 0.07443
iteration: 2, epoch: 53, best train: 0.763, best val: 0.5309, lr: 0.07357
iteration: 2, epoch: 54, best train: 0.763, best val: 0.5309, lr: 0.0727
iteration: 2, epoch: 55, best train: 0.782, best val: 0.5309, lr: 0.07182
iteration: 2, epoch: 56, best train: 0.782, best val: 0.5309, lr: 0.07093
iteration: 2, epoch: 57, best train: 0.782, best val: 0.5309, lr: 0.07004
iteration: 2, epoch: 58, best train: 0.782, best val: 0.5357, lr: 0.06913
iteration: 2, epoch: 59, best train: 0.782, best val: 0.5357, lr: 0.06822
iteration: 2, epoch: 60, best train: 0.782, best val: 0.5388, lr: 0.06731
iteration: 2, epoch: 61, best train: 0.796, best val: 0.5569, lr: 0.06638
iteration: 2, epoch: 62, best train: 0.796, best val: 0.5569, lr: 0.06545
iteration: 2, epoch: 63, best train: 0.796, best val: 0.5569, lr: 0.06451
iteration: 2, epoch: 64, best train: 0.796, best val: 0.5569, lr: 0.06357
iteration: 2, epoch: 65, best train: 0.798, best val: 0.5569, lr: 0.06262
iteration: 2, epoch: 66, best train: 0.814, best val: 0.5569, lr: 0.06167
iteration: 2, epoch: 67, best train: 0.814, best val: 0.5569, lr: 0.06072
iteration: 2, epoch: 68, best train: 0.815, best val: 0.5569, lr: 0.05975
iteration: 2, epoch: 69, best train: 0.815, best val: 0.5569, lr: 0.05879
iteration: 2, epoch: 70, best train: 0.815, best val: 0.5666, lr: 0.05782
iteration: 2, epoch: 71, best train: 0.818, best val: 0.5666, lr: 0.05685
iteration: 2, epoch: 72, best train: 0.818, best val: 0.5762, lr: 0.05588
iteration: 2, epoch: 73, best train: 0.831, best val: 0.5762, lr: 0.0549
iteration: 2, epoch: 74, best train: 0.831, best val: 0.5762, lr: 0.05392
iteration: 2, epoch: 75, best train: 0.831, best val: 0.5762, lr: 0.05294
iteration: 2, epoch: 76, best train: 0.831, best val: 0.5762, lr: 0.05196
iteration: 2, epoch: 77, best train: 0.832, best val: 0.5762, lr: 0.05098
iteration: 2, epoch: 78, best train: 0.845, best val: 0.5762, lr: 0.05
iteration: 2, epoch: 79, best train: 0.845, best val: 0.5762, lr: 0.04902
iteration: 2, epoch: 80, best train: 0.845, best val: 0.5762, lr: 0.04804
iteration: 2, epoch: 81, best train: 0.845, best val: 0.5762, lr: 0.04706
iteration: 2, epoch: 82, best train: 0.849, best val: 0.5762, lr: 0.04608
iteration: 2, epoch: 83, best train: 0.861, best val: 0.5802, lr: 0.0451
iteration: 2, epoch: 84, best train: 0.861, best val: 0.5802, lr: 0.04412
iteration: 2, epoch: 85, best train: 0.861, best val: 0.5802, lr: 0.04315
iteration: 2, epoch: 86, best train: 0.866, best val: 0.5802, lr: 0.04218
iteration: 2, epoch: 87, best train: 0.867, best val: 0.5802, lr: 0.04121
iteration: 2, epoch: 88, best train: 0.867, best val: 0.5882, lr: 0.04025
iteration: 2, epoch: 89, best train: 0.882, best val: 0.5882, lr: 0.03928
iteration: 2, epoch: 90, best train: 0.882, best val: 0.5882, lr: 0.03833
iteration: 2, epoch: 91, best train: 0.882, best val: 0.5882, lr: 0.03738
iteration: 2, epoch: 92, best train: 0.882, best val: 0.5882, lr: 0.03643
iteration: 2, epoch: 93, best train: 0.882, best val: 0.5882, lr: 0.03549
iteration: 2, epoch: 94, best train: 0.882, best val: 0.6045, lr: 0.03455
iteration: 2, epoch: 95, best train: 0.882, best val: 0.6045, lr: 0.03362
iteration: 2, epoch: 96, best train: 0.89, best val: 0.6045, lr: 0.03269
iteration: 2, epoch: 97, best train: 0.9, best val: 0.6045, lr: 0.03178
iteration: 2, epoch: 98, best train: 0.9, best val: 0.6045, lr: 0.03087
iteration: 2, epoch: 99, best train: 0.904, best val: 0.6045, lr: 0.02996
iteration: 2, epoch: 100, best train: 0.904, best val: 0.6045, lr: 0.02907
iteration: 2, epoch: 101, best train: 0.904, best val: 0.6068, lr: 0.02818
iteration: 2, epoch: 102, best train: 0.904, best val: 0.6068, lr: 0.0273
iteration: 2, epoch: 103, best train: 0.904, best val: 0.6068, lr: 0.02643
iteration: 2, epoch: 104, best train: 0.904, best val: 0.6068, lr: 0.02557
iteration: 2, epoch: 105, best train: 0.904, best val: 0.6068, lr: 0.02472
iteration: 2, epoch: 106, best train: 0.904, best val: 0.6068, lr: 0.02388
iteration: 2, epoch: 107, best train: 0.904, best val: 0.6068, lr: 0.02304
iteration: 2, epoch: 108, best train: 0.904, best val: 0.6068, lr: 0.02222
iteration: 2, epoch: 109, best train: 0.911, best val: 0.6068, lr: 0.02141
iteration: 2, epoch: 110, best train: 0.911, best val: 0.6068, lr: 0.02061
iteration: 2, epoch: 111, best train: 0.914, best val: 0.6068, lr: 0.01982
iteration: 2, epoch: 112, best train: 0.914, best val: 0.6068, lr: 0.01905
iteration: 2, epoch: 113, best train: 0.914, best val: 0.6068, lr: 0.01828
iteration: 2, epoch: 114, best train: 0.922, best val: 0.6068, lr: 0.01753
iteration: 2, epoch: 115, best train: 0.922, best val: 0.6068, lr: 0.01679
iteration: 2, epoch: 116, best train: 0.922, best val: 0.6068, lr: 0.01606
iteration: 2, epoch: 117, best train: 0.922, best val: 0.6125, lr: 0.01535
iteration: 2, epoch: 118, best train: 0.926, best val: 0.6164, lr: 0.01464
iteration: 2, epoch: 119, best train: 0.926, best val: 0.6168, lr: 0.01396
iteration: 2, epoch: 120, best train: 0.926, best val: 0.6168, lr: 0.01328
iteration: 2, epoch: 121, best train: 0.926, best val: 0.6168, lr: 0.01262
iteration: 2, epoch: 122, best train: 0.926, best val: 0.6168, lr: 0.01198
iteration: 2, epoch: 123, best train: 0.928, best val: 0.6168, lr: 0.01135
iteration: 2, epoch: 124, best train: 0.928, best val: 0.6168, lr: 0.01073
iteration: 2, epoch: 125, best train: 0.928, best val: 0.6168, lr: 0.01013
iteration: 2, epoch: 126, best train: 0.928, best val: 0.6175, lr: 0.00955
iteration: 2, epoch: 127, best train: 0.928, best val: 0.6175, lr: 0.00898
iteration: 2, epoch: 128, best train: 0.928, best val: 0.6175, lr: 0.00843
iteration: 2, epoch: 129, best train: 0.93, best val: 0.6182, lr: 0.00789
iteration: 2, epoch: 130, best train: 0.93, best val: 0.6182, lr: 0.00737
iteration: 2, epoch: 131, best train: 0.93, best val: 0.6182, lr: 0.00686
iteration: 2, epoch: 132, best train: 0.93, best val: 0.6182, lr: 0.00638
iteration: 2, epoch: 133, best train: 0.944, best val: 0.6182, lr: 0.0059
iteration: 2, epoch: 134, best train: 0.944, best val: 0.6182, lr: 0.00545
iteration: 2, epoch: 135, best train: 0.944, best val: 0.6207, lr: 0.00501
iteration: 2, epoch: 136, best train: 0.944, best val: 0.6208, lr: 0.00459
iteration: 2, epoch: 137, best train: 0.944, best val: 0.6209, lr: 0.00419
iteration: 2, epoch: 138, best train: 0.944, best val: 0.6211, lr: 0.00381
iteration: 2, epoch: 139, best train: 0.944, best val: 0.6236, lr: 0.00344
iteration: 2, epoch: 140, best train: 0.944, best val: 0.6236, lr: 0.00309
iteration: 2, epoch: 141, best train: 0.944, best val: 0.6236, lr: 0.00276
iteration: 2, epoch: 142, best train: 0.944, best val: 0.6236, lr: 0.00245
iteration: 2, epoch: 143, best train: 0.944, best val: 0.6236, lr: 0.00215
iteration: 2, epoch: 144, best train: 0.944, best val: 0.6236, lr: 0.00188
iteration: 2, epoch: 145, best train: 0.944, best val: 0.6236, lr: 0.00162
iteration: 2, epoch: 146, best train: 0.944, best val: 0.6236, lr: 0.00138
iteration: 2, epoch: 147, best train: 0.944, best val: 0.6236, lr: 0.00116
iteration: 2, epoch: 148, best train: 0.944, best val: 0.6236, lr: 0.00096
iteration: 2, epoch: 149, best train: 0.944, best val: 0.6236, lr: 0.00078
iteration: 2, epoch: 150, best train: 0.944, best val: 0.6247, lr: 0.00062
iteration: 2, epoch: 151, best train: 0.944, best val: 0.6249, lr: 0.00047
iteration: 2, epoch: 152, best train: 0.944, best val: 0.6249, lr: 0.00035
iteration: 2, epoch: 153, best train: 0.952, best val: 0.6249, lr: 0.00024
iteration: 2, epoch: 154, best train: 0.952, best val: 0.6249, lr: 0.00015
iteration: 2, epoch: 155, best train: 0.952, best val: 0.6251, lr: 9e-05
iteration: 2, epoch: 156, best train: 0.952, best val: 0.6251, lr: 4e-05
iteration: 2, epoch: 157, best train: 0.952, best val: 0.6251, lr: 1e-05
iteration: 2, epoch: 158, best train: 0.952, best val: 0.6251, lr: 0.0
iteration: 2, epoch: 159, best train: 0.952, best val: 0.6251, lr: 1e-05
------------------------ Checkpoint 10  ------------------------
pre_conv.0.weight_mask 	|	active =  1357 	|	total =  1728 	|	layerwise sparsity =  0.7853009259259259
layer1.0.conv1.weight_mask 	|	active =  18874 	|	total =  36864 	|	layerwise sparsity =  0.5119900173611112
layer1.0.conv2.weight_mask 	|	active =  18874 	|	total =  36864 	|	layerwise sparsity =  0.5119900173611112
layer1.1.conv1.weight_mask 	|	active =  18874 	|	total =  36864 	|	layerwise sparsity =  0.5119900173611112
layer1.1.conv2.weight_mask 	|	active =  18874 	|	total =  36864 	|	layerwise sparsity =  0.5119900173611112
layer2.0.conv1.weight_mask 	|	active =  37749 	|	total =  73728 	|	layerwise sparsity =  0.5120035807291666
layer2.0.conv2.weight_mask 	|	active =  75498 	|	total =  147456 	|	layerwise sparsity =  0.5120035807291666
layer2.0.shortcut.0.weight_mask 	|	active =  6436 	|	total =  8192 	|	layerwise sparsity =  0.78564453125
layer2.1.conv1.weight_mask 	|	active =  75498 	|	total =  147456 	|	layerwise sparsity =  0.5120035807291666
layer2.1.conv2.weight_mask 	|	active =  75498 	|	total =  147456 	|	layerwise sparsity =  0.5120035807291666
layer3.0.conv1.weight_mask 	|	active =  150995 	|	total =  294912 	|	layerwise sparsity =  0.5120001898871528
layer3.0.conv2.weight_mask 	|	active =  273587 	|	total =  589824 	|	layerwise sparsity =  0.4638451470269097
layer3.0.shortcut.0.weight_mask 	|	active =  16777 	|	total =  32768 	|	layerwise sparsity =  0.511993408203125
layer3.1.conv1.weight_mask 	|	active =  273095 	|	total =  589824 	|	layerwise sparsity =  0.4630109998914931
layer3.1.conv2.weight_mask 	|	active =  277848 	|	total =  589824 	|	layerwise sparsity =  0.4710693359375
layer4.0.conv1.weight_mask 	|	active =  586097 	|	total =  1179648 	|	layerwise sparsity =  0.49684058295355904
layer4.0.conv2.weight_mask 	|	active =  1237002 	|	total =  2359296 	|	layerwise sparsity =  0.5243097941080729
layer4.0.shortcut.0.weight_mask 	|	active =  67109 	|	total =  131072 	|	layerwise sparsity =  0.5120010375976562
layer4.1.conv1.weight_mask 	|	active =  1256184 	|	total =  2359296 	|	layerwise sparsity =  0.532440185546875
layer4.1.conv2.weight_mask 	|	active =  1262782 	|	total =  2359296 	|	layerwise sparsity =  0.5352367824978299
------------------------ Checkpoint 11  ------------------------
best_val =  0.6251000000000001
------------------------ Checkpoint 12  ------------------------
pruning state: 3
remaining weight at start of iteration =  51.51795392371088
iteration: 3, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 3, epoch: 1, best train: 0.225, best val: 0.1838, lr: 0.09991
iteration: 3, epoch: 2, best train: 0.275, best val: 0.2268, lr: 0.09985
iteration: 3, epoch: 3, best train: 0.383, best val: 0.2427, lr: 0.09976
iteration: 3, epoch: 4, best train: 0.391, best val: 0.3312, lr: 0.09965
iteration: 3, epoch: 5, best train: 0.406, best val: 0.3322, lr: 0.09953
iteration: 3, epoch: 6, best train: 0.435, best val: 0.4257, lr: 0.09938
iteration: 3, epoch: 7, best train: 0.504, best val: 0.4257, lr: 0.09922
iteration: 3, epoch: 8, best train: 0.518, best val: 0.4257, lr: 0.09904
iteration: 3, epoch: 9, best train: 0.52, best val: 0.4283, lr: 0.09884
iteration: 3, epoch: 10, best train: 0.554, best val: 0.4283, lr: 0.09862
iteration: 3, epoch: 11, best train: 0.591, best val: 0.4504, lr: 0.09838
iteration: 3, epoch: 12, best train: 0.591, best val: 0.4633, lr: 0.09812
iteration: 3, epoch: 13, best train: 0.591, best val: 0.4633, lr: 0.09785
iteration: 3, epoch: 14, best train: 0.591, best val: 0.4633, lr: 0.09755
iteration: 3, epoch: 15, best train: 0.603, best val: 0.4701, lr: 0.09724
iteration: 3, epoch: 16, best train: 0.608, best val: 0.4701, lr: 0.09691
iteration: 3, epoch: 17, best train: 0.635, best val: 0.4756, lr: 0.09656
iteration: 3, epoch: 18, best train: 0.654, best val: 0.4756, lr: 0.09619
iteration: 3, epoch: 19, best train: 0.654, best val: 0.4756, lr: 0.09581
iteration: 3, epoch: 20, best train: 0.675, best val: 0.5145, lr: 0.09541
iteration: 3, epoch: 21, best train: 0.694, best val: 0.5145, lr: 0.09499
iteration: 3, epoch: 22, best train: 0.694, best val: 0.5325, lr: 0.09455
iteration: 3, epoch: 23, best train: 0.737, best val: 0.5325, lr: 0.0941
iteration: 3, epoch: 24, best train: 0.737, best val: 0.5325, lr: 0.09362
iteration: 3, epoch: 25, best train: 0.737, best val: 0.5325, lr: 0.09314
iteration: 3, epoch: 26, best train: 0.737, best val: 0.5325, lr: 0.09263
iteration: 3, epoch: 27, best train: 0.737, best val: 0.5325, lr: 0.09211
iteration: 3, epoch: 28, best train: 0.737, best val: 0.5325, lr: 0.09157
iteration: 3, epoch: 29, best train: 0.751, best val: 0.5325, lr: 0.09102
iteration: 3, epoch: 30, best train: 0.764, best val: 0.5325, lr: 0.09045
iteration: 3, epoch: 31, best train: 0.764, best val: 0.5462, lr: 0.08987
iteration: 3, epoch: 32, best train: 0.764, best val: 0.5462, lr: 0.08927
iteration: 3, epoch: 33, best train: 0.768, best val: 0.5462, lr: 0.08865
iteration: 3, epoch: 34, best train: 0.768, best val: 0.5462, lr: 0.08802
iteration: 3, epoch: 35, best train: 0.768, best val: 0.5462, lr: 0.08738
iteration: 3, epoch: 36, best train: 0.769, best val: 0.5462, lr: 0.08672
iteration: 3, epoch: 37, best train: 0.772, best val: 0.5477, lr: 0.08604
iteration: 3, epoch: 38, best train: 0.792, best val: 0.5477, lr: 0.08536
iteration: 3, epoch: 39, best train: 0.804, best val: 0.553, lr: 0.08465
iteration: 3, epoch: 40, best train: 0.804, best val: 0.553, lr: 0.08394
iteration: 3, epoch: 41, best train: 0.804, best val: 0.553, lr: 0.08321
iteration: 3, epoch: 42, best train: 0.804, best val: 0.5602, lr: 0.08247
iteration: 3, epoch: 43, best train: 0.804, best val: 0.5602, lr: 0.08172
iteration: 3, epoch: 44, best train: 0.809, best val: 0.5602, lr: 0.08095
iteration: 3, epoch: 45, best train: 0.821, best val: 0.5787, lr: 0.08018
iteration: 3, epoch: 46, best train: 0.821, best val: 0.5787, lr: 0.07939
iteration: 3, epoch: 47, best train: 0.821, best val: 0.5787, lr: 0.07859
iteration: 3, epoch: 48, best train: 0.821, best val: 0.5787, lr: 0.07778
iteration: 3, epoch: 49, best train: 0.821, best val: 0.5787, lr: 0.07696
iteration: 3, epoch: 50, best train: 0.826, best val: 0.5787, lr: 0.07612
iteration: 3, epoch: 51, best train: 0.85, best val: 0.5879, lr: 0.07528
iteration: 3, epoch: 52, best train: 0.85, best val: 0.5879, lr: 0.07443
iteration: 3, epoch: 53, best train: 0.85, best val: 0.5879, lr: 0.07357
iteration: 3, epoch: 54, best train: 0.85, best val: 0.5879, lr: 0.0727
iteration: 3, epoch: 55, best train: 0.85, best val: 0.5879, lr: 0.07182
iteration: 3, epoch: 56, best train: 0.85, best val: 0.5879, lr: 0.07093
iteration: 3, epoch: 57, best train: 0.85, best val: 0.59, lr: 0.07004
iteration: 3, epoch: 58, best train: 0.85, best val: 0.59, lr: 0.06913
iteration: 3, epoch: 59, best train: 0.853, best val: 0.59, lr: 0.06822
iteration: 3, epoch: 60, best train: 0.856, best val: 0.59, lr: 0.06731
iteration: 3, epoch: 61, best train: 0.876, best val: 0.59, lr: 0.06638
iteration: 3, epoch: 62, best train: 0.876, best val: 0.59, lr: 0.06545
iteration: 3, epoch: 63, best train: 0.876, best val: 0.59, lr: 0.06451
iteration: 3, epoch: 64, best train: 0.876, best val: 0.59, lr: 0.06357
iteration: 3, epoch: 65, best train: 0.876, best val: 0.59, lr: 0.06262
iteration: 3, epoch: 66, best train: 0.876, best val: 0.5978, lr: 0.06167
iteration: 3, epoch: 67, best train: 0.877, best val: 0.5978, lr: 0.06072
iteration: 3, epoch: 68, best train: 0.88, best val: 0.5978, lr: 0.05975
iteration: 3, epoch: 69, best train: 0.88, best val: 0.5978, lr: 0.05879
iteration: 3, epoch: 70, best train: 0.885, best val: 0.5978, lr: 0.05782
iteration: 3, epoch: 71, best train: 0.885, best val: 0.5978, lr: 0.05685
iteration: 3, epoch: 72, best train: 0.885, best val: 0.5978, lr: 0.05588
iteration: 3, epoch: 73, best train: 0.885, best val: 0.5978, lr: 0.0549
iteration: 3, epoch: 74, best train: 0.885, best val: 0.5978, lr: 0.05392
iteration: 3, epoch: 75, best train: 0.893, best val: 0.5987, lr: 0.05294
iteration: 3, epoch: 76, best train: 0.893, best val: 0.5987, lr: 0.05196
iteration: 3, epoch: 77, best train: 0.893, best val: 0.5987, lr: 0.05098
iteration: 3, epoch: 78, best train: 0.895, best val: 0.5987, lr: 0.05
iteration: 3, epoch: 79, best train: 0.895, best val: 0.602, lr: 0.04902
iteration: 3, epoch: 80, best train: 0.895, best val: 0.6126, lr: 0.04804
iteration: 3, epoch: 81, best train: 0.895, best val: 0.6126, lr: 0.04706
iteration: 3, epoch: 82, best train: 0.897, best val: 0.6126, lr: 0.04608
iteration: 3, epoch: 83, best train: 0.905, best val: 0.6126, lr: 0.0451
iteration: 3, epoch: 84, best train: 0.905, best val: 0.6126, lr: 0.04412
iteration: 3, epoch: 85, best train: 0.905, best val: 0.6126, lr: 0.04315
iteration: 3, epoch: 86, best train: 0.905, best val: 0.6126, lr: 0.04218
iteration: 3, epoch: 87, best train: 0.905, best val: 0.6126, lr: 0.04121
iteration: 3, epoch: 88, best train: 0.905, best val: 0.6126, lr: 0.04025
iteration: 3, epoch: 89, best train: 0.905, best val: 0.6126, lr: 0.03928
iteration: 3, epoch: 90, best train: 0.915, best val: 0.6163, lr: 0.03833
iteration: 3, epoch: 91, best train: 0.919, best val: 0.6173, lr: 0.03738
iteration: 3, epoch: 92, best train: 0.919, best val: 0.6173, lr: 0.03643
iteration: 3, epoch: 93, best train: 0.919, best val: 0.6173, lr: 0.03549
iteration: 3, epoch: 94, best train: 0.919, best val: 0.6173, lr: 0.03455
iteration: 3, epoch: 95, best train: 0.919, best val: 0.6173, lr: 0.03362
iteration: 3, epoch: 96, best train: 0.919, best val: 0.6173, lr: 0.03269
iteration: 3, epoch: 97, best train: 0.919, best val: 0.6173, lr: 0.03178
iteration: 3, epoch: 98, best train: 0.919, best val: 0.6191, lr: 0.03087
iteration: 3, epoch: 99, best train: 0.923, best val: 0.6208, lr: 0.02996
iteration: 3, epoch: 100, best train: 0.925, best val: 0.6208, lr: 0.02907
iteration: 3, epoch: 101, best train: 0.925, best val: 0.6266, lr: 0.02818
iteration: 3, epoch: 102, best train: 0.925, best val: 0.6275, lr: 0.0273
iteration: 3, epoch: 103, best train: 0.925, best val: 0.6275, lr: 0.02643
iteration: 3, epoch: 104, best train: 0.927, best val: 0.6312, lr: 0.02557
iteration: 3, epoch: 105, best train: 0.933, best val: 0.6312, lr: 0.02472
iteration: 3, epoch: 106, best train: 0.933, best val: 0.6312, lr: 0.02388
iteration: 3, epoch: 107, best train: 0.933, best val: 0.6335, lr: 0.02304
iteration: 3, epoch: 108, best train: 0.933, best val: 0.6335, lr: 0.02222
iteration: 3, epoch: 109, best train: 0.936, best val: 0.6381, lr: 0.02141
iteration: 3, epoch: 110, best train: 0.936, best val: 0.6381, lr: 0.02061
iteration: 3, epoch: 111, best train: 0.936, best val: 0.6381, lr: 0.01982
iteration: 3, epoch: 112, best train: 0.947, best val: 0.6381, lr: 0.01905
iteration: 3, epoch: 113, best train: 0.947, best val: 0.6381, lr: 0.01828
iteration: 3, epoch: 114, best train: 0.947, best val: 0.6381, lr: 0.01753
iteration: 3, epoch: 115, best train: 0.947, best val: 0.6381, lr: 0.01679
iteration: 3, epoch: 116, best train: 0.947, best val: 0.6381, lr: 0.01606
iteration: 3, epoch: 117, best train: 0.947, best val: 0.6381, lr: 0.01535
iteration: 3, epoch: 118, best train: 0.947, best val: 0.6381, lr: 0.01464
iteration: 3, epoch: 119, best train: 0.947, best val: 0.6381, lr: 0.01396
iteration: 3, epoch: 120, best train: 0.947, best val: 0.6381, lr: 0.01328
iteration: 3, epoch: 121, best train: 0.947, best val: 0.6381, lr: 0.01262
iteration: 3, epoch: 122, best train: 0.947, best val: 0.6381, lr: 0.01198
iteration: 3, epoch: 123, best train: 0.947, best val: 0.6381, lr: 0.01135
iteration: 3, epoch: 124, best train: 0.947, best val: 0.6381, lr: 0.01073
iteration: 3, epoch: 125, best train: 0.947, best val: 0.6381, lr: 0.01013
iteration: 3, epoch: 126, best train: 0.947, best val: 0.6381, lr: 0.00955
iteration: 3, epoch: 127, best train: 0.947, best val: 0.6381, lr: 0.00898
iteration: 3, epoch: 128, best train: 0.947, best val: 0.6381, lr: 0.00843
iteration: 3, epoch: 129, best train: 0.948, best val: 0.6381, lr: 0.00789
iteration: 3, epoch: 130, best train: 0.948, best val: 0.6387, lr: 0.00737
iteration: 3, epoch: 131, best train: 0.948, best val: 0.6387, lr: 0.00686
iteration: 3, epoch: 132, best train: 0.948, best val: 0.6387, lr: 0.00638
iteration: 3, epoch: 133, best train: 0.948, best val: 0.641, lr: 0.0059
iteration: 3, epoch: 134, best train: 0.948, best val: 0.641, lr: 0.00545
iteration: 3, epoch: 135, best train: 0.951, best val: 0.641, lr: 0.00501
iteration: 3, epoch: 136, best train: 0.951, best val: 0.641, lr: 0.00459
iteration: 3, epoch: 137, best train: 0.951, best val: 0.641, lr: 0.00419
iteration: 3, epoch: 138, best train: 0.951, best val: 0.641, lr: 0.00381
iteration: 3, epoch: 139, best train: 0.951, best val: 0.641, lr: 0.00344
iteration: 3, epoch: 140, best train: 0.954, best val: 0.641, lr: 0.00309
iteration: 3, epoch: 141, best train: 0.959, best val: 0.641, lr: 0.00276
iteration: 3, epoch: 142, best train: 0.959, best val: 0.641, lr: 0.00245
iteration: 3, epoch: 143, best train: 0.959, best val: 0.641, lr: 0.00215
iteration: 3, epoch: 144, best train: 0.959, best val: 0.641, lr: 0.00188
iteration: 3, epoch: 145, best train: 0.959, best val: 0.641, lr: 0.00162
iteration: 3, epoch: 146, best train: 0.959, best val: 0.641, lr: 0.00138
iteration: 3, epoch: 147, best train: 0.959, best val: 0.641, lr: 0.00116
iteration: 3, epoch: 148, best train: 0.961, best val: 0.641, lr: 0.00096
iteration: 3, epoch: 149, best train: 0.961, best val: 0.641, lr: 0.00078
iteration: 3, epoch: 150, best train: 0.961, best val: 0.641, lr: 0.00062
iteration: 3, epoch: 151, best train: 0.961, best val: 0.641, lr: 0.00047
iteration: 3, epoch: 152, best train: 0.961, best val: 0.641, lr: 0.00035
iteration: 3, epoch: 153, best train: 0.961, best val: 0.641, lr: 0.00024
iteration: 3, epoch: 154, best train: 0.961, best val: 0.641, lr: 0.00015
iteration: 3, epoch: 155, best train: 0.961, best val: 0.641, lr: 9e-05
iteration: 3, epoch: 156, best train: 0.961, best val: 0.641, lr: 4e-05
iteration: 3, epoch: 157, best train: 0.961, best val: 0.641, lr: 1e-05
iteration: 3, epoch: 158, best train: 0.961, best val: 0.641, lr: 0.0
iteration: 3, epoch: 159, best train: 0.961, best val: 0.641, lr: 1e-05
------------------------ Checkpoint 13  ------------------------
pre_conv.0.weight_mask 	|	active =  1252 	|	total =  1728 	|	layerwise sparsity =  0.7245370370370371
layer1.0.conv1.weight_mask 	|	active =  15099 	|	total =  36864 	|	layerwise sparsity =  0.4095865885416667
layer1.0.conv2.weight_mask 	|	active =  15099 	|	total =  36864 	|	layerwise sparsity =  0.4095865885416667
layer1.1.conv1.weight_mask 	|	active =  15099 	|	total =  36864 	|	layerwise sparsity =  0.4095865885416667
layer1.1.conv2.weight_mask 	|	active =  15099 	|	total =  36864 	|	layerwise sparsity =  0.4095865885416667
layer2.0.conv1.weight_mask 	|	active =  30199 	|	total =  73728 	|	layerwise sparsity =  0.4096001519097222
layer2.0.conv2.weight_mask 	|	active =  60398 	|	total =  147456 	|	layerwise sparsity =  0.4096001519097222
layer2.0.shortcut.0.weight_mask 	|	active =  5938 	|	total =  8192 	|	layerwise sparsity =  0.724853515625
layer2.1.conv1.weight_mask 	|	active =  60398 	|	total =  147456 	|	layerwise sparsity =  0.4096001519097222
layer2.1.conv2.weight_mask 	|	active =  60398 	|	total =  147456 	|	layerwise sparsity =  0.4096001519097222
layer3.0.conv1.weight_mask 	|	active =  120796 	|	total =  294912 	|	layerwise sparsity =  0.4096001519097222
layer3.0.conv2.weight_mask 	|	active =  211781 	|	total =  589824 	|	layerwise sparsity =  0.3590579562717014
layer3.0.shortcut.0.weight_mask 	|	active =  13422 	|	total =  32768 	|	layerwise sparsity =  0.40960693359375
layer3.1.conv1.weight_mask 	|	active =  211273 	|	total =  589824 	|	layerwise sparsity =  0.3581966824001736
layer3.1.conv2.weight_mask 	|	active =  216190 	|	total =  589824 	|	layerwise sparsity =  0.3665330674913194
layer4.0.conv1.weight_mask 	|	active =  464204 	|	total =  1179648 	|	layerwise sparsity =  0.3935106065538194
layer4.0.conv2.weight_mask 	|	active =  997470 	|	total =  2359296 	|	layerwise sparsity =  0.42278289794921875
layer4.0.shortcut.0.weight_mask 	|	active =  53687 	|	total =  131072 	|	layerwise sparsity =  0.40959930419921875
layer4.1.conv1.weight_mask 	|	active =  1018146 	|	total =  2359296 	|	layerwise sparsity =  0.43154652913411456
layer4.1.conv2.weight_mask 	|	active =  1025283 	|	total =  2359296 	|	layerwise sparsity =  0.4345715840657552
------------------------ Checkpoint 14  ------------------------
best_val =  0.6409999999999999
------------------------ Checkpoint 15  ------------------------
pruning state: 4
remaining weight at start of iteration =  41.32211786617573
iteration: 4, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 4, epoch: 1, best train: 0.289, best val: 0.1081, lr: 0.09991
iteration: 4, epoch: 2, best train: 0.403, best val: 0.2261, lr: 0.09985
iteration: 4, epoch: 3, best train: 0.469, best val: 0.2441, lr: 0.09976
iteration: 4, epoch: 4, best train: 0.512, best val: 0.2538, lr: 0.09965
iteration: 4, epoch: 5, best train: 0.538, best val: 0.4375, lr: 0.09953
iteration: 4, epoch: 6, best train: 0.582, best val: 0.4375, lr: 0.09938
iteration: 4, epoch: 7, best train: 0.589, best val: 0.4375, lr: 0.09922
iteration: 4, epoch: 8, best train: 0.595, best val: 0.4375, lr: 0.09904
iteration: 4, epoch: 9, best train: 0.635, best val: 0.4375, lr: 0.09884
iteration: 4, epoch: 10, best train: 0.637, best val: 0.5012, lr: 0.09862
iteration: 4, epoch: 11, best train: 0.65, best val: 0.5074, lr: 0.09838
iteration: 4, epoch: 12, best train: 0.654, best val: 0.5149, lr: 0.09812
iteration: 4, epoch: 13, best train: 0.695, best val: 0.5149, lr: 0.09785
iteration: 4, epoch: 14, best train: 0.695, best val: 0.5149, lr: 0.09755
iteration: 4, epoch: 15, best train: 0.695, best val: 0.5394, lr: 0.09724
iteration: 4, epoch: 16, best train: 0.734, best val: 0.5394, lr: 0.09691
iteration: 4, epoch: 17, best train: 0.751, best val: 0.5394, lr: 0.09656
iteration: 4, epoch: 18, best train: 0.751, best val: 0.5394, lr: 0.09619
iteration: 4, epoch: 19, best train: 0.751, best val: 0.5394, lr: 0.09581
iteration: 4, epoch: 20, best train: 0.754, best val: 0.5394, lr: 0.09541
iteration: 4, epoch: 21, best train: 0.754, best val: 0.5461, lr: 0.09499
iteration: 4, epoch: 22, best train: 0.768, best val: 0.5671, lr: 0.09455
iteration: 4, epoch: 23, best train: 0.77, best val: 0.5671, lr: 0.0941
iteration: 4, epoch: 24, best train: 0.77, best val: 0.5671, lr: 0.09362
iteration: 4, epoch: 25, best train: 0.78, best val: 0.5671, lr: 0.09314
iteration: 4, epoch: 26, best train: 0.79, best val: 0.5697, lr: 0.09263
iteration: 4, epoch: 27, best train: 0.806, best val: 0.5697, lr: 0.09211
iteration: 4, epoch: 28, best train: 0.827, best val: 0.5697, lr: 0.09157
iteration: 4, epoch: 29, best train: 0.827, best val: 0.5697, lr: 0.09102
iteration: 4, epoch: 30, best train: 0.827, best val: 0.5697, lr: 0.09045
iteration: 4, epoch: 31, best train: 0.827, best val: 0.5697, lr: 0.08987
iteration: 4, epoch: 32, best train: 0.827, best val: 0.5697, lr: 0.08927
iteration: 4, epoch: 33, best train: 0.827, best val: 0.5697, lr: 0.08865
iteration: 4, epoch: 34, best train: 0.827, best val: 0.5697, lr: 0.08802
iteration: 4, epoch: 35, best train: 0.827, best val: 0.5757, lr: 0.08738
iteration: 4, epoch: 36, best train: 0.831, best val: 0.5757, lr: 0.08672
iteration: 4, epoch: 37, best train: 0.831, best val: 0.5757, lr: 0.08604
iteration: 4, epoch: 38, best train: 0.831, best val: 0.5757, lr: 0.08536
iteration: 4, epoch: 39, best train: 0.831, best val: 0.5757, lr: 0.08465
iteration: 4, epoch: 40, best train: 0.831, best val: 0.5757, lr: 0.08394
iteration: 4, epoch: 41, best train: 0.841, best val: 0.5876, lr: 0.08321
iteration: 4, epoch: 42, best train: 0.841, best val: 0.5876, lr: 0.08247
iteration: 4, epoch: 43, best train: 0.858, best val: 0.5876, lr: 0.08172
iteration: 4, epoch: 44, best train: 0.858, best val: 0.5876, lr: 0.08095
iteration: 4, epoch: 45, best train: 0.858, best val: 0.5876, lr: 0.08018
iteration: 4, epoch: 46, best train: 0.858, best val: 0.5909, lr: 0.07939
iteration: 4, epoch: 47, best train: 0.862, best val: 0.5909, lr: 0.07859
iteration: 4, epoch: 48, best train: 0.873, best val: 0.5909, lr: 0.07778
iteration: 4, epoch: 49, best train: 0.873, best val: 0.5909, lr: 0.07696
iteration: 4, epoch: 50, best train: 0.873, best val: 0.5909, lr: 0.07612
iteration: 4, epoch: 51, best train: 0.873, best val: 0.5909, lr: 0.07528
iteration: 4, epoch: 52, best train: 0.873, best val: 0.5909, lr: 0.07443
iteration: 4, epoch: 53, best train: 0.892, best val: 0.6003, lr: 0.07357
iteration: 4, epoch: 54, best train: 0.892, best val: 0.6003, lr: 0.0727
iteration: 4, epoch: 55, best train: 0.892, best val: 0.6003, lr: 0.07182
iteration: 4, epoch: 56, best train: 0.892, best val: 0.6003, lr: 0.07093
iteration: 4, epoch: 57, best train: 0.892, best val: 0.6003, lr: 0.07004
iteration: 4, epoch: 58, best train: 0.892, best val: 0.6003, lr: 0.06913
iteration: 4, epoch: 59, best train: 0.892, best val: 0.6003, lr: 0.06822
iteration: 4, epoch: 60, best train: 0.892, best val: 0.6003, lr: 0.06731
iteration: 4, epoch: 61, best train: 0.892, best val: 0.6003, lr: 0.06638
iteration: 4, epoch: 62, best train: 0.895, best val: 0.607, lr: 0.06545
iteration: 4, epoch: 63, best train: 0.901, best val: 0.607, lr: 0.06451
iteration: 4, epoch: 64, best train: 0.901, best val: 0.607, lr: 0.06357
iteration: 4, epoch: 65, best train: 0.901, best val: 0.607, lr: 0.06262
iteration: 4, epoch: 66, best train: 0.901, best val: 0.607, lr: 0.06167
iteration: 4, epoch: 67, best train: 0.901, best val: 0.607, lr: 0.06072
iteration: 4, epoch: 68, best train: 0.901, best val: 0.607, lr: 0.05975
iteration: 4, epoch: 69, best train: 0.91, best val: 0.607, lr: 0.05879
iteration: 4, epoch: 70, best train: 0.91, best val: 0.607, lr: 0.05782
iteration: 4, epoch: 71, best train: 0.915, best val: 0.607, lr: 0.05685
iteration: 4, epoch: 72, best train: 0.915, best val: 0.607, lr: 0.05588
iteration: 4, epoch: 73, best train: 0.915, best val: 0.6119, lr: 0.0549
iteration: 4, epoch: 74, best train: 0.915, best val: 0.6119, lr: 0.05392
iteration: 4, epoch: 75, best train: 0.915, best val: 0.6119, lr: 0.05294
iteration: 4, epoch: 76, best train: 0.915, best val: 0.6119, lr: 0.05196
iteration: 4, epoch: 77, best train: 0.917, best val: 0.6212, lr: 0.05098
iteration: 4, epoch: 78, best train: 0.917, best val: 0.6212, lr: 0.05
iteration: 4, epoch: 79, best train: 0.917, best val: 0.6212, lr: 0.04902
iteration: 4, epoch: 80, best train: 0.917, best val: 0.6212, lr: 0.04804
iteration: 4, epoch: 81, best train: 0.917, best val: 0.6332, lr: 0.04706
iteration: 4, epoch: 82, best train: 0.917, best val: 0.6443, lr: 0.04608
iteration: 4, epoch: 83, best train: 0.926, best val: 0.6443, lr: 0.0451
iteration: 4, epoch: 84, best train: 0.926, best val: 0.6443, lr: 0.04412
iteration: 4, epoch: 85, best train: 0.926, best val: 0.6443, lr: 0.04315
iteration: 4, epoch: 86, best train: 0.926, best val: 0.6443, lr: 0.04218
iteration: 4, epoch: 87, best train: 0.926, best val: 0.6443, lr: 0.04121
iteration: 4, epoch: 88, best train: 0.926, best val: 0.6443, lr: 0.04025
iteration: 4, epoch: 89, best train: 0.926, best val: 0.6443, lr: 0.03928
iteration: 4, epoch: 90, best train: 0.929, best val: 0.6443, lr: 0.03833
iteration: 4, epoch: 91, best train: 0.929, best val: 0.6443, lr: 0.03738
iteration: 4, epoch: 92, best train: 0.929, best val: 0.6443, lr: 0.03643
iteration: 4, epoch: 93, best train: 0.931, best val: 0.6443, lr: 0.03549
iteration: 4, epoch: 94, best train: 0.933, best val: 0.6443, lr: 0.03455
iteration: 4, epoch: 95, best train: 0.933, best val: 0.6443, lr: 0.03362
iteration: 4, epoch: 96, best train: 0.933, best val: 0.6443, lr: 0.03269
iteration: 4, epoch: 97, best train: 0.935, best val: 0.6443, lr: 0.03178
iteration: 4, epoch: 98, best train: 0.935, best val: 0.6443, lr: 0.03087
iteration: 4, epoch: 99, best train: 0.935, best val: 0.6443, lr: 0.02996
iteration: 4, epoch: 100, best train: 0.935, best val: 0.6443, lr: 0.02907
iteration: 4, epoch: 101, best train: 0.935, best val: 0.6443, lr: 0.02818
iteration: 4, epoch: 102, best train: 0.945, best val: 0.6443, lr: 0.0273
iteration: 4, epoch: 103, best train: 0.945, best val: 0.6443, lr: 0.02643
iteration: 4, epoch: 104, best train: 0.945, best val: 0.6443, lr: 0.02557
iteration: 4, epoch: 105, best train: 0.948, best val: 0.6443, lr: 0.02472
iteration: 4, epoch: 106, best train: 0.948, best val: 0.6443, lr: 0.02388
iteration: 4, epoch: 107, best train: 0.948, best val: 0.6443, lr: 0.02304
iteration: 4, epoch: 108, best train: 0.952, best val: 0.6474, lr: 0.02222
iteration: 4, epoch: 109, best train: 0.952, best val: 0.6538, lr: 0.02141
iteration: 4, epoch: 110, best train: 0.952, best val: 0.6538, lr: 0.02061
iteration: 4, epoch: 111, best train: 0.952, best val: 0.6538, lr: 0.01982
iteration: 4, epoch: 112, best train: 0.952, best val: 0.6538, lr: 0.01905
iteration: 4, epoch: 113, best train: 0.952, best val: 0.6538, lr: 0.01828
iteration: 4, epoch: 114, best train: 0.952, best val: 0.6538, lr: 0.01753
iteration: 4, epoch: 115, best train: 0.952, best val: 0.6538, lr: 0.01679
iteration: 4, epoch: 116, best train: 0.952, best val: 0.6538, lr: 0.01606
iteration: 4, epoch: 117, best train: 0.952, best val: 0.6538, lr: 0.01535
iteration: 4, epoch: 118, best train: 0.952, best val: 0.6538, lr: 0.01464
iteration: 4, epoch: 119, best train: 0.952, best val: 0.6538, lr: 0.01396
iteration: 4, epoch: 120, best train: 0.952, best val: 0.6538, lr: 0.01328
iteration: 4, epoch: 121, best train: 0.952, best val: 0.6538, lr: 0.01262
iteration: 4, epoch: 122, best train: 0.952, best val: 0.6538, lr: 0.01198
iteration: 4, epoch: 123, best train: 0.952, best val: 0.655, lr: 0.01135
iteration: 4, epoch: 124, best train: 0.952, best val: 0.6567, lr: 0.01073
iteration: 4, epoch: 125, best train: 0.952, best val: 0.6588, lr: 0.01013
iteration: 4, epoch: 126, best train: 0.955, best val: 0.6589, lr: 0.00955
iteration: 4, epoch: 127, best train: 0.955, best val: 0.6597, lr: 0.00898
iteration: 4, epoch: 128, best train: 0.955, best val: 0.6597, lr: 0.00843
iteration: 4, epoch: 129, best train: 0.958, best val: 0.6597, lr: 0.00789
iteration: 4, epoch: 130, best train: 0.958, best val: 0.6597, lr: 0.00737
iteration: 4, epoch: 131, best train: 0.958, best val: 0.6597, lr: 0.00686
iteration: 4, epoch: 132, best train: 0.958, best val: 0.6597, lr: 0.00638
iteration: 4, epoch: 133, best train: 0.958, best val: 0.6598, lr: 0.0059
iteration: 4, epoch: 134, best train: 0.958, best val: 0.6598, lr: 0.00545
iteration: 4, epoch: 135, best train: 0.958, best val: 0.6605, lr: 0.00501
iteration: 4, epoch: 136, best train: 0.961, best val: 0.6605, lr: 0.00459
iteration: 4, epoch: 137, best train: 0.961, best val: 0.6607, lr: 0.00419
iteration: 4, epoch: 138, best train: 0.961, best val: 0.6607, lr: 0.00381
iteration: 4, epoch: 139, best train: 0.961, best val: 0.6607, lr: 0.00344
iteration: 4, epoch: 140, best train: 0.961, best val: 0.6613, lr: 0.00309
iteration: 4, epoch: 141, best train: 0.961, best val: 0.6613, lr: 0.00276
iteration: 4, epoch: 142, best train: 0.961, best val: 0.6613, lr: 0.00245
iteration: 4, epoch: 143, best train: 0.961, best val: 0.6613, lr: 0.00215
iteration: 4, epoch: 144, best train: 0.961, best val: 0.6613, lr: 0.00188
iteration: 4, epoch: 145, best train: 0.961, best val: 0.6624, lr: 0.00162
iteration: 4, epoch: 146, best train: 0.961, best val: 0.6624, lr: 0.00138
iteration: 4, epoch: 147, best train: 0.961, best val: 0.6624, lr: 0.00116
iteration: 4, epoch: 148, best train: 0.961, best val: 0.6624, lr: 0.00096
iteration: 4, epoch: 149, best train: 0.961, best val: 0.6624, lr: 0.00078
iteration: 4, epoch: 150, best train: 0.961, best val: 0.6624, lr: 0.00062
iteration: 4, epoch: 151, best train: 0.962, best val: 0.6624, lr: 0.00047
iteration: 4, epoch: 152, best train: 0.962, best val: 0.6624, lr: 0.00035
iteration: 4, epoch: 153, best train: 0.962, best val: 0.6626, lr: 0.00024
iteration: 4, epoch: 154, best train: 0.962, best val: 0.6626, lr: 0.00015
iteration: 4, epoch: 155, best train: 0.962, best val: 0.6626, lr: 9e-05
iteration: 4, epoch: 156, best train: 0.962, best val: 0.6626, lr: 4e-05
iteration: 4, epoch: 157, best train: 0.963, best val: 0.6626, lr: 1e-05
iteration: 4, epoch: 158, best train: 0.963, best val: 0.6626, lr: 0.0
iteration: 4, epoch: 159, best train: 0.963, best val: 0.6626, lr: 1e-05
------------------------ Checkpoint 16  ------------------------
pre_conv.0.weight_mask 	|	active =  1155 	|	total =  1728 	|	layerwise sparsity =  0.6684027777777778
layer1.0.conv1.weight_mask 	|	active =  12079 	|	total =  36864 	|	layerwise sparsity =  0.3276638454861111
layer1.0.conv2.weight_mask 	|	active =  12079 	|	total =  36864 	|	layerwise sparsity =  0.3276638454861111
layer1.1.conv1.weight_mask 	|	active =  12079 	|	total =  36864 	|	layerwise sparsity =  0.3276638454861111
layer1.1.conv2.weight_mask 	|	active =  12079 	|	total =  36864 	|	layerwise sparsity =  0.3276638454861111
layer2.0.conv1.weight_mask 	|	active =  24159 	|	total =  73728 	|	layerwise sparsity =  0.3276774088541667
layer2.0.conv2.weight_mask 	|	active =  48318 	|	total =  147456 	|	layerwise sparsity =  0.3276774088541667
layer2.0.shortcut.0.weight_mask 	|	active =  5479 	|	total =  8192 	|	layerwise sparsity =  0.6688232421875
layer2.1.conv1.weight_mask 	|	active =  48318 	|	total =  147456 	|	layerwise sparsity =  0.3276774088541667
layer2.1.conv2.weight_mask 	|	active =  48318 	|	total =  147456 	|	layerwise sparsity =  0.3276774088541667
layer3.0.conv1.weight_mask 	|	active =  96637 	|	total =  294912 	|	layerwise sparsity =  0.3276807996961806
layer3.0.conv2.weight_mask 	|	active =  163937 	|	total =  589824 	|	layerwise sparsity =  0.2779422336154514
layer3.0.shortcut.0.weight_mask 	|	active =  10738 	|	total =  32768 	|	layerwise sparsity =  0.32769775390625
layer3.1.conv1.weight_mask 	|	active =  163446 	|	total =  589824 	|	layerwise sparsity =  0.2771097819010417
layer3.1.conv2.weight_mask 	|	active =  168215 	|	total =  589824 	|	layerwise sparsity =  0.2851952446831597
layer4.0.conv1.weight_mask 	|	active =  367661 	|	total =  1179648 	|	layerwise sparsity =  0.31167009141710067
layer4.0.conv2.weight_mask 	|	active =  804321 	|	total =  2359296 	|	layerwise sparsity =  0.3409156799316406
layer4.0.shortcut.0.weight_mask 	|	active =  42950 	|	total =  131072 	|	layerwise sparsity =  0.3276824951171875
layer4.1.conv1.weight_mask 	|	active =  825215 	|	total =  2359296 	|	layerwise sparsity =  0.34977171156141496
layer4.1.conv2.weight_mask 	|	active =  832452 	|	total =  2359296 	|	layerwise sparsity =  0.3528391520182292
------------------------ Checkpoint 17  ------------------------
best_val =  0.6625999999999999
------------------------ Checkpoint 18  ------------------------
pruning state: 5
remaining weight at start of iteration =  33.15313276039068
iteration: 5, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 5, epoch: 1, best train: 0.374, best val: 0.1058, lr: 0.09991
iteration: 5, epoch: 2, best train: 0.472, best val: 0.1241, lr: 0.09985
iteration: 5, epoch: 3, best train: 0.508, best val: 0.285, lr: 0.09976
iteration: 5, epoch: 4, best train: 0.557, best val: 0.389, lr: 0.09965
iteration: 5, epoch: 5, best train: 0.59, best val: 0.4742, lr: 0.09953
iteration: 5, epoch: 6, best train: 0.661, best val: 0.4742, lr: 0.09938
iteration: 5, epoch: 7, best train: 0.661, best val: 0.4742, lr: 0.09922
iteration: 5, epoch: 8, best train: 0.661, best val: 0.4742, lr: 0.09904
iteration: 5, epoch: 9, best train: 0.661, best val: 0.4949, lr: 0.09884
iteration: 5, epoch: 10, best train: 0.73, best val: 0.4949, lr: 0.09862
iteration: 5, epoch: 11, best train: 0.73, best val: 0.5067, lr: 0.09838
iteration: 5, epoch: 12, best train: 0.731, best val: 0.543, lr: 0.09812
iteration: 5, epoch: 13, best train: 0.768, best val: 0.543, lr: 0.09785
iteration: 5, epoch: 14, best train: 0.768, best val: 0.543, lr: 0.09755
iteration: 5, epoch: 15, best train: 0.768, best val: 0.543, lr: 0.09724
iteration: 5, epoch: 16, best train: 0.768, best val: 0.5615, lr: 0.09691
iteration: 5, epoch: 17, best train: 0.774, best val: 0.5615, lr: 0.09656
iteration: 5, epoch: 18, best train: 0.8, best val: 0.5615, lr: 0.09619
iteration: 5, epoch: 19, best train: 0.8, best val: 0.5615, lr: 0.09581
iteration: 5, epoch: 20, best train: 0.801, best val: 0.5615, lr: 0.09541
iteration: 5, epoch: 21, best train: 0.819, best val: 0.58, lr: 0.09499
iteration: 5, epoch: 22, best train: 0.819, best val: 0.58, lr: 0.09455
iteration: 5, epoch: 23, best train: 0.819, best val: 0.58, lr: 0.0941
iteration: 5, epoch: 24, best train: 0.819, best val: 0.58, lr: 0.09362
iteration: 5, epoch: 25, best train: 0.819, best val: 0.58, lr: 0.09314
iteration: 5, epoch: 26, best train: 0.819, best val: 0.58, lr: 0.09263
iteration: 5, epoch: 27, best train: 0.819, best val: 0.58, lr: 0.09211
iteration: 5, epoch: 28, best train: 0.819, best val: 0.6004, lr: 0.09157
iteration: 5, epoch: 29, best train: 0.832, best val: 0.6004, lr: 0.09102
iteration: 5, epoch: 30, best train: 0.832, best val: 0.6004, lr: 0.09045
iteration: 5, epoch: 31, best train: 0.838, best val: 0.6004, lr: 0.08987
iteration: 5, epoch: 32, best train: 0.845, best val: 0.6004, lr: 0.08927
iteration: 5, epoch: 33, best train: 0.845, best val: 0.6004, lr: 0.08865
iteration: 5, epoch: 34, best train: 0.845, best val: 0.6004, lr: 0.08802
iteration: 5, epoch: 35, best train: 0.845, best val: 0.6004, lr: 0.08738
iteration: 5, epoch: 36, best train: 0.845, best val: 0.6004, lr: 0.08672
iteration: 5, epoch: 37, best train: 0.845, best val: 0.6004, lr: 0.08604
iteration: 5, epoch: 38, best train: 0.863, best val: 0.6004, lr: 0.08536
iteration: 5, epoch: 39, best train: 0.87, best val: 0.6004, lr: 0.08465
iteration: 5, epoch: 40, best train: 0.87, best val: 0.6004, lr: 0.08394
iteration: 5, epoch: 41, best train: 0.87, best val: 0.6004, lr: 0.08321
iteration: 5, epoch: 42, best train: 0.87, best val: 0.6004, lr: 0.08247
iteration: 5, epoch: 43, best train: 0.882, best val: 0.6004, lr: 0.08172
iteration: 5, epoch: 44, best train: 0.882, best val: 0.6004, lr: 0.08095
iteration: 5, epoch: 45, best train: 0.887, best val: 0.6004, lr: 0.08018
iteration: 5, epoch: 46, best train: 0.89, best val: 0.6004, lr: 0.07939
iteration: 5, epoch: 47, best train: 0.89, best val: 0.6004, lr: 0.07859
iteration: 5, epoch: 48, best train: 0.9, best val: 0.6004, lr: 0.07778
iteration: 5, epoch: 49, best train: 0.9, best val: 0.6004, lr: 0.07696
iteration: 5, epoch: 50, best train: 0.9, best val: 0.602, lr: 0.07612
iteration: 5, epoch: 51, best train: 0.9, best val: 0.602, lr: 0.07528
iteration: 5, epoch: 52, best train: 0.9, best val: 0.602, lr: 0.07443
iteration: 5, epoch: 53, best train: 0.9, best val: 0.602, lr: 0.07357
iteration: 5, epoch: 54, best train: 0.902, best val: 0.602, lr: 0.0727
iteration: 5, epoch: 55, best train: 0.902, best val: 0.602, lr: 0.07182
iteration: 5, epoch: 56, best train: 0.902, best val: 0.6115, lr: 0.07093
iteration: 5, epoch: 57, best train: 0.902, best val: 0.6115, lr: 0.07004
iteration: 5, epoch: 58, best train: 0.902, best val: 0.6186, lr: 0.06913
iteration: 5, epoch: 59, best train: 0.909, best val: 0.6186, lr: 0.06822
iteration: 5, epoch: 60, best train: 0.909, best val: 0.6186, lr: 0.06731
iteration: 5, epoch: 61, best train: 0.91, best val: 0.6247, lr: 0.06638
iteration: 5, epoch: 62, best train: 0.91, best val: 0.6247, lr: 0.06545
iteration: 5, epoch: 63, best train: 0.914, best val: 0.6247, lr: 0.06451
iteration: 5, epoch: 64, best train: 0.914, best val: 0.6247, lr: 0.06357
iteration: 5, epoch: 65, best train: 0.915, best val: 0.6247, lr: 0.06262
iteration: 5, epoch: 66, best train: 0.915, best val: 0.6247, lr: 0.06167
iteration: 5, epoch: 67, best train: 0.915, best val: 0.6247, lr: 0.06072
iteration: 5, epoch: 68, best train: 0.916, best val: 0.6247, lr: 0.05975
iteration: 5, epoch: 69, best train: 0.919, best val: 0.6247, lr: 0.05879
iteration: 5, epoch: 70, best train: 0.924, best val: 0.6247, lr: 0.05782
iteration: 5, epoch: 71, best train: 0.924, best val: 0.6247, lr: 0.05685
iteration: 5, epoch: 72, best train: 0.924, best val: 0.6247, lr: 0.05588
iteration: 5, epoch: 73, best train: 0.924, best val: 0.6247, lr: 0.0549
iteration: 5, epoch: 74, best train: 0.924, best val: 0.6247, lr: 0.05392
iteration: 5, epoch: 75, best train: 0.924, best val: 0.6405, lr: 0.05294
iteration: 5, epoch: 76, best train: 0.925, best val: 0.6405, lr: 0.05196
iteration: 5, epoch: 77, best train: 0.926, best val: 0.6405, lr: 0.05098
iteration: 5, epoch: 78, best train: 0.926, best val: 0.6405, lr: 0.05
iteration: 5, epoch: 79, best train: 0.934, best val: 0.6405, lr: 0.04902
iteration: 5, epoch: 80, best train: 0.934, best val: 0.6405, lr: 0.04804
iteration: 5, epoch: 81, best train: 0.934, best val: 0.6405, lr: 0.04706
iteration: 5, epoch: 82, best train: 0.934, best val: 0.6405, lr: 0.04608
iteration: 5, epoch: 83, best train: 0.934, best val: 0.6405, lr: 0.0451
iteration: 5, epoch: 84, best train: 0.934, best val: 0.6405, lr: 0.04412
iteration: 5, epoch: 85, best train: 0.934, best val: 0.6405, lr: 0.04315
iteration: 5, epoch: 86, best train: 0.934, best val: 0.6405, lr: 0.04218
iteration: 5, epoch: 87, best train: 0.934, best val: 0.6405, lr: 0.04121
iteration: 5, epoch: 88, best train: 0.934, best val: 0.6405, lr: 0.04025
iteration: 5, epoch: 89, best train: 0.934, best val: 0.6405, lr: 0.03928
iteration: 5, epoch: 90, best train: 0.934, best val: 0.6405, lr: 0.03833
iteration: 5, epoch: 91, best train: 0.934, best val: 0.6405, lr: 0.03738
iteration: 5, epoch: 92, best train: 0.939, best val: 0.6439, lr: 0.03643
iteration: 5, epoch: 93, best train: 0.939, best val: 0.6439, lr: 0.03549
iteration: 5, epoch: 94, best train: 0.945, best val: 0.6441, lr: 0.03455
iteration: 5, epoch: 95, best train: 0.945, best val: 0.6559, lr: 0.03362
iteration: 5, epoch: 96, best train: 0.945, best val: 0.6559, lr: 0.03269
iteration: 5, epoch: 97, best train: 0.945, best val: 0.6559, lr: 0.03178
iteration: 5, epoch: 98, best train: 0.945, best val: 0.6559, lr: 0.03087
iteration: 5, epoch: 99, best train: 0.945, best val: 0.6559, lr: 0.02996
iteration: 5, epoch: 100, best train: 0.945, best val: 0.6559, lr: 0.02907
iteration: 5, epoch: 101, best train: 0.945, best val: 0.6559, lr: 0.02818
iteration: 5, epoch: 102, best train: 0.945, best val: 0.6559, lr: 0.0273
iteration: 5, epoch: 103, best train: 0.945, best val: 0.6559, lr: 0.02643
iteration: 5, epoch: 104, best train: 0.945, best val: 0.6559, lr: 0.02557
iteration: 5, epoch: 105, best train: 0.945, best val: 0.6559, lr: 0.02472
iteration: 5, epoch: 106, best train: 0.945, best val: 0.6559, lr: 0.02388
iteration: 5, epoch: 107, best train: 0.948, best val: 0.6559, lr: 0.02304
iteration: 5, epoch: 108, best train: 0.953, best val: 0.6559, lr: 0.02222
iteration: 5, epoch: 109, best train: 0.953, best val: 0.6559, lr: 0.02141
iteration: 5, epoch: 110, best train: 0.953, best val: 0.6559, lr: 0.02061
iteration: 5, epoch: 111, best train: 0.953, best val: 0.6559, lr: 0.01982
iteration: 5, epoch: 112, best train: 0.961, best val: 0.6559, lr: 0.01905
iteration: 5, epoch: 113, best train: 0.961, best val: 0.6561, lr: 0.01828
iteration: 5, epoch: 114, best train: 0.961, best val: 0.6561, lr: 0.01753
iteration: 5, epoch: 115, best train: 0.961, best val: 0.6561, lr: 0.01679
iteration: 5, epoch: 116, best train: 0.961, best val: 0.6561, lr: 0.01606
iteration: 5, epoch: 117, best train: 0.961, best val: 0.6561, lr: 0.01535
iteration: 5, epoch: 118, best train: 0.961, best val: 0.6561, lr: 0.01464
iteration: 5, epoch: 119, best train: 0.961, best val: 0.6561, lr: 0.01396
iteration: 5, epoch: 120, best train: 0.961, best val: 0.6561, lr: 0.01328
iteration: 5, epoch: 121, best train: 0.961, best val: 0.6594, lr: 0.01262
iteration: 5, epoch: 122, best train: 0.961, best val: 0.6594, lr: 0.01198
iteration: 5, epoch: 123, best train: 0.961, best val: 0.6594, lr: 0.01135
iteration: 5, epoch: 124, best train: 0.962, best val: 0.6594, lr: 0.01073
iteration: 5, epoch: 125, best train: 0.962, best val: 0.6594, lr: 0.01013
iteration: 5, epoch: 126, best train: 0.962, best val: 0.6594, lr: 0.00955
iteration: 5, epoch: 127, best train: 0.962, best val: 0.6594, lr: 0.00898
iteration: 5, epoch: 128, best train: 0.962, best val: 0.6604, lr: 0.00843
iteration: 5, epoch: 129, best train: 0.962, best val: 0.6623, lr: 0.00789
iteration: 5, epoch: 130, best train: 0.962, best val: 0.6625, lr: 0.00737
iteration: 5, epoch: 131, best train: 0.962, best val: 0.6625, lr: 0.00686
iteration: 5, epoch: 132, best train: 0.962, best val: 0.6625, lr: 0.00638
iteration: 5, epoch: 133, best train: 0.962, best val: 0.6625, lr: 0.0059
iteration: 5, epoch: 134, best train: 0.969, best val: 0.6625, lr: 0.00545
iteration: 5, epoch: 135, best train: 0.969, best val: 0.6625, lr: 0.00501
iteration: 5, epoch: 136, best train: 0.969, best val: 0.6625, lr: 0.00459
iteration: 5, epoch: 137, best train: 0.969, best val: 0.6625, lr: 0.00419
iteration: 5, epoch: 138, best train: 0.969, best val: 0.6625, lr: 0.00381
iteration: 5, epoch: 139, best train: 0.969, best val: 0.6627, lr: 0.00344
iteration: 5, epoch: 140, best train: 0.972, best val: 0.6632, lr: 0.00309
iteration: 5, epoch: 141, best train: 0.972, best val: 0.6632, lr: 0.00276
iteration: 5, epoch: 142, best train: 0.972, best val: 0.6632, lr: 0.00245
iteration: 5, epoch: 143, best train: 0.972, best val: 0.6643, lr: 0.00215
iteration: 5, epoch: 144, best train: 0.972, best val: 0.6647, lr: 0.00188
iteration: 5, epoch: 145, best train: 0.972, best val: 0.6647, lr: 0.00162
iteration: 5, epoch: 146, best train: 0.972, best val: 0.6647, lr: 0.00138
iteration: 5, epoch: 147, best train: 0.972, best val: 0.6647, lr: 0.00116
iteration: 5, epoch: 148, best train: 0.972, best val: 0.6647, lr: 0.00096
iteration: 5, epoch: 149, best train: 0.972, best val: 0.6647, lr: 0.00078
iteration: 5, epoch: 150, best train: 0.972, best val: 0.6647, lr: 0.00062
iteration: 5, epoch: 151, best train: 0.972, best val: 0.6647, lr: 0.00047
iteration: 5, epoch: 152, best train: 0.972, best val: 0.6647, lr: 0.00035
iteration: 5, epoch: 153, best train: 0.972, best val: 0.6647, lr: 0.00024
iteration: 5, epoch: 154, best train: 0.972, best val: 0.6647, lr: 0.00015
iteration: 5, epoch: 155, best train: 0.972, best val: 0.6647, lr: 9e-05
iteration: 5, epoch: 156, best train: 0.972, best val: 0.6647, lr: 4e-05
iteration: 5, epoch: 157, best train: 0.972, best val: 0.6647, lr: 1e-05
iteration: 5, epoch: 158, best train: 0.972, best val: 0.6647, lr: 0.0
iteration: 5, epoch: 159, best train: 0.972, best val: 0.6652, lr: 1e-05
------------------------ Checkpoint 19  ------------------------
pre_conv.0.weight_mask 	|	active =  1066 	|	total =  1728 	|	layerwise sparsity =  0.6168981481481481
layer1.0.conv1.weight_mask 	|	active =  9663 	|	total =  36864 	|	layerwise sparsity =  0.2621256510416667
layer1.0.conv2.weight_mask 	|	active =  9663 	|	total =  36864 	|	layerwise sparsity =  0.2621256510416667
layer1.1.conv1.weight_mask 	|	active =  9663 	|	total =  36864 	|	layerwise sparsity =  0.2621256510416667
layer1.1.conv2.weight_mask 	|	active =  9663 	|	total =  36864 	|	layerwise sparsity =  0.2621256510416667
layer2.0.conv1.weight_mask 	|	active =  19327 	|	total =  73728 	|	layerwise sparsity =  0.2621392144097222
layer2.0.conv2.weight_mask 	|	active =  38654 	|	total =  147456 	|	layerwise sparsity =  0.2621392144097222
layer2.0.shortcut.0.weight_mask 	|	active =  5055 	|	total =  8192 	|	layerwise sparsity =  0.6170654296875
layer2.1.conv1.weight_mask 	|	active =  38654 	|	total =  147456 	|	layerwise sparsity =  0.2621392144097222
layer2.1.conv2.weight_mask 	|	active =  38654 	|	total =  147456 	|	layerwise sparsity =  0.2621392144097222
layer3.0.conv1.weight_mask 	|	active =  77310 	|	total =  294912 	|	layerwise sparsity =  0.26214599609375
layer3.0.conv2.weight_mask 	|	active =  126902 	|	total =  589824 	|	layerwise sparsity =  0.2151523166232639
layer3.0.shortcut.0.weight_mask 	|	active =  8590 	|	total =  32768 	|	layerwise sparsity =  0.26214599609375
layer3.1.conv1.weight_mask 	|	active =  126446 	|	total =  589824 	|	layerwise sparsity =  0.2143792046440972
layer3.1.conv2.weight_mask 	|	active =  130886 	|	total =  589824 	|	layerwise sparsity =  0.22190687391493055
layer4.0.conv1.weight_mask 	|	active =  291197 	|	total =  1179648 	|	layerwise sparsity =  0.2468507554796007
layer4.0.conv2.weight_mask 	|	active =  648573 	|	total =  2359296 	|	layerwise sparsity =  0.2749010721842448
layer4.0.shortcut.0.weight_mask 	|	active =  34360 	|	total =  131072 	|	layerwise sparsity =  0.26214599609375
layer4.1.conv1.weight_mask 	|	active =  668843 	|	total =  2359296 	|	layerwise sparsity =  0.28349261813693577
layer4.1.conv2.weight_mask 	|	active =  675888 	|	total =  2359296 	|	layerwise sparsity =  0.2864786783854167
------------------------ Checkpoint 20  ------------------------
best_val =  0.6652000000000001
------------------------ Checkpoint 21  ------------------------
pruning state: 6
remaining weight at start of iteration =  26.606284375125455
iteration: 6, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 6, epoch: 1, best train: 0.448, best val: 0.1006, lr: 0.09991
iteration: 6, epoch: 2, best train: 0.564, best val: 0.1169, lr: 0.09985
iteration: 6, epoch: 3, best train: 0.578, best val: 0.2159, lr: 0.09976
iteration: 6, epoch: 4, best train: 0.578, best val: 0.4026, lr: 0.09965
iteration: 6, epoch: 5, best train: 0.617, best val: 0.484, lr: 0.09953
iteration: 6, epoch: 6, best train: 0.677, best val: 0.4993, lr: 0.09938
iteration: 6, epoch: 7, best train: 0.732, best val: 0.538, lr: 0.09922
iteration: 6, epoch: 8, best train: 0.732, best val: 0.538, lr: 0.09904
iteration: 6, epoch: 9, best train: 0.732, best val: 0.538, lr: 0.09884
iteration: 6, epoch: 10, best train: 0.732, best val: 0.542, lr: 0.09862
iteration: 6, epoch: 11, best train: 0.747, best val: 0.5529, lr: 0.09838
iteration: 6, epoch: 12, best train: 0.791, best val: 0.5539, lr: 0.09812
iteration: 6, epoch: 13, best train: 0.791, best val: 0.5539, lr: 0.09785
iteration: 6, epoch: 14, best train: 0.791, best val: 0.5539, lr: 0.09755
iteration: 6, epoch: 15, best train: 0.791, best val: 0.5539, lr: 0.09724
iteration: 6, epoch: 16, best train: 0.791, best val: 0.5727, lr: 0.09691
iteration: 6, epoch: 17, best train: 0.802, best val: 0.5727, lr: 0.09656
iteration: 6, epoch: 18, best train: 0.802, best val: 0.5727, lr: 0.09619
iteration: 6, epoch: 19, best train: 0.802, best val: 0.5826, lr: 0.09581
iteration: 6, epoch: 20, best train: 0.814, best val: 0.5826, lr: 0.09541
iteration: 6, epoch: 21, best train: 0.814, best val: 0.5826, lr: 0.09499
iteration: 6, epoch: 22, best train: 0.821, best val: 0.5826, lr: 0.09455
iteration: 6, epoch: 23, best train: 0.848, best val: 0.5826, lr: 0.0941
iteration: 6, epoch: 24, best train: 0.848, best val: 0.5826, lr: 0.09362
iteration: 6, epoch: 25, best train: 0.848, best val: 0.5894, lr: 0.09314
iteration: 6, epoch: 26, best train: 0.86, best val: 0.5894, lr: 0.09263
iteration: 6, epoch: 27, best train: 0.86, best val: 0.5894, lr: 0.09211
iteration: 6, epoch: 28, best train: 0.86, best val: 0.6079, lr: 0.09157
iteration: 6, epoch: 29, best train: 0.86, best val: 0.6079, lr: 0.09102
iteration: 6, epoch: 30, best train: 0.865, best val: 0.6079, lr: 0.09045
iteration: 6, epoch: 31, best train: 0.865, best val: 0.6079, lr: 0.08987
iteration: 6, epoch: 32, best train: 0.883, best val: 0.6079, lr: 0.08927
iteration: 6, epoch: 33, best train: 0.883, best val: 0.6079, lr: 0.08865
iteration: 6, epoch: 34, best train: 0.883, best val: 0.6079, lr: 0.08802
iteration: 6, epoch: 35, best train: 0.883, best val: 0.6079, lr: 0.08738
iteration: 6, epoch: 36, best train: 0.883, best val: 0.6079, lr: 0.08672
iteration: 6, epoch: 37, best train: 0.885, best val: 0.6079, lr: 0.08604
iteration: 6, epoch: 38, best train: 0.885, best val: 0.6079, lr: 0.08536
iteration: 6, epoch: 39, best train: 0.887, best val: 0.6079, lr: 0.08465
iteration: 6, epoch: 40, best train: 0.887, best val: 0.6079, lr: 0.08394
iteration: 6, epoch: 41, best train: 0.887, best val: 0.6079, lr: 0.08321
iteration: 6, epoch: 42, best train: 0.891, best val: 0.6079, lr: 0.08247
iteration: 6, epoch: 43, best train: 0.893, best val: 0.6079, lr: 0.08172
iteration: 6, epoch: 44, best train: 0.893, best val: 0.6079, lr: 0.08095
iteration: 6, epoch: 45, best train: 0.893, best val: 0.6079, lr: 0.08018
iteration: 6, epoch: 46, best train: 0.893, best val: 0.6079, lr: 0.07939
iteration: 6, epoch: 47, best train: 0.894, best val: 0.612, lr: 0.07859
iteration: 6, epoch: 48, best train: 0.894, best val: 0.612, lr: 0.07778
iteration: 6, epoch: 49, best train: 0.901, best val: 0.612, lr: 0.07696
iteration: 6, epoch: 50, best train: 0.908, best val: 0.612, lr: 0.07612
iteration: 6, epoch: 51, best train: 0.908, best val: 0.612, lr: 0.07528
iteration: 6, epoch: 52, best train: 0.916, best val: 0.6149, lr: 0.07443
iteration: 6, epoch: 53, best train: 0.916, best val: 0.6149, lr: 0.07357
iteration: 6, epoch: 54, best train: 0.916, best val: 0.6149, lr: 0.0727
iteration: 6, epoch: 55, best train: 0.916, best val: 0.6149, lr: 0.07182
iteration: 6, epoch: 56, best train: 0.922, best val: 0.6149, lr: 0.07093
iteration: 6, epoch: 57, best train: 0.922, best val: 0.6359, lr: 0.07004
iteration: 6, epoch: 58, best train: 0.925, best val: 0.6398, lr: 0.06913
iteration: 6, epoch: 59, best train: 0.925, best val: 0.6398, lr: 0.06822
iteration: 6, epoch: 60, best train: 0.925, best val: 0.6398, lr: 0.06731
iteration: 6, epoch: 61, best train: 0.927, best val: 0.6398, lr: 0.06638
iteration: 6, epoch: 62, best train: 0.927, best val: 0.6398, lr: 0.06545
iteration: 6, epoch: 63, best train: 0.927, best val: 0.6398, lr: 0.06451
iteration: 6, epoch: 64, best train: 0.927, best val: 0.6398, lr: 0.06357
iteration: 6, epoch: 65, best train: 0.927, best val: 0.6398, lr: 0.06262
iteration: 6, epoch: 66, best train: 0.928, best val: 0.6398, lr: 0.06167
iteration: 6, epoch: 67, best train: 0.928, best val: 0.6398, lr: 0.06072
iteration: 6, epoch: 68, best train: 0.928, best val: 0.6398, lr: 0.05975
iteration: 6, epoch: 69, best train: 0.928, best val: 0.6398, lr: 0.05879
iteration: 6, epoch: 70, best train: 0.928, best val: 0.6398, lr: 0.05782
iteration: 6, epoch: 71, best train: 0.928, best val: 0.6398, lr: 0.05685
iteration: 6, epoch: 72, best train: 0.932, best val: 0.6398, lr: 0.05588
iteration: 6, epoch: 73, best train: 0.933, best val: 0.6398, lr: 0.0549
iteration: 6, epoch: 74, best train: 0.933, best val: 0.6398, lr: 0.05392
iteration: 6, epoch: 75, best train: 0.933, best val: 0.6398, lr: 0.05294
iteration: 6, epoch: 76, best train: 0.933, best val: 0.6398, lr: 0.05196
iteration: 6, epoch: 77, best train: 0.933, best val: 0.6398, lr: 0.05098
iteration: 6, epoch: 78, best train: 0.933, best val: 0.6398, lr: 0.05
iteration: 6, epoch: 79, best train: 0.933, best val: 0.6398, lr: 0.04902
iteration: 6, epoch: 80, best train: 0.936, best val: 0.6398, lr: 0.04804
iteration: 6, epoch: 81, best train: 0.936, best val: 0.6505, lr: 0.04706
iteration: 6, epoch: 82, best train: 0.94, best val: 0.6505, lr: 0.04608
iteration: 6, epoch: 83, best train: 0.94, best val: 0.6528, lr: 0.0451
iteration: 6, epoch: 84, best train: 0.94, best val: 0.653, lr: 0.04412
iteration: 6, epoch: 85, best train: 0.94, best val: 0.653, lr: 0.04315
iteration: 6, epoch: 86, best train: 0.94, best val: 0.653, lr: 0.04218
iteration: 6, epoch: 87, best train: 0.94, best val: 0.653, lr: 0.04121
iteration: 6, epoch: 88, best train: 0.947, best val: 0.653, lr: 0.04025
iteration: 6, epoch: 89, best train: 0.947, best val: 0.6535, lr: 0.03928
iteration: 6, epoch: 90, best train: 0.947, best val: 0.6535, lr: 0.03833
iteration: 6, epoch: 91, best train: 0.951, best val: 0.6535, lr: 0.03738
iteration: 6, epoch: 92, best train: 0.951, best val: 0.6535, lr: 0.03643
iteration: 6, epoch: 93, best train: 0.951, best val: 0.6535, lr: 0.03549
iteration: 6, epoch: 94, best train: 0.951, best val: 0.6535, lr: 0.03455
iteration: 6, epoch: 95, best train: 0.951, best val: 0.6535, lr: 0.03362
iteration: 6, epoch: 96, best train: 0.951, best val: 0.6552, lr: 0.03269
iteration: 6, epoch: 97, best train: 0.951, best val: 0.6552, lr: 0.03178
iteration: 6, epoch: 98, best train: 0.958, best val: 0.6556, lr: 0.03087
iteration: 6, epoch: 99, best train: 0.958, best val: 0.6556, lr: 0.02996
iteration: 6, epoch: 100, best train: 0.958, best val: 0.6556, lr: 0.02907
iteration: 6, epoch: 101, best train: 0.958, best val: 0.6576, lr: 0.02818
iteration: 6, epoch: 102, best train: 0.958, best val: 0.6576, lr: 0.0273
iteration: 6, epoch: 103, best train: 0.958, best val: 0.6576, lr: 0.02643
iteration: 6, epoch: 104, best train: 0.96, best val: 0.6576, lr: 0.02557
iteration: 6, epoch: 105, best train: 0.96, best val: 0.6576, lr: 0.02472
iteration: 6, epoch: 106, best train: 0.96, best val: 0.6576, lr: 0.02388
iteration: 6, epoch: 107, best train: 0.969, best val: 0.6576, lr: 0.02304
iteration: 6, epoch: 108, best train: 0.969, best val: 0.6576, lr: 0.02222
iteration: 6, epoch: 109, best train: 0.969, best val: 0.6601, lr: 0.02141
iteration: 6, epoch: 110, best train: 0.969, best val: 0.6601, lr: 0.02061
iteration: 6, epoch: 111, best train: 0.969, best val: 0.6601, lr: 0.01982
iteration: 6, epoch: 112, best train: 0.969, best val: 0.6601, lr: 0.01905
iteration: 6, epoch: 113, best train: 0.969, best val: 0.6638, lr: 0.01828
iteration: 6, epoch: 114, best train: 0.969, best val: 0.6638, lr: 0.01753
iteration: 6, epoch: 115, best train: 0.969, best val: 0.6638, lr: 0.01679
iteration: 6, epoch: 116, best train: 0.969, best val: 0.6638, lr: 0.01606
iteration: 6, epoch: 117, best train: 0.969, best val: 0.6641, lr: 0.01535
iteration: 6, epoch: 118, best train: 0.969, best val: 0.666, lr: 0.01464
iteration: 6, epoch: 119, best train: 0.969, best val: 0.6661, lr: 0.01396
iteration: 6, epoch: 120, best train: 0.969, best val: 0.6664, lr: 0.01328
iteration: 6, epoch: 121, best train: 0.969, best val: 0.6678, lr: 0.01262
iteration: 6, epoch: 122, best train: 0.969, best val: 0.6683, lr: 0.01198
iteration: 6, epoch: 123, best train: 0.969, best val: 0.6692, lr: 0.01135
iteration: 6, epoch: 124, best train: 0.969, best val: 0.6694, lr: 0.01073
iteration: 6, epoch: 125, best train: 0.969, best val: 0.6694, lr: 0.01013
iteration: 6, epoch: 126, best train: 0.969, best val: 0.6725, lr: 0.00955
iteration: 6, epoch: 127, best train: 0.969, best val: 0.6726, lr: 0.00898
iteration: 6, epoch: 128, best train: 0.969, best val: 0.6759, lr: 0.00843
iteration: 6, epoch: 129, best train: 0.97, best val: 0.6764, lr: 0.00789
iteration: 6, epoch: 130, best train: 0.97, best val: 0.6764, lr: 0.00737
iteration: 6, epoch: 131, best train: 0.97, best val: 0.6764, lr: 0.00686
iteration: 6, epoch: 132, best train: 0.97, best val: 0.6764, lr: 0.00638
iteration: 6, epoch: 133, best train: 0.97, best val: 0.6764, lr: 0.0059
iteration: 6, epoch: 134, best train: 0.97, best val: 0.6764, lr: 0.00545
iteration: 6, epoch: 135, best train: 0.97, best val: 0.6764, lr: 0.00501
iteration: 6, epoch: 136, best train: 0.97, best val: 0.6764, lr: 0.00459
iteration: 6, epoch: 137, best train: 0.97, best val: 0.6764, lr: 0.00419
iteration: 6, epoch: 138, best train: 0.97, best val: 0.6764, lr: 0.00381
iteration: 6, epoch: 139, best train: 0.97, best val: 0.6764, lr: 0.00344
iteration: 6, epoch: 140, best train: 0.97, best val: 0.6764, lr: 0.00309
iteration: 6, epoch: 141, best train: 0.97, best val: 0.6764, lr: 0.00276
iteration: 6, epoch: 142, best train: 0.97, best val: 0.6764, lr: 0.00245
iteration: 6, epoch: 143, best train: 0.97, best val: 0.6764, lr: 0.00215
iteration: 6, epoch: 144, best train: 0.97, best val: 0.6764, lr: 0.00188
iteration: 6, epoch: 145, best train: 0.97, best val: 0.6764, lr: 0.00162
iteration: 6, epoch: 146, best train: 0.97, best val: 0.6764, lr: 0.00138
iteration: 6, epoch: 147, best train: 0.97, best val: 0.6764, lr: 0.00116
iteration: 6, epoch: 148, best train: 0.97, best val: 0.6764, lr: 0.00096
iteration: 6, epoch: 149, best train: 0.97, best val: 0.6764, lr: 0.00078
iteration: 6, epoch: 150, best train: 0.97, best val: 0.6764, lr: 0.00062
iteration: 6, epoch: 151, best train: 0.97, best val: 0.6764, lr: 0.00047
iteration: 6, epoch: 152, best train: 0.97, best val: 0.6764, lr: 0.00035
iteration: 6, epoch: 153, best train: 0.97, best val: 0.6764, lr: 0.00024
iteration: 6, epoch: 154, best train: 0.97, best val: 0.6764, lr: 0.00015
iteration: 6, epoch: 155, best train: 0.97, best val: 0.6764, lr: 9e-05
iteration: 6, epoch: 156, best train: 0.97, best val: 0.6764, lr: 4e-05
iteration: 6, epoch: 157, best train: 0.97, best val: 0.6764, lr: 1e-05
iteration: 6, epoch: 158, best train: 0.97, best val: 0.6764, lr: 0.0
iteration: 6, epoch: 159, best train: 0.97, best val: 0.6764, lr: 1e-05
------------------------ Checkpoint 22  ------------------------
pre_conv.0.weight_mask 	|	active =  984 	|	total =  1728 	|	layerwise sparsity =  0.5694444444444444
layer1.0.conv1.weight_mask 	|	active =  7730 	|	total =  36864 	|	layerwise sparsity =  0.2096896701388889
layer1.0.conv2.weight_mask 	|	active =  7730 	|	total =  36864 	|	layerwise sparsity =  0.2096896701388889
layer1.1.conv1.weight_mask 	|	active =  7730 	|	total =  36864 	|	layerwise sparsity =  0.2096896701388889
layer1.1.conv2.weight_mask 	|	active =  7730 	|	total =  36864 	|	layerwise sparsity =  0.2096896701388889
layer2.0.conv1.weight_mask 	|	active =  15462 	|	total =  73728 	|	layerwise sparsity =  0.209716796875
layer2.0.conv2.weight_mask 	|	active =  30923 	|	total =  147456 	|	layerwise sparsity =  0.2097100151909722
layer2.0.shortcut.0.weight_mask 	|	active =  4664 	|	total =  8192 	|	layerwise sparsity =  0.5693359375
layer2.1.conv1.weight_mask 	|	active =  30923 	|	total =  147456 	|	layerwise sparsity =  0.2097100151909722
layer2.1.conv2.weight_mask 	|	active =  30923 	|	total =  147456 	|	layerwise sparsity =  0.2097100151909722
layer3.0.conv1.weight_mask 	|	active =  61848 	|	total =  294912 	|	layerwise sparsity =  0.209716796875
layer3.0.conv2.weight_mask 	|	active =  98233 	|	total =  589824 	|	layerwise sparsity =  0.1665462917751736
layer3.0.shortcut.0.weight_mask 	|	active =  6872 	|	total =  32768 	|	layerwise sparsity =  0.209716796875
layer3.1.conv1.weight_mask 	|	active =  97822 	|	total =  589824 	|	layerwise sparsity =  0.16584947374131945
layer3.1.conv2.weight_mask 	|	active =  101841 	|	total =  589824 	|	layerwise sparsity =  0.17266337076822916
layer4.0.conv1.weight_mask 	|	active =  230635 	|	total =  1179648 	|	layerwise sparsity =  0.19551171196831596
layer4.0.conv2.weight_mask 	|	active =  522984 	|	total =  2359296 	|	layerwise sparsity =  0.22166951497395834
layer4.0.shortcut.0.weight_mask 	|	active =  27488 	|	total =  131072 	|	layerwise sparsity =  0.209716796875
layer4.1.conv1.weight_mask 	|	active =  542102 	|	total =  2359296 	|	layerwise sparsity =  0.2297727796766493
layer4.1.conv2.weight_mask 	|	active =  548770 	|	total =  2359296 	|	layerwise sparsity =  0.2325990464952257
------------------------ Checkpoint 23  ------------------------
best_val =  0.6764
------------------------ Checkpoint 24  ------------------------
pruning state: 7
remaining weight at start of iteration =  21.358046862006276
iteration: 7, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 7, epoch: 1, best train: 0.577, best val: 0.1318, lr: 0.09991
iteration: 7, epoch: 2, best train: 0.579, best val: 0.1318, lr: 0.09985
iteration: 7, epoch: 3, best train: 0.579, best val: 0.3717, lr: 0.09976
iteration: 7, epoch: 4, best train: 0.579, best val: 0.4083, lr: 0.09965
iteration: 7, epoch: 5, best train: 0.625, best val: 0.494, lr: 0.09953
iteration: 7, epoch: 6, best train: 0.681, best val: 0.5109, lr: 0.09938
iteration: 7, epoch: 7, best train: 0.681, best val: 0.5109, lr: 0.09922
iteration: 7, epoch: 8, best train: 0.765, best val: 0.5694, lr: 0.09904
iteration: 7, epoch: 9, best train: 0.802, best val: 0.5694, lr: 0.09884
iteration: 7, epoch: 10, best train: 0.802, best val: 0.5694, lr: 0.09862
iteration: 7, epoch: 11, best train: 0.802, best val: 0.5694, lr: 0.09838
iteration: 7, epoch: 12, best train: 0.802, best val: 0.5694, lr: 0.09812
iteration: 7, epoch: 13, best train: 0.802, best val: 0.5843, lr: 0.09785
iteration: 7, epoch: 14, best train: 0.819, best val: 0.5855, lr: 0.09755
iteration: 7, epoch: 15, best train: 0.819, best val: 0.5855, lr: 0.09724
iteration: 7, epoch: 16, best train: 0.827, best val: 0.5855, lr: 0.09691
iteration: 7, epoch: 17, best train: 0.827, best val: 0.5855, lr: 0.09656
iteration: 7, epoch: 18, best train: 0.827, best val: 0.5873, lr: 0.09619
iteration: 7, epoch: 19, best train: 0.84, best val: 0.5873, lr: 0.09581
iteration: 7, epoch: 20, best train: 0.84, best val: 0.59, lr: 0.09541
iteration: 7, epoch: 21, best train: 0.84, best val: 0.59, lr: 0.09499
iteration: 7, epoch: 22, best train: 0.84, best val: 0.59, lr: 0.09455
iteration: 7, epoch: 23, best train: 0.844, best val: 0.59, lr: 0.0941
iteration: 7, epoch: 24, best train: 0.844, best val: 0.59, lr: 0.09362
iteration: 7, epoch: 25, best train: 0.855, best val: 0.59, lr: 0.09314
iteration: 7, epoch: 26, best train: 0.858, best val: 0.59, lr: 0.09263
iteration: 7, epoch: 27, best train: 0.872, best val: 0.6039, lr: 0.09211
iteration: 7, epoch: 28, best train: 0.872, best val: 0.6039, lr: 0.09157
iteration: 7, epoch: 29, best train: 0.872, best val: 0.6039, lr: 0.09102
iteration: 7, epoch: 30, best train: 0.872, best val: 0.6039, lr: 0.09045
iteration: 7, epoch: 31, best train: 0.873, best val: 0.6039, lr: 0.08987
iteration: 7, epoch: 32, best train: 0.876, best val: 0.6039, lr: 0.08927
iteration: 7, epoch: 33, best train: 0.876, best val: 0.6039, lr: 0.08865
iteration: 7, epoch: 34, best train: 0.878, best val: 0.6039, lr: 0.08802
iteration: 7, epoch: 35, best train: 0.879, best val: 0.6039, lr: 0.08738
iteration: 7, epoch: 36, best train: 0.879, best val: 0.6056, lr: 0.08672
iteration: 7, epoch: 37, best train: 0.898, best val: 0.6066, lr: 0.08604
iteration: 7, epoch: 38, best train: 0.898, best val: 0.6066, lr: 0.08536
iteration: 7, epoch: 39, best train: 0.898, best val: 0.6143, lr: 0.08465
iteration: 7, epoch: 40, best train: 0.898, best val: 0.6143, lr: 0.08394
iteration: 7, epoch: 41, best train: 0.914, best val: 0.6143, lr: 0.08321
iteration: 7, epoch: 42, best train: 0.914, best val: 0.6143, lr: 0.08247
iteration: 7, epoch: 43, best train: 0.914, best val: 0.6143, lr: 0.08172
iteration: 7, epoch: 44, best train: 0.914, best val: 0.6143, lr: 0.08095
iteration: 7, epoch: 45, best train: 0.914, best val: 0.6143, lr: 0.08018
iteration: 7, epoch: 46, best train: 0.914, best val: 0.625, lr: 0.07939
iteration: 7, epoch: 47, best train: 0.914, best val: 0.625, lr: 0.07859
iteration: 7, epoch: 48, best train: 0.914, best val: 0.625, lr: 0.07778
iteration: 7, epoch: 49, best train: 0.914, best val: 0.625, lr: 0.07696
iteration: 7, epoch: 50, best train: 0.914, best val: 0.625, lr: 0.07612
iteration: 7, epoch: 51, best train: 0.914, best val: 0.625, lr: 0.07528
iteration: 7, epoch: 52, best train: 0.914, best val: 0.625, lr: 0.07443
iteration: 7, epoch: 53, best train: 0.914, best val: 0.625, lr: 0.07357
iteration: 7, epoch: 54, best train: 0.914, best val: 0.633, lr: 0.0727
iteration: 7, epoch: 55, best train: 0.914, best val: 0.633, lr: 0.07182
iteration: 7, epoch: 56, best train: 0.919, best val: 0.633, lr: 0.07093
iteration: 7, epoch: 57, best train: 0.919, best val: 0.633, lr: 0.07004
iteration: 7, epoch: 58, best train: 0.919, best val: 0.633, lr: 0.06913
iteration: 7, epoch: 59, best train: 0.919, best val: 0.633, lr: 0.06822
iteration: 7, epoch: 60, best train: 0.919, best val: 0.633, lr: 0.06731
iteration: 7, epoch: 61, best train: 0.931, best val: 0.633, lr: 0.06638
iteration: 7, epoch: 62, best train: 0.931, best val: 0.633, lr: 0.06545
iteration: 7, epoch: 63, best train: 0.931, best val: 0.633, lr: 0.06451
iteration: 7, epoch: 64, best train: 0.931, best val: 0.633, lr: 0.06357
iteration: 7, epoch: 65, best train: 0.932, best val: 0.633, lr: 0.06262
iteration: 7, epoch: 66, best train: 0.932, best val: 0.633, lr: 0.06167
iteration: 7, epoch: 67, best train: 0.932, best val: 0.633, lr: 0.06072
iteration: 7, epoch: 68, best train: 0.936, best val: 0.6402, lr: 0.05975
iteration: 7, epoch: 69, best train: 0.936, best val: 0.6402, lr: 0.05879
iteration: 7, epoch: 70, best train: 0.941, best val: 0.6492, lr: 0.05782
iteration: 7, epoch: 71, best train: 0.941, best val: 0.6492, lr: 0.05685
iteration: 7, epoch: 72, best train: 0.941, best val: 0.6492, lr: 0.05588
iteration: 7, epoch: 73, best train: 0.941, best val: 0.6492, lr: 0.0549
iteration: 7, epoch: 74, best train: 0.941, best val: 0.6492, lr: 0.05392
iteration: 7, epoch: 75, best train: 0.941, best val: 0.6492, lr: 0.05294
iteration: 7, epoch: 76, best train: 0.941, best val: 0.6572, lr: 0.05196
iteration: 7, epoch: 77, best train: 0.941, best val: 0.6572, lr: 0.05098
iteration: 7, epoch: 78, best train: 0.941, best val: 0.6572, lr: 0.05
iteration: 7, epoch: 79, best train: 0.941, best val: 0.6572, lr: 0.04902
iteration: 7, epoch: 80, best train: 0.941, best val: 0.6572, lr: 0.04804
iteration: 7, epoch: 81, best train: 0.941, best val: 0.6572, lr: 0.04706
iteration: 7, epoch: 82, best train: 0.941, best val: 0.6572, lr: 0.04608
iteration: 7, epoch: 83, best train: 0.947, best val: 0.6572, lr: 0.0451
iteration: 7, epoch: 84, best train: 0.947, best val: 0.6606, lr: 0.04412
iteration: 7, epoch: 85, best train: 0.947, best val: 0.6606, lr: 0.04315
iteration: 7, epoch: 86, best train: 0.947, best val: 0.6606, lr: 0.04218
iteration: 7, epoch: 87, best train: 0.947, best val: 0.6606, lr: 0.04121
iteration: 7, epoch: 88, best train: 0.947, best val: 0.6606, lr: 0.04025
iteration: 7, epoch: 89, best train: 0.953, best val: 0.6606, lr: 0.03928
iteration: 7, epoch: 90, best train: 0.955, best val: 0.6606, lr: 0.03833
iteration: 7, epoch: 91, best train: 0.955, best val: 0.6606, lr: 0.03738
iteration: 7, epoch: 92, best train: 0.955, best val: 0.6606, lr: 0.03643
iteration: 7, epoch: 93, best train: 0.955, best val: 0.6606, lr: 0.03549
iteration: 7, epoch: 94, best train: 0.955, best val: 0.6606, lr: 0.03455
iteration: 7, epoch: 95, best train: 0.956, best val: 0.6606, lr: 0.03362
iteration: 7, epoch: 96, best train: 0.956, best val: 0.6606, lr: 0.03269
iteration: 7, epoch: 97, best train: 0.956, best val: 0.6606, lr: 0.03178
iteration: 7, epoch: 98, best train: 0.957, best val: 0.6615, lr: 0.03087
iteration: 7, epoch: 99, best train: 0.957, best val: 0.6655, lr: 0.02996
iteration: 7, epoch: 100, best train: 0.957, best val: 0.6689, lr: 0.02907
iteration: 7, epoch: 101, best train: 0.957, best val: 0.6689, lr: 0.02818
iteration: 7, epoch: 102, best train: 0.957, best val: 0.6689, lr: 0.0273
iteration: 7, epoch: 103, best train: 0.964, best val: 0.6709, lr: 0.02643
iteration: 7, epoch: 104, best train: 0.964, best val: 0.6709, lr: 0.02557
iteration: 7, epoch: 105, best train: 0.964, best val: 0.6709, lr: 0.02472
iteration: 7, epoch: 106, best train: 0.966, best val: 0.6709, lr: 0.02388
iteration: 7, epoch: 107, best train: 0.966, best val: 0.6709, lr: 0.02304
iteration: 7, epoch: 108, best train: 0.966, best val: 0.6709, lr: 0.02222
iteration: 7, epoch: 109, best train: 0.966, best val: 0.6709, lr: 0.02141
iteration: 7, epoch: 110, best train: 0.966, best val: 0.6709, lr: 0.02061
iteration: 7, epoch: 111, best train: 0.966, best val: 0.6709, lr: 0.01982
iteration: 7, epoch: 112, best train: 0.966, best val: 0.6709, lr: 0.01905
iteration: 7, epoch: 113, best train: 0.966, best val: 0.6709, lr: 0.01828
iteration: 7, epoch: 114, best train: 0.966, best val: 0.6709, lr: 0.01753
iteration: 7, epoch: 115, best train: 0.966, best val: 0.6709, lr: 0.01679
iteration: 7, epoch: 116, best train: 0.966, best val: 0.6721, lr: 0.01606
iteration: 7, epoch: 117, best train: 0.966, best val: 0.6725, lr: 0.01535
iteration: 7, epoch: 118, best train: 0.966, best val: 0.6745, lr: 0.01464
iteration: 7, epoch: 119, best train: 0.966, best val: 0.6745, lr: 0.01396
iteration: 7, epoch: 120, best train: 0.966, best val: 0.6745, lr: 0.01328
iteration: 7, epoch: 121, best train: 0.966, best val: 0.6745, lr: 0.01262
iteration: 7, epoch: 122, best train: 0.966, best val: 0.6745, lr: 0.01198
iteration: 7, epoch: 123, best train: 0.966, best val: 0.6745, lr: 0.01135
iteration: 7, epoch: 124, best train: 0.973, best val: 0.6745, lr: 0.01073
iteration: 7, epoch: 125, best train: 0.973, best val: 0.6745, lr: 0.01013
iteration: 7, epoch: 126, best train: 0.973, best val: 0.6745, lr: 0.00955
iteration: 7, epoch: 127, best train: 0.973, best val: 0.6745, lr: 0.00898
iteration: 7, epoch: 128, best train: 0.973, best val: 0.6756, lr: 0.00843
iteration: 7, epoch: 129, best train: 0.973, best val: 0.6756, lr: 0.00789
iteration: 7, epoch: 130, best train: 0.973, best val: 0.6756, lr: 0.00737
iteration: 7, epoch: 131, best train: 0.973, best val: 0.6756, lr: 0.00686
iteration: 7, epoch: 132, best train: 0.973, best val: 0.6756, lr: 0.00638
iteration: 7, epoch: 133, best train: 0.973, best val: 0.6756, lr: 0.0059
iteration: 7, epoch: 134, best train: 0.973, best val: 0.6756, lr: 0.00545
iteration: 7, epoch: 135, best train: 0.973, best val: 0.6756, lr: 0.00501
iteration: 7, epoch: 136, best train: 0.973, best val: 0.6756, lr: 0.00459
iteration: 7, epoch: 137, best train: 0.973, best val: 0.6756, lr: 0.00419
iteration: 7, epoch: 138, best train: 0.973, best val: 0.6756, lr: 0.00381
iteration: 7, epoch: 139, best train: 0.973, best val: 0.6756, lr: 0.00344
iteration: 7, epoch: 140, best train: 0.973, best val: 0.6756, lr: 0.00309
iteration: 7, epoch: 141, best train: 0.973, best val: 0.6756, lr: 0.00276
iteration: 7, epoch: 142, best train: 0.973, best val: 0.6756, lr: 0.00245
iteration: 7, epoch: 143, best train: 0.973, best val: 0.6756, lr: 0.00215
iteration: 7, epoch: 144, best train: 0.973, best val: 0.6756, lr: 0.00188
iteration: 7, epoch: 145, best train: 0.973, best val: 0.6756, lr: 0.00162
iteration: 7, epoch: 146, best train: 0.973, best val: 0.6756, lr: 0.00138
iteration: 7, epoch: 147, best train: 0.973, best val: 0.6756, lr: 0.00116
iteration: 7, epoch: 148, best train: 0.973, best val: 0.6756, lr: 0.00096
iteration: 7, epoch: 149, best train: 0.973, best val: 0.6756, lr: 0.00078
iteration: 7, epoch: 150, best train: 0.973, best val: 0.6763, lr: 0.00062
iteration: 7, epoch: 151, best train: 0.973, best val: 0.6763, lr: 0.00047
iteration: 7, epoch: 152, best train: 0.973, best val: 0.6765, lr: 0.00035
iteration: 7, epoch: 153, best train: 0.973, best val: 0.6767, lr: 0.00024
iteration: 7, epoch: 154, best train: 0.973, best val: 0.6767, lr: 0.00015
iteration: 7, epoch: 155, best train: 0.973, best val: 0.6767, lr: 9e-05
iteration: 7, epoch: 156, best train: 0.973, best val: 0.6767, lr: 4e-05
iteration: 7, epoch: 157, best train: 0.973, best val: 0.6767, lr: 1e-05
iteration: 7, epoch: 158, best train: 0.973, best val: 0.6767, lr: 0.0
iteration: 7, epoch: 159, best train: 0.973, best val: 0.6767, lr: 1e-05
------------------------ Checkpoint 25  ------------------------
pre_conv.0.weight_mask 	|	active =  908 	|	total =  1728 	|	layerwise sparsity =  0.5254629629629629
layer1.0.conv1.weight_mask 	|	active =  6184 	|	total =  36864 	|	layerwise sparsity =  0.1677517361111111
layer1.0.conv2.weight_mask 	|	active =  6184 	|	total =  36864 	|	layerwise sparsity =  0.1677517361111111
layer1.1.conv1.weight_mask 	|	active =  6184 	|	total =  36864 	|	layerwise sparsity =  0.1677517361111111
layer1.1.conv2.weight_mask 	|	active =  6184 	|	total =  36864 	|	layerwise sparsity =  0.1677517361111111
layer2.0.conv1.weight_mask 	|	active =  12370 	|	total =  73728 	|	layerwise sparsity =  0.1677788628472222
layer2.0.conv2.weight_mask 	|	active =  24738 	|	total =  147456 	|	layerwise sparsity =  0.16776529947916666
layer2.0.shortcut.0.weight_mask 	|	active =  4303 	|	total =  8192 	|	layerwise sparsity =  0.5252685546875
layer2.1.conv1.weight_mask 	|	active =  24738 	|	total =  147456 	|	layerwise sparsity =  0.16776529947916666
layer2.1.conv2.weight_mask 	|	active =  24738 	|	total =  147456 	|	layerwise sparsity =  0.16776529947916666
layer3.0.conv1.weight_mask 	|	active =  49478 	|	total =  294912 	|	layerwise sparsity =  0.16777208116319445
layer3.0.conv2.weight_mask 	|	active =  76041 	|	total =  589824 	|	layerwise sparsity =  0.1289215087890625
layer3.0.shortcut.0.weight_mask 	|	active =  5498 	|	total =  32768 	|	layerwise sparsity =  0.16778564453125
layer3.1.conv1.weight_mask 	|	active =  75678 	|	total =  589824 	|	layerwise sparsity =  0.12830607096354166
layer3.1.conv2.weight_mask 	|	active =  79241 	|	total =  589824 	|	layerwise sparsity =  0.1343468560112847
layer4.0.conv1.weight_mask 	|	active =  182669 	|	total =  1179648 	|	layerwise sparsity =  0.15485042995876735
layer4.0.conv2.weight_mask 	|	active =  421714 	|	total =  2359296 	|	layerwise sparsity =  0.17874569363064235
layer4.0.shortcut.0.weight_mask 	|	active =  21990 	|	total =  131072 	|	layerwise sparsity =  0.1677703857421875
layer4.1.conv1.weight_mask 	|	active =  439378 	|	total =  2359296 	|	layerwise sparsity =  0.18623267279730904
layer4.1.conv2.weight_mask 	|	active =  445559 	|	total =  2359296 	|	layerwise sparsity =  0.18885252210828993
------------------------ Checkpoint 26  ------------------------
best_val =  0.6766999999999999
------------------------ Checkpoint 27  ------------------------
pruning state: 8
remaining weight at start of iteration =  17.149719622282255
iteration: 8, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 8, epoch: 1, best train: 0.588, best val: 0.1099, lr: 0.09991
iteration: 8, epoch: 2, best train: 0.626, best val: 0.1369, lr: 0.09985
iteration: 8, epoch: 3, best train: 0.626, best val: 0.3204, lr: 0.09976
iteration: 8, epoch: 4, best train: 0.663, best val: 0.3575, lr: 0.09965
iteration: 8, epoch: 5, best train: 0.705, best val: 0.5345, lr: 0.09953
iteration: 8, epoch: 6, best train: 0.706, best val: 0.5356, lr: 0.09938
iteration: 8, epoch: 7, best train: 0.737, best val: 0.5356, lr: 0.09922
iteration: 8, epoch: 8, best train: 0.737, best val: 0.5356, lr: 0.09904
iteration: 8, epoch: 9, best train: 0.774, best val: 0.5774, lr: 0.09884
iteration: 8, epoch: 10, best train: 0.788, best val: 0.5774, lr: 0.09862
iteration: 8, epoch: 11, best train: 0.788, best val: 0.5774, lr: 0.09838
iteration: 8, epoch: 12, best train: 0.811, best val: 0.5774, lr: 0.09812
iteration: 8, epoch: 13, best train: 0.811, best val: 0.5774, lr: 0.09785
iteration: 8, epoch: 14, best train: 0.836, best val: 0.6017, lr: 0.09755
iteration: 8, epoch: 15, best train: 0.836, best val: 0.6017, lr: 0.09724
iteration: 8, epoch: 16, best train: 0.836, best val: 0.6017, lr: 0.09691
iteration: 8, epoch: 17, best train: 0.86, best val: 0.6146, lr: 0.09656
iteration: 8, epoch: 18, best train: 0.86, best val: 0.6146, lr: 0.09619
iteration: 8, epoch: 19, best train: 0.86, best val: 0.6146, lr: 0.09581
iteration: 8, epoch: 20, best train: 0.869, best val: 0.6146, lr: 0.09541
iteration: 8, epoch: 21, best train: 0.874, best val: 0.6146, lr: 0.09499
iteration: 8, epoch: 22, best train: 0.874, best val: 0.6146, lr: 0.09455
iteration: 8, epoch: 23, best train: 0.874, best val: 0.6146, lr: 0.0941
iteration: 8, epoch: 24, best train: 0.874, best val: 0.6146, lr: 0.09362
iteration: 8, epoch: 25, best train: 0.874, best val: 0.6146, lr: 0.09314
iteration: 8, epoch: 26, best train: 0.874, best val: 0.6146, lr: 0.09263
iteration: 8, epoch: 27, best train: 0.874, best val: 0.6146, lr: 0.09211
iteration: 8, epoch: 28, best train: 0.879, best val: 0.6146, lr: 0.09157
iteration: 8, epoch: 29, best train: 0.89, best val: 0.6259, lr: 0.09102
iteration: 8, epoch: 30, best train: 0.89, best val: 0.6259, lr: 0.09045
iteration: 8, epoch: 31, best train: 0.89, best val: 0.6259, lr: 0.08987
iteration: 8, epoch: 32, best train: 0.89, best val: 0.6259, lr: 0.08927
iteration: 8, epoch: 33, best train: 0.905, best val: 0.6259, lr: 0.08865
iteration: 8, epoch: 34, best train: 0.905, best val: 0.6259, lr: 0.08802
iteration: 8, epoch: 35, best train: 0.913, best val: 0.6259, lr: 0.08738
iteration: 8, epoch: 36, best train: 0.913, best val: 0.6259, lr: 0.08672
iteration: 8, epoch: 37, best train: 0.913, best val: 0.6259, lr: 0.08604
iteration: 8, epoch: 38, best train: 0.913, best val: 0.6259, lr: 0.08536
iteration: 8, epoch: 39, best train: 0.913, best val: 0.6259, lr: 0.08465
iteration: 8, epoch: 40, best train: 0.913, best val: 0.6259, lr: 0.08394
iteration: 8, epoch: 41, best train: 0.913, best val: 0.6291, lr: 0.08321
iteration: 8, epoch: 42, best train: 0.913, best val: 0.6291, lr: 0.08247
iteration: 8, epoch: 43, best train: 0.919, best val: 0.6291, lr: 0.08172
iteration: 8, epoch: 44, best train: 0.919, best val: 0.6291, lr: 0.08095
iteration: 8, epoch: 45, best train: 0.919, best val: 0.6291, lr: 0.08018
iteration: 8, epoch: 46, best train: 0.919, best val: 0.6291, lr: 0.07939
iteration: 8, epoch: 47, best train: 0.919, best val: 0.6291, lr: 0.07859
iteration: 8, epoch: 48, best train: 0.919, best val: 0.6291, lr: 0.07778
iteration: 8, epoch: 49, best train: 0.922, best val: 0.6291, lr: 0.07696
iteration: 8, epoch: 50, best train: 0.922, best val: 0.6291, lr: 0.07612
iteration: 8, epoch: 51, best train: 0.922, best val: 0.6359, lr: 0.07528
iteration: 8, epoch: 52, best train: 0.929, best val: 0.6359, lr: 0.07443
iteration: 8, epoch: 53, best train: 0.929, best val: 0.6359, lr: 0.07357
iteration: 8, epoch: 54, best train: 0.929, best val: 0.6359, lr: 0.0727
iteration: 8, epoch: 55, best train: 0.929, best val: 0.6359, lr: 0.07182
iteration: 8, epoch: 56, best train: 0.929, best val: 0.6359, lr: 0.07093
iteration: 8, epoch: 57, best train: 0.929, best val: 0.6359, lr: 0.07004
iteration: 8, epoch: 58, best train: 0.93, best val: 0.6359, lr: 0.06913
iteration: 8, epoch: 59, best train: 0.93, best val: 0.6359, lr: 0.06822
iteration: 8, epoch: 60, best train: 0.93, best val: 0.6359, lr: 0.06731
iteration: 8, epoch: 61, best train: 0.93, best val: 0.6359, lr: 0.06638
iteration: 8, epoch: 62, best train: 0.93, best val: 0.6502, lr: 0.06545
iteration: 8, epoch: 63, best train: 0.93, best val: 0.6502, lr: 0.06451
iteration: 8, epoch: 64, best train: 0.93, best val: 0.6502, lr: 0.06357
iteration: 8, epoch: 65, best train: 0.93, best val: 0.6511, lr: 0.06262
iteration: 8, epoch: 66, best train: 0.938, best val: 0.6511, lr: 0.06167
iteration: 8, epoch: 67, best train: 0.938, best val: 0.6511, lr: 0.06072
iteration: 8, epoch: 68, best train: 0.938, best val: 0.6511, lr: 0.05975
iteration: 8, epoch: 69, best train: 0.938, best val: 0.6511, lr: 0.05879
iteration: 8, epoch: 70, best train: 0.938, best val: 0.6511, lr: 0.05782
iteration: 8, epoch: 71, best train: 0.938, best val: 0.6511, lr: 0.05685
iteration: 8, epoch: 72, best train: 0.943, best val: 0.6511, lr: 0.05588
iteration: 8, epoch: 73, best train: 0.943, best val: 0.6511, lr: 0.0549
iteration: 8, epoch: 74, best train: 0.943, best val: 0.6511, lr: 0.05392
iteration: 8, epoch: 75, best train: 0.951, best val: 0.6511, lr: 0.05294
iteration: 8, epoch: 76, best train: 0.951, best val: 0.6539, lr: 0.05196
iteration: 8, epoch: 77, best train: 0.951, best val: 0.654, lr: 0.05098
iteration: 8, epoch: 78, best train: 0.951, best val: 0.654, lr: 0.05
iteration: 8, epoch: 79, best train: 0.951, best val: 0.6579, lr: 0.04902
iteration: 8, epoch: 80, best train: 0.951, best val: 0.6579, lr: 0.04804
iteration: 8, epoch: 81, best train: 0.951, best val: 0.6579, lr: 0.04706
iteration: 8, epoch: 82, best train: 0.951, best val: 0.6579, lr: 0.04608
iteration: 8, epoch: 83, best train: 0.951, best val: 0.6579, lr: 0.0451
iteration: 8, epoch: 84, best train: 0.951, best val: 0.6605, lr: 0.04412
iteration: 8, epoch: 85, best train: 0.951, best val: 0.6605, lr: 0.04315
iteration: 8, epoch: 86, best train: 0.951, best val: 0.6605, lr: 0.04218
iteration: 8, epoch: 87, best train: 0.957, best val: 0.6611, lr: 0.04121
iteration: 8, epoch: 88, best train: 0.957, best val: 0.6611, lr: 0.04025
iteration: 8, epoch: 89, best train: 0.957, best val: 0.6674, lr: 0.03928
iteration: 8, epoch: 90, best train: 0.957, best val: 0.6674, lr: 0.03833
iteration: 8, epoch: 91, best train: 0.957, best val: 0.6674, lr: 0.03738
iteration: 8, epoch: 92, best train: 0.963, best val: 0.6674, lr: 0.03643
iteration: 8, epoch: 93, best train: 0.963, best val: 0.6684, lr: 0.03549
iteration: 8, epoch: 94, best train: 0.963, best val: 0.6733, lr: 0.03455
iteration: 8, epoch: 95, best train: 0.963, best val: 0.6733, lr: 0.03362
iteration: 8, epoch: 96, best train: 0.964, best val: 0.6733, lr: 0.03269
iteration: 8, epoch: 97, best train: 0.964, best val: 0.6733, lr: 0.03178
iteration: 8, epoch: 98, best train: 0.964, best val: 0.6733, lr: 0.03087
iteration: 8, epoch: 99, best train: 0.964, best val: 0.6733, lr: 0.02996
iteration: 8, epoch: 100, best train: 0.966, best val: 0.6733, lr: 0.02907
iteration: 8, epoch: 101, best train: 0.966, best val: 0.6733, lr: 0.02818
iteration: 8, epoch: 102, best train: 0.966, best val: 0.6733, lr: 0.0273
iteration: 8, epoch: 103, best train: 0.966, best val: 0.6733, lr: 0.02643
iteration: 8, epoch: 104, best train: 0.966, best val: 0.6733, lr: 0.02557
iteration: 8, epoch: 105, best train: 0.966, best val: 0.6733, lr: 0.02472
iteration: 8, epoch: 106, best train: 0.966, best val: 0.6747, lr: 0.02388
iteration: 8, epoch: 107, best train: 0.966, best val: 0.6747, lr: 0.02304
iteration: 8, epoch: 108, best train: 0.966, best val: 0.6748, lr: 0.02222
iteration: 8, epoch: 109, best train: 0.966, best val: 0.6748, lr: 0.02141
iteration: 8, epoch: 110, best train: 0.97, best val: 0.6748, lr: 0.02061
iteration: 8, epoch: 111, best train: 0.97, best val: 0.6748, lr: 0.01982
iteration: 8, epoch: 112, best train: 0.97, best val: 0.6748, lr: 0.01905
iteration: 8, epoch: 113, best train: 0.97, best val: 0.6748, lr: 0.01828
iteration: 8, epoch: 114, best train: 0.97, best val: 0.6748, lr: 0.01753
iteration: 8, epoch: 115, best train: 0.97, best val: 0.6748, lr: 0.01679
iteration: 8, epoch: 116, best train: 0.97, best val: 0.6748, lr: 0.01606
iteration: 8, epoch: 117, best train: 0.97, best val: 0.6748, lr: 0.01535
iteration: 8, epoch: 118, best train: 0.97, best val: 0.6748, lr: 0.01464
iteration: 8, epoch: 119, best train: 0.97, best val: 0.6748, lr: 0.01396
iteration: 8, epoch: 120, best train: 0.97, best val: 0.6748, lr: 0.01328
iteration: 8, epoch: 121, best train: 0.97, best val: 0.6748, lr: 0.01262
iteration: 8, epoch: 122, best train: 0.97, best val: 0.6748, lr: 0.01198
iteration: 8, epoch: 123, best train: 0.97, best val: 0.6748, lr: 0.01135
iteration: 8, epoch: 124, best train: 0.97, best val: 0.6768, lr: 0.01073
iteration: 8, epoch: 125, best train: 0.97, best val: 0.6768, lr: 0.01013
iteration: 8, epoch: 126, best train: 0.97, best val: 0.6795, lr: 0.00955
iteration: 8, epoch: 127, best train: 0.973, best val: 0.6799, lr: 0.00898
iteration: 8, epoch: 128, best train: 0.973, best val: 0.6799, lr: 0.00843
iteration: 8, epoch: 129, best train: 0.973, best val: 0.6799, lr: 0.00789
iteration: 8, epoch: 130, best train: 0.973, best val: 0.6799, lr: 0.00737
iteration: 8, epoch: 131, best train: 0.973, best val: 0.6799, lr: 0.00686
iteration: 8, epoch: 132, best train: 0.973, best val: 0.6799, lr: 0.00638
iteration: 8, epoch: 133, best train: 0.973, best val: 0.6799, lr: 0.0059
iteration: 8, epoch: 134, best train: 0.973, best val: 0.6803, lr: 0.00545
iteration: 8, epoch: 135, best train: 0.973, best val: 0.6803, lr: 0.00501
iteration: 8, epoch: 136, best train: 0.973, best val: 0.6803, lr: 0.00459
iteration: 8, epoch: 137, best train: 0.973, best val: 0.6803, lr: 0.00419
iteration: 8, epoch: 138, best train: 0.973, best val: 0.6804, lr: 0.00381
iteration: 8, epoch: 139, best train: 0.973, best val: 0.6807, lr: 0.00344
iteration: 8, epoch: 140, best train: 0.973, best val: 0.6807, lr: 0.00309
iteration: 8, epoch: 141, best train: 0.973, best val: 0.6819, lr: 0.00276
iteration: 8, epoch: 142, best train: 0.973, best val: 0.6819, lr: 0.00245
iteration: 8, epoch: 143, best train: 0.973, best val: 0.6819, lr: 0.00215
iteration: 8, epoch: 144, best train: 0.973, best val: 0.6819, lr: 0.00188
iteration: 8, epoch: 145, best train: 0.973, best val: 0.6819, lr: 0.00162
iteration: 8, epoch: 146, best train: 0.976, best val: 0.6819, lr: 0.00138
iteration: 8, epoch: 147, best train: 0.976, best val: 0.6819, lr: 0.00116
iteration: 8, epoch: 148, best train: 0.976, best val: 0.6819, lr: 0.00096
iteration: 8, epoch: 149, best train: 0.976, best val: 0.6819, lr: 0.00078
iteration: 8, epoch: 150, best train: 0.976, best val: 0.6819, lr: 0.00062
iteration: 8, epoch: 151, best train: 0.976, best val: 0.6829, lr: 0.00047
iteration: 8, epoch: 152, best train: 0.976, best val: 0.6833, lr: 0.00035
iteration: 8, epoch: 153, best train: 0.976, best val: 0.6833, lr: 0.00024
iteration: 8, epoch: 154, best train: 0.976, best val: 0.6833, lr: 0.00015
iteration: 8, epoch: 155, best train: 0.976, best val: 0.6833, lr: 9e-05
iteration: 8, epoch: 156, best train: 0.976, best val: 0.6833, lr: 4e-05
iteration: 8, epoch: 157, best train: 0.976, best val: 0.6833, lr: 1e-05
iteration: 8, epoch: 158, best train: 0.976, best val: 0.6833, lr: 0.0
iteration: 8, epoch: 159, best train: 0.976, best val: 0.6833, lr: 1e-05
------------------------ Checkpoint 28  ------------------------
pre_conv.0.weight_mask 	|	active =  838 	|	total =  1728 	|	layerwise sparsity =  0.4849537037037037
layer1.0.conv1.weight_mask 	|	active =  4947 	|	total =  36864 	|	layerwise sparsity =  0.13419596354166666
layer1.0.conv2.weight_mask 	|	active =  4947 	|	total =  36864 	|	layerwise sparsity =  0.13419596354166666
layer1.1.conv1.weight_mask 	|	active =  4947 	|	total =  36864 	|	layerwise sparsity =  0.13419596354166666
layer1.1.conv2.weight_mask 	|	active =  4947 	|	total =  36864 	|	layerwise sparsity =  0.13419596354166666
layer2.0.conv1.weight_mask 	|	active =  9896 	|	total =  73728 	|	layerwise sparsity =  0.1342230902777778
layer2.0.conv2.weight_mask 	|	active =  19790 	|	total =  147456 	|	layerwise sparsity =  0.1342095269097222
layer2.0.shortcut.0.weight_mask 	|	active =  3970 	|	total =  8192 	|	layerwise sparsity =  0.484619140625
layer2.1.conv1.weight_mask 	|	active =  19790 	|	total =  147456 	|	layerwise sparsity =  0.1342095269097222
layer2.1.conv2.weight_mask 	|	active =  19790 	|	total =  147456 	|	layerwise sparsity =  0.1342095269097222
layer3.0.conv1.weight_mask 	|	active =  39582 	|	total =  294912 	|	layerwise sparsity =  0.13421630859375
layer3.0.conv2.weight_mask 	|	active =  58863 	|	total =  589824 	|	layerwise sparsity =  0.09979756673177083
layer3.0.shortcut.0.weight_mask 	|	active =  4398 	|	total =  32768 	|	layerwise sparsity =  0.13421630859375
layer3.1.conv1.weight_mask 	|	active =  58546 	|	total =  589824 	|	layerwise sparsity =  0.09926011827256945
layer3.1.conv2.weight_mask 	|	active =  61656 	|	total =  589824 	|	layerwise sparsity =  0.10453287760416667
layer4.0.conv1.weight_mask 	|	active =  144678 	|	total =  1179648 	|	layerwise sparsity =  0.12264506022135417
layer4.0.conv2.weight_mask 	|	active =  340054 	|	total =  2359296 	|	layerwise sparsity =  0.14413367377387154
layer4.0.shortcut.0.weight_mask 	|	active =  17592 	|	total =  131072 	|	layerwise sparsity =  0.13421630859375
layer4.1.conv1.weight_mask 	|	active =  356119 	|	total =  2359296 	|	layerwise sparsity =  0.15094290839301217
layer4.1.conv2.weight_mask 	|	active =  361760 	|	total =  2359296 	|	layerwise sparsity =  0.15333387586805555
------------------------ Checkpoint 29  ------------------------
best_val =  0.6832999999999998
------------------------ Checkpoint 30  ------------------------
pruning state: 9
remaining weight at start of iteration =  13.774335008000548
iteration: 9, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 9, epoch: 1, best train: 0.592, best val: 0.1, lr: 0.09991
iteration: 9, epoch: 2, best train: 0.592, best val: 0.1502, lr: 0.09985
iteration: 9, epoch: 3, best train: 0.592, best val: 0.2494, lr: 0.09976
iteration: 9, epoch: 4, best train: 0.601, best val: 0.4323, lr: 0.09965
iteration: 9, epoch: 5, best train: 0.691, best val: 0.4776, lr: 0.09953
iteration: 9, epoch: 6, best train: 0.727, best val: 0.4848, lr: 0.09938
iteration: 9, epoch: 7, best train: 0.727, best val: 0.5359, lr: 0.09922
iteration: 9, epoch: 8, best train: 0.765, best val: 0.5359, lr: 0.09904
iteration: 9, epoch: 9, best train: 0.765, best val: 0.5359, lr: 0.09884
iteration: 9, epoch: 10, best train: 0.765, best val: 0.5359, lr: 0.09862
iteration: 9, epoch: 11, best train: 0.797, best val: 0.5797, lr: 0.09838
iteration: 9, epoch: 12, best train: 0.813, best val: 0.5797, lr: 0.09812
iteration: 9, epoch: 13, best train: 0.839, best val: 0.6041, lr: 0.09785
iteration: 9, epoch: 14, best train: 0.839, best val: 0.6041, lr: 0.09755
iteration: 9, epoch: 15, best train: 0.839, best val: 0.6041, lr: 0.09724
iteration: 9, epoch: 16, best train: 0.842, best val: 0.6041, lr: 0.09691
iteration: 9, epoch: 17, best train: 0.863, best val: 0.6041, lr: 0.09656
iteration: 9, epoch: 18, best train: 0.874, best val: 0.6041, lr: 0.09619
iteration: 9, epoch: 19, best train: 0.876, best val: 0.6041, lr: 0.09581
iteration: 9, epoch: 20, best train: 0.89, best val: 0.6041, lr: 0.09541
iteration: 9, epoch: 21, best train: 0.89, best val: 0.6041, lr: 0.09499
iteration: 9, epoch: 22, best train: 0.89, best val: 0.6041, lr: 0.09455
iteration: 9, epoch: 23, best train: 0.89, best val: 0.6041, lr: 0.0941
iteration: 9, epoch: 24, best train: 0.89, best val: 0.6041, lr: 0.09362
iteration: 9, epoch: 25, best train: 0.89, best val: 0.6272, lr: 0.09314
iteration: 9, epoch: 26, best train: 0.89, best val: 0.6272, lr: 0.09263
iteration: 9, epoch: 27, best train: 0.89, best val: 0.6272, lr: 0.09211
iteration: 9, epoch: 28, best train: 0.895, best val: 0.6272, lr: 0.09157
iteration: 9, epoch: 29, best train: 0.895, best val: 0.6272, lr: 0.09102
iteration: 9, epoch: 30, best train: 0.895, best val: 0.6272, lr: 0.09045
iteration: 9, epoch: 31, best train: 0.895, best val: 0.6272, lr: 0.08987
iteration: 9, epoch: 32, best train: 0.895, best val: 0.6272, lr: 0.08927
iteration: 9, epoch: 33, best train: 0.902, best val: 0.6272, lr: 0.08865
iteration: 9, epoch: 34, best train: 0.907, best val: 0.6272, lr: 0.08802
iteration: 9, epoch: 35, best train: 0.907, best val: 0.6272, lr: 0.08738
iteration: 9, epoch: 36, best train: 0.907, best val: 0.6272, lr: 0.08672
iteration: 9, epoch: 37, best train: 0.916, best val: 0.6272, lr: 0.08604
iteration: 9, epoch: 38, best train: 0.916, best val: 0.6272, lr: 0.08536
iteration: 9, epoch: 39, best train: 0.916, best val: 0.6295, lr: 0.08465
iteration: 9, epoch: 40, best train: 0.916, best val: 0.6295, lr: 0.08394
iteration: 9, epoch: 41, best train: 0.916, best val: 0.6295, lr: 0.08321
iteration: 9, epoch: 42, best train: 0.916, best val: 0.6348, lr: 0.08247
iteration: 9, epoch: 43, best train: 0.916, best val: 0.6348, lr: 0.08172
iteration: 9, epoch: 44, best train: 0.921, best val: 0.6348, lr: 0.08095
iteration: 9, epoch: 45, best train: 0.921, best val: 0.636, lr: 0.08018
iteration: 9, epoch: 46, best train: 0.921, best val: 0.636, lr: 0.07939
iteration: 9, epoch: 47, best train: 0.921, best val: 0.636, lr: 0.07859
iteration: 9, epoch: 48, best train: 0.921, best val: 0.636, lr: 0.07778
iteration: 9, epoch: 49, best train: 0.921, best val: 0.636, lr: 0.07696
iteration: 9, epoch: 50, best train: 0.921, best val: 0.6363, lr: 0.07612
iteration: 9, epoch: 51, best train: 0.921, best val: 0.6363, lr: 0.07528
iteration: 9, epoch: 52, best train: 0.924, best val: 0.6399, lr: 0.07443
iteration: 9, epoch: 53, best train: 0.924, best val: 0.6427, lr: 0.07357
iteration: 9, epoch: 54, best train: 0.928, best val: 0.6427, lr: 0.0727
iteration: 9, epoch: 55, best train: 0.928, best val: 0.6427, lr: 0.07182
iteration: 9, epoch: 56, best train: 0.928, best val: 0.6456, lr: 0.07093
iteration: 9, epoch: 57, best train: 0.928, best val: 0.6456, lr: 0.07004
iteration: 9, epoch: 58, best train: 0.928, best val: 0.6469, lr: 0.06913
iteration: 9, epoch: 59, best train: 0.928, best val: 0.6469, lr: 0.06822
iteration: 9, epoch: 60, best train: 0.928, best val: 0.6469, lr: 0.06731
iteration: 9, epoch: 61, best train: 0.928, best val: 0.6469, lr: 0.06638
iteration: 9, epoch: 62, best train: 0.928, best val: 0.6469, lr: 0.06545
iteration: 9, epoch: 63, best train: 0.938, best val: 0.6469, lr: 0.06451
iteration: 9, epoch: 64, best train: 0.938, best val: 0.6469, lr: 0.06357
iteration: 9, epoch: 65, best train: 0.938, best val: 0.6562, lr: 0.06262
iteration: 9, epoch: 66, best train: 0.946, best val: 0.6562, lr: 0.06167
iteration: 9, epoch: 67, best train: 0.946, best val: 0.6562, lr: 0.06072
iteration: 9, epoch: 68, best train: 0.946, best val: 0.6562, lr: 0.05975
iteration: 9, epoch: 69, best train: 0.946, best val: 0.6562, lr: 0.05879
iteration: 9, epoch: 70, best train: 0.946, best val: 0.6562, lr: 0.05782
iteration: 9, epoch: 71, best train: 0.946, best val: 0.6597, lr: 0.05685
iteration: 9, epoch: 72, best train: 0.946, best val: 0.6597, lr: 0.05588
iteration: 9, epoch: 73, best train: 0.946, best val: 0.6597, lr: 0.0549
iteration: 9, epoch: 74, best train: 0.957, best val: 0.6597, lr: 0.05392
iteration: 9, epoch: 75, best train: 0.957, best val: 0.6693, lr: 0.05294
iteration: 9, epoch: 76, best train: 0.957, best val: 0.6693, lr: 0.05196
iteration: 9, epoch: 77, best train: 0.957, best val: 0.6693, lr: 0.05098
iteration: 9, epoch: 78, best train: 0.957, best val: 0.6693, lr: 0.05
iteration: 9, epoch: 79, best train: 0.957, best val: 0.6693, lr: 0.04902
iteration: 9, epoch: 80, best train: 0.957, best val: 0.6693, lr: 0.04804
iteration: 9, epoch: 81, best train: 0.957, best val: 0.6693, lr: 0.04706
iteration: 9, epoch: 82, best train: 0.957, best val: 0.6693, lr: 0.04608
iteration: 9, epoch: 83, best train: 0.961, best val: 0.6693, lr: 0.0451
iteration: 9, epoch: 84, best train: 0.961, best val: 0.6698, lr: 0.04412
iteration: 9, epoch: 85, best train: 0.961, best val: 0.6755, lr: 0.04315
iteration: 9, epoch: 86, best train: 0.961, best val: 0.6762, lr: 0.04218
iteration: 9, epoch: 87, best train: 0.961, best val: 0.6765, lr: 0.04121
iteration: 9, epoch: 88, best train: 0.961, best val: 0.6765, lr: 0.04025
iteration: 9, epoch: 89, best train: 0.964, best val: 0.6817, lr: 0.03928
iteration: 9, epoch: 90, best train: 0.964, best val: 0.6817, lr: 0.03833
iteration: 9, epoch: 91, best train: 0.964, best val: 0.6817, lr: 0.03738
iteration: 9, epoch: 92, best train: 0.964, best val: 0.6817, lr: 0.03643
iteration: 9, epoch: 93, best train: 0.964, best val: 0.6817, lr: 0.03549
iteration: 9, epoch: 94, best train: 0.964, best val: 0.6817, lr: 0.03455
iteration: 9, epoch: 95, best train: 0.964, best val: 0.6817, lr: 0.03362
iteration: 9, epoch: 96, best train: 0.964, best val: 0.6817, lr: 0.03269
iteration: 9, epoch: 97, best train: 0.964, best val: 0.6817, lr: 0.03178
iteration: 9, epoch: 98, best train: 0.964, best val: 0.6817, lr: 0.03087
iteration: 9, epoch: 99, best train: 0.964, best val: 0.6817, lr: 0.02996
iteration: 9, epoch: 100, best train: 0.964, best val: 0.6817, lr: 0.02907
iteration: 9, epoch: 101, best train: 0.964, best val: 0.6817, lr: 0.02818
iteration: 9, epoch: 102, best train: 0.964, best val: 0.6817, lr: 0.0273
iteration: 9, epoch: 103, best train: 0.964, best val: 0.6817, lr: 0.02643
iteration: 9, epoch: 104, best train: 0.964, best val: 0.6817, lr: 0.02557
iteration: 9, epoch: 105, best train: 0.964, best val: 0.6817, lr: 0.02472
iteration: 9, epoch: 106, best train: 0.964, best val: 0.6817, lr: 0.02388
iteration: 9, epoch: 107, best train: 0.969, best val: 0.6817, lr: 0.02304
iteration: 9, epoch: 108, best train: 0.969, best val: 0.6817, lr: 0.02222
iteration: 9, epoch: 109, best train: 0.969, best val: 0.6817, lr: 0.02141
iteration: 9, epoch: 110, best train: 0.969, best val: 0.6817, lr: 0.02061
iteration: 9, epoch: 111, best train: 0.969, best val: 0.6817, lr: 0.01982
iteration: 9, epoch: 112, best train: 0.969, best val: 0.6821, lr: 0.01905
iteration: 9, epoch: 113, best train: 0.969, best val: 0.6821, lr: 0.01828
iteration: 9, epoch: 114, best train: 0.969, best val: 0.6821, lr: 0.01753
iteration: 9, epoch: 115, best train: 0.969, best val: 0.6821, lr: 0.01679
iteration: 9, epoch: 116, best train: 0.969, best val: 0.6821, lr: 0.01606
iteration: 9, epoch: 117, best train: 0.969, best val: 0.6821, lr: 0.01535
iteration: 9, epoch: 118, best train: 0.976, best val: 0.6821, lr: 0.01464
iteration: 9, epoch: 119, best train: 0.976, best val: 0.6821, lr: 0.01396
iteration: 9, epoch: 120, best train: 0.976, best val: 0.6821, lr: 0.01328
iteration: 9, epoch: 121, best train: 0.976, best val: 0.6821, lr: 0.01262
iteration: 9, epoch: 122, best train: 0.976, best val: 0.6821, lr: 0.01198
iteration: 9, epoch: 123, best train: 0.976, best val: 0.6835, lr: 0.01135
iteration: 9, epoch: 124, best train: 0.976, best val: 0.6838, lr: 0.01073
iteration: 9, epoch: 125, best train: 0.976, best val: 0.6838, lr: 0.01013
iteration: 9, epoch: 126, best train: 0.976, best val: 0.6838, lr: 0.00955
iteration: 9, epoch: 127, best train: 0.976, best val: 0.6838, lr: 0.00898
iteration: 9, epoch: 128, best train: 0.976, best val: 0.6838, lr: 0.00843
iteration: 9, epoch: 129, best train: 0.976, best val: 0.6838, lr: 0.00789
iteration: 9, epoch: 130, best train: 0.976, best val: 0.6848, lr: 0.00737
iteration: 9, epoch: 131, best train: 0.976, best val: 0.6873, lr: 0.00686
iteration: 9, epoch: 132, best train: 0.976, best val: 0.6891, lr: 0.00638
iteration: 9, epoch: 133, best train: 0.976, best val: 0.6891, lr: 0.0059
iteration: 9, epoch: 134, best train: 0.976, best val: 0.6894, lr: 0.00545
iteration: 9, epoch: 135, best train: 0.976, best val: 0.6894, lr: 0.00501
iteration: 9, epoch: 136, best train: 0.976, best val: 0.6894, lr: 0.00459
iteration: 9, epoch: 137, best train: 0.976, best val: 0.6894, lr: 0.00419
iteration: 9, epoch: 138, best train: 0.976, best val: 0.6894, lr: 0.00381
iteration: 9, epoch: 139, best train: 0.976, best val: 0.6894, lr: 0.00344
iteration: 9, epoch: 140, best train: 0.976, best val: 0.6894, lr: 0.00309
iteration: 9, epoch: 141, best train: 0.976, best val: 0.6894, lr: 0.00276
iteration: 9, epoch: 142, best train: 0.976, best val: 0.6894, lr: 0.00245
iteration: 9, epoch: 143, best train: 0.976, best val: 0.6894, lr: 0.00215
iteration: 9, epoch: 144, best train: 0.976, best val: 0.6894, lr: 0.00188
iteration: 9, epoch: 145, best train: 0.976, best val: 0.6894, lr: 0.00162
iteration: 9, epoch: 146, best train: 0.976, best val: 0.6895, lr: 0.00138
iteration: 9, epoch: 147, best train: 0.976, best val: 0.6895, lr: 0.00116
iteration: 9, epoch: 148, best train: 0.976, best val: 0.6895, lr: 0.00096
iteration: 9, epoch: 149, best train: 0.976, best val: 0.6895, lr: 0.00078
iteration: 9, epoch: 150, best train: 0.976, best val: 0.6895, lr: 0.00062
iteration: 9, epoch: 151, best train: 0.976, best val: 0.6895, lr: 0.00047
iteration: 9, epoch: 152, best train: 0.976, best val: 0.6895, lr: 0.00035
iteration: 9, epoch: 153, best train: 0.976, best val: 0.6895, lr: 0.00024
iteration: 9, epoch: 154, best train: 0.976, best val: 0.6895, lr: 0.00015
iteration: 9, epoch: 155, best train: 0.976, best val: 0.6895, lr: 9e-05
iteration: 9, epoch: 156, best train: 0.976, best val: 0.6895, lr: 4e-05
iteration: 9, epoch: 157, best train: 0.976, best val: 0.6895, lr: 1e-05
iteration: 9, epoch: 158, best train: 0.976, best val: 0.6895, lr: 0.0
iteration: 9, epoch: 159, best train: 0.976, best val: 0.6895, lr: 1e-05
------------------------ Checkpoint 31  ------------------------
pre_conv.0.weight_mask 	|	active =  773 	|	total =  1728 	|	layerwise sparsity =  0.44733796296296297
layer1.0.conv1.weight_mask 	|	active =  3958 	|	total =  36864 	|	layerwise sparsity =  0.10736762152777778
layer1.0.conv2.weight_mask 	|	active =  3958 	|	total =  36864 	|	layerwise sparsity =  0.10736762152777778
layer1.1.conv1.weight_mask 	|	active =  3958 	|	total =  36864 	|	layerwise sparsity =  0.10736762152777778
layer1.1.conv2.weight_mask 	|	active =  3958 	|	total =  36864 	|	layerwise sparsity =  0.10736762152777778
layer2.0.conv1.weight_mask 	|	active =  7917 	|	total =  73728 	|	layerwise sparsity =  0.10738118489583333
layer2.0.conv2.weight_mask 	|	active =  15832 	|	total =  147456 	|	layerwise sparsity =  0.10736762152777778
layer2.0.shortcut.0.weight_mask 	|	active =  3663 	|	total =  8192 	|	layerwise sparsity =  0.4471435546875
layer2.1.conv1.weight_mask 	|	active =  15832 	|	total =  147456 	|	layerwise sparsity =  0.10736762152777778
layer2.1.conv2.weight_mask 	|	active =  15832 	|	total =  147456 	|	layerwise sparsity =  0.10736762152777778
layer3.0.conv1.weight_mask 	|	active =  31666 	|	total =  294912 	|	layerwise sparsity =  0.10737440321180555
layer3.0.conv2.weight_mask 	|	active =  45565 	|	total =  589824 	|	layerwise sparsity =  0.0772518581814236
layer3.0.shortcut.0.weight_mask 	|	active =  3518 	|	total =  32768 	|	layerwise sparsity =  0.10736083984375
layer3.1.conv1.weight_mask 	|	active =  45293 	|	total =  589824 	|	layerwise sparsity =  0.07679070366753472
layer3.1.conv2.weight_mask 	|	active =  47974 	|	total =  589824 	|	layerwise sparsity =  0.08133612738715278
layer4.0.conv1.weight_mask 	|	active =  114589 	|	total =  1179648 	|	layerwise sparsity =  0.09713829888237847
layer4.0.conv2.weight_mask 	|	active =  274206 	|	total =  2359296 	|	layerwise sparsity =  0.11622365315755208
layer4.0.shortcut.0.weight_mask 	|	active =  14074 	|	total =  131072 	|	layerwise sparsity =  0.1073760986328125
layer4.1.conv1.weight_mask 	|	active =  288637 	|	total =  2359296 	|	layerwise sparsity =  0.1223403082953559
layer4.1.conv2.weight_mask 	|	active =  293722 	|	total =  2359296 	|	layerwise sparsity =  0.12449561225043403
------------------------ Checkpoint 32  ------------------------
best_val =  0.6895000000000002
------------------------ Checkpoint 33  ------------------------
pruning state: 10
remaining weight at start of iteration =  11.066397759272316
iteration: 10, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 10, epoch: 1, best train: 0.641, best val: 0.0984, lr: 0.09991
iteration: 10, epoch: 2, best train: 0.641, best val: 0.1148, lr: 0.09985
iteration: 10, epoch: 3, best train: 0.641, best val: 0.2458, lr: 0.09976
iteration: 10, epoch: 4, best train: 0.641, best val: 0.3876, lr: 0.09965
iteration: 10, epoch: 5, best train: 0.641, best val: 0.3991, lr: 0.09953
iteration: 10, epoch: 6, best train: 0.717, best val: 0.5626, lr: 0.09938
iteration: 10, epoch: 7, best train: 0.761, best val: 0.5626, lr: 0.09922
iteration: 10, epoch: 8, best train: 0.761, best val: 0.5626, lr: 0.09904
iteration: 10, epoch: 9, best train: 0.781, best val: 0.5626, lr: 0.09884
iteration: 10, epoch: 10, best train: 0.781, best val: 0.5626, lr: 0.09862
iteration: 10, epoch: 11, best train: 0.794, best val: 0.5626, lr: 0.09838
iteration: 10, epoch: 12, best train: 0.803, best val: 0.5626, lr: 0.09812
iteration: 10, epoch: 13, best train: 0.828, best val: 0.5766, lr: 0.09785
iteration: 10, epoch: 14, best train: 0.829, best val: 0.5766, lr: 0.09755
iteration: 10, epoch: 15, best train: 0.852, best val: 0.5854, lr: 0.09724
iteration: 10, epoch: 16, best train: 0.852, best val: 0.6004, lr: 0.09691
iteration: 10, epoch: 17, best train: 0.852, best val: 0.6004, lr: 0.09656
iteration: 10, epoch: 18, best train: 0.867, best val: 0.6004, lr: 0.09619
iteration: 10, epoch: 19, best train: 0.867, best val: 0.6004, lr: 0.09581
iteration: 10, epoch: 20, best train: 0.869, best val: 0.6006, lr: 0.09541
iteration: 10, epoch: 21, best train: 0.869, best val: 0.6006, lr: 0.09499
iteration: 10, epoch: 22, best train: 0.885, best val: 0.6056, lr: 0.09455
iteration: 10, epoch: 23, best train: 0.89, best val: 0.6056, lr: 0.0941
iteration: 10, epoch: 24, best train: 0.897, best val: 0.6056, lr: 0.09362
iteration: 10, epoch: 25, best train: 0.897, best val: 0.6056, lr: 0.09314
iteration: 10, epoch: 26, best train: 0.897, best val: 0.6056, lr: 0.09263
iteration: 10, epoch: 27, best train: 0.897, best val: 0.616, lr: 0.09211
iteration: 10, epoch: 28, best train: 0.897, best val: 0.616, lr: 0.09157
iteration: 10, epoch: 29, best train: 0.897, best val: 0.616, lr: 0.09102
iteration: 10, epoch: 30, best train: 0.897, best val: 0.616, lr: 0.09045
iteration: 10, epoch: 31, best train: 0.897, best val: 0.616, lr: 0.08987
iteration: 10, epoch: 32, best train: 0.899, best val: 0.6302, lr: 0.08927
iteration: 10, epoch: 33, best train: 0.899, best val: 0.6365, lr: 0.08865
iteration: 10, epoch: 34, best train: 0.903, best val: 0.6365, lr: 0.08802
iteration: 10, epoch: 35, best train: 0.903, best val: 0.6365, lr: 0.08738
iteration: 10, epoch: 36, best train: 0.903, best val: 0.6365, lr: 0.08672
iteration: 10, epoch: 37, best train: 0.914, best val: 0.6365, lr: 0.08604
iteration: 10, epoch: 38, best train: 0.914, best val: 0.6365, lr: 0.08536
iteration: 10, epoch: 39, best train: 0.914, best val: 0.6365, lr: 0.08465
iteration: 10, epoch: 40, best train: 0.914, best val: 0.6365, lr: 0.08394
iteration: 10, epoch: 41, best train: 0.914, best val: 0.6365, lr: 0.08321
iteration: 10, epoch: 42, best train: 0.914, best val: 0.6365, lr: 0.08247
iteration: 10, epoch: 43, best train: 0.918, best val: 0.6365, lr: 0.08172
iteration: 10, epoch: 44, best train: 0.918, best val: 0.6365, lr: 0.08095
iteration: 10, epoch: 45, best train: 0.918, best val: 0.6365, lr: 0.08018
iteration: 10, epoch: 46, best train: 0.918, best val: 0.6398, lr: 0.07939
iteration: 10, epoch: 47, best train: 0.918, best val: 0.6398, lr: 0.07859
iteration: 10, epoch: 48, best train: 0.921, best val: 0.6398, lr: 0.07778
iteration: 10, epoch: 49, best train: 0.924, best val: 0.6398, lr: 0.07696
iteration: 10, epoch: 50, best train: 0.928, best val: 0.6398, lr: 0.07612
iteration: 10, epoch: 51, best train: 0.928, best val: 0.6398, lr: 0.07528
iteration: 10, epoch: 52, best train: 0.928, best val: 0.6398, lr: 0.07443
iteration: 10, epoch: 53, best train: 0.928, best val: 0.6553, lr: 0.07357
iteration: 10, epoch: 54, best train: 0.928, best val: 0.6553, lr: 0.0727
iteration: 10, epoch: 55, best train: 0.928, best val: 0.6553, lr: 0.07182
iteration: 10, epoch: 56, best train: 0.928, best val: 0.6553, lr: 0.07093
iteration: 10, epoch: 57, best train: 0.928, best val: 0.6553, lr: 0.07004
iteration: 10, epoch: 58, best train: 0.93, best val: 0.6553, lr: 0.06913
iteration: 10, epoch: 59, best train: 0.934, best val: 0.6553, lr: 0.06822
iteration: 10, epoch: 60, best train: 0.934, best val: 0.6553, lr: 0.06731
iteration: 10, epoch: 61, best train: 0.934, best val: 0.6553, lr: 0.06638
iteration: 10, epoch: 62, best train: 0.95, best val: 0.6553, lr: 0.06545
iteration: 10, epoch: 63, best train: 0.95, best val: 0.6553, lr: 0.06451
iteration: 10, epoch: 64, best train: 0.95, best val: 0.6553, lr: 0.06357
iteration: 10, epoch: 65, best train: 0.95, best val: 0.6553, lr: 0.06262
iteration: 10, epoch: 66, best train: 0.95, best val: 0.6553, lr: 0.06167
iteration: 10, epoch: 67, best train: 0.95, best val: 0.6568, lr: 0.06072
iteration: 10, epoch: 68, best train: 0.95, best val: 0.6568, lr: 0.05975
iteration: 10, epoch: 69, best train: 0.95, best val: 0.6568, lr: 0.05879
iteration: 10, epoch: 70, best train: 0.95, best val: 0.6568, lr: 0.05782
iteration: 10, epoch: 71, best train: 0.95, best val: 0.6568, lr: 0.05685
iteration: 10, epoch: 72, best train: 0.95, best val: 0.6568, lr: 0.05588
iteration: 10, epoch: 73, best train: 0.95, best val: 0.6568, lr: 0.0549
iteration: 10, epoch: 74, best train: 0.95, best val: 0.6568, lr: 0.05392
iteration: 10, epoch: 75, best train: 0.95, best val: 0.6615, lr: 0.05294
iteration: 10, epoch: 76, best train: 0.95, best val: 0.6615, lr: 0.05196
iteration: 10, epoch: 77, best train: 0.95, best val: 0.6615, lr: 0.05098
iteration: 10, epoch: 78, best train: 0.95, best val: 0.6615, lr: 0.05
iteration: 10, epoch: 79, best train: 0.957, best val: 0.6615, lr: 0.04902
iteration: 10, epoch: 80, best train: 0.957, best val: 0.6615, lr: 0.04804
iteration: 10, epoch: 81, best train: 0.957, best val: 0.6615, lr: 0.04706
iteration: 10, epoch: 82, best train: 0.957, best val: 0.6615, lr: 0.04608
iteration: 10, epoch: 83, best train: 0.957, best val: 0.6615, lr: 0.0451
iteration: 10, epoch: 84, best train: 0.969, best val: 0.6629, lr: 0.04412
iteration: 10, epoch: 85, best train: 0.969, best val: 0.6629, lr: 0.04315
iteration: 10, epoch: 86, best train: 0.969, best val: 0.6629, lr: 0.04218
iteration: 10, epoch: 87, best train: 0.969, best val: 0.6629, lr: 0.04121
iteration: 10, epoch: 88, best train: 0.969, best val: 0.6692, lr: 0.04025
iteration: 10, epoch: 89, best train: 0.969, best val: 0.6693, lr: 0.03928
iteration: 10, epoch: 90, best train: 0.969, best val: 0.6693, lr: 0.03833
iteration: 10, epoch: 91, best train: 0.969, best val: 0.6693, lr: 0.03738
iteration: 10, epoch: 92, best train: 0.969, best val: 0.6693, lr: 0.03643
iteration: 10, epoch: 93, best train: 0.969, best val: 0.674, lr: 0.03549
iteration: 10, epoch: 94, best train: 0.969, best val: 0.674, lr: 0.03455
iteration: 10, epoch: 95, best train: 0.969, best val: 0.674, lr: 0.03362
iteration: 10, epoch: 96, best train: 0.969, best val: 0.6746, lr: 0.03269
iteration: 10, epoch: 97, best train: 0.969, best val: 0.6746, lr: 0.03178
iteration: 10, epoch: 98, best train: 0.97, best val: 0.6746, lr: 0.03087
iteration: 10, epoch: 99, best train: 0.97, best val: 0.6788, lr: 0.02996
iteration: 10, epoch: 100, best train: 0.97, best val: 0.6788, lr: 0.02907
iteration: 10, epoch: 101, best train: 0.97, best val: 0.6788, lr: 0.02818
iteration: 10, epoch: 102, best train: 0.97, best val: 0.6788, lr: 0.0273
iteration: 10, epoch: 103, best train: 0.97, best val: 0.6816, lr: 0.02643
iteration: 10, epoch: 104, best train: 0.97, best val: 0.6816, lr: 0.02557
iteration: 10, epoch: 105, best train: 0.97, best val: 0.6816, lr: 0.02472
iteration: 10, epoch: 106, best train: 0.97, best val: 0.6816, lr: 0.02388
iteration: 10, epoch: 107, best train: 0.97, best val: 0.6816, lr: 0.02304
iteration: 10, epoch: 108, best train: 0.97, best val: 0.6816, lr: 0.02222
iteration: 10, epoch: 109, best train: 0.97, best val: 0.6816, lr: 0.02141
iteration: 10, epoch: 110, best train: 0.97, best val: 0.6816, lr: 0.02061
iteration: 10, epoch: 111, best train: 0.97, best val: 0.6816, lr: 0.01982
iteration: 10, epoch: 112, best train: 0.97, best val: 0.6816, lr: 0.01905
iteration: 10, epoch: 113, best train: 0.97, best val: 0.6816, lr: 0.01828
iteration: 10, epoch: 114, best train: 0.97, best val: 0.6816, lr: 0.01753
iteration: 10, epoch: 115, best train: 0.97, best val: 0.6816, lr: 0.01679
iteration: 10, epoch: 116, best train: 0.97, best val: 0.6819, lr: 0.01606
iteration: 10, epoch: 117, best train: 0.97, best val: 0.6847, lr: 0.01535
iteration: 10, epoch: 118, best train: 0.977, best val: 0.6847, lr: 0.01464
iteration: 10, epoch: 119, best train: 0.977, best val: 0.6847, lr: 0.01396
iteration: 10, epoch: 120, best train: 0.977, best val: 0.6847, lr: 0.01328
iteration: 10, epoch: 121, best train: 0.977, best val: 0.685, lr: 0.01262
iteration: 10, epoch: 122, best train: 0.977, best val: 0.685, lr: 0.01198
iteration: 10, epoch: 123, best train: 0.977, best val: 0.685, lr: 0.01135
iteration: 10, epoch: 124, best train: 0.977, best val: 0.685, lr: 0.01073
iteration: 10, epoch: 125, best train: 0.977, best val: 0.6851, lr: 0.01013
iteration: 10, epoch: 126, best train: 0.977, best val: 0.6855, lr: 0.00955
iteration: 10, epoch: 127, best train: 0.977, best val: 0.6855, lr: 0.00898
iteration: 10, epoch: 128, best train: 0.977, best val: 0.6855, lr: 0.00843
iteration: 10, epoch: 129, best train: 0.977, best val: 0.6855, lr: 0.00789
iteration: 10, epoch: 130, best train: 0.977, best val: 0.6868, lr: 0.00737
iteration: 10, epoch: 131, best train: 0.977, best val: 0.6868, lr: 0.00686
iteration: 10, epoch: 132, best train: 0.977, best val: 0.6887, lr: 0.00638
iteration: 10, epoch: 133, best train: 0.977, best val: 0.6887, lr: 0.0059
iteration: 10, epoch: 134, best train: 0.977, best val: 0.6887, lr: 0.00545
iteration: 10, epoch: 135, best train: 0.977, best val: 0.6887, lr: 0.00501
iteration: 10, epoch: 136, best train: 0.977, best val: 0.6887, lr: 0.00459
iteration: 10, epoch: 137, best train: 0.977, best val: 0.6887, lr: 0.00419
iteration: 10, epoch: 138, best train: 0.98, best val: 0.6887, lr: 0.00381
iteration: 10, epoch: 139, best train: 0.98, best val: 0.6887, lr: 0.00344
iteration: 10, epoch: 140, best train: 0.98, best val: 0.6887, lr: 0.00309
iteration: 10, epoch: 141, best train: 0.98, best val: 0.6887, lr: 0.00276
iteration: 10, epoch: 142, best train: 0.98, best val: 0.6887, lr: 0.00245
iteration: 10, epoch: 143, best train: 0.98, best val: 0.6887, lr: 0.00215
iteration: 10, epoch: 144, best train: 0.98, best val: 0.6887, lr: 0.00188
iteration: 10, epoch: 145, best train: 0.98, best val: 0.6887, lr: 0.00162
iteration: 10, epoch: 146, best train: 0.98, best val: 0.6887, lr: 0.00138
iteration: 10, epoch: 147, best train: 0.98, best val: 0.6887, lr: 0.00116
iteration: 10, epoch: 148, best train: 0.98, best val: 0.6887, lr: 0.00096
iteration: 10, epoch: 149, best train: 0.98, best val: 0.6887, lr: 0.00078
iteration: 10, epoch: 150, best train: 0.98, best val: 0.6887, lr: 0.00062
iteration: 10, epoch: 151, best train: 0.98, best val: 0.6887, lr: 0.00047
iteration: 10, epoch: 152, best train: 0.98, best val: 0.6887, lr: 0.00035
iteration: 10, epoch: 153, best train: 0.98, best val: 0.6887, lr: 0.00024
iteration: 10, epoch: 154, best train: 0.98, best val: 0.6887, lr: 0.00015
iteration: 10, epoch: 155, best train: 0.98, best val: 0.6887, lr: 9e-05
iteration: 10, epoch: 156, best train: 0.98, best val: 0.6887, lr: 4e-05
iteration: 10, epoch: 157, best train: 0.98, best val: 0.6887, lr: 1e-05
iteration: 10, epoch: 158, best train: 0.98, best val: 0.6887, lr: 0.0
iteration: 10, epoch: 159, best train: 0.98, best val: 0.6887, lr: 1e-05
------------------------ Checkpoint 34  ------------------------
pre_conv.0.weight_mask 	|	active =  713 	|	total =  1728 	|	layerwise sparsity =  0.41261574074074076
layer1.0.conv1.weight_mask 	|	active =  3166 	|	total =  36864 	|	layerwise sparsity =  0.08588324652777778
layer1.0.conv2.weight_mask 	|	active =  3166 	|	total =  36864 	|	layerwise sparsity =  0.08588324652777778
layer1.1.conv1.weight_mask 	|	active =  3166 	|	total =  36864 	|	layerwise sparsity =  0.08588324652777778
layer1.1.conv2.weight_mask 	|	active =  3166 	|	total =  36864 	|	layerwise sparsity =  0.08588324652777778
layer2.0.conv1.weight_mask 	|	active =  6334 	|	total =  73728 	|	layerwise sparsity =  0.0859103732638889
layer2.0.conv2.weight_mask 	|	active =  12666 	|	total =  147456 	|	layerwise sparsity =  0.08589680989583333
layer2.0.shortcut.0.weight_mask 	|	active =  3380 	|	total =  8192 	|	layerwise sparsity =  0.41259765625
layer2.1.conv1.weight_mask 	|	active =  12666 	|	total =  147456 	|	layerwise sparsity =  0.08589680989583333
layer2.1.conv2.weight_mask 	|	active =  12666 	|	total =  147456 	|	layerwise sparsity =  0.08589680989583333
layer3.0.conv1.weight_mask 	|	active =  25333 	|	total =  294912 	|	layerwise sparsity =  0.08590020073784722
layer3.0.conv2.weight_mask 	|	active =  35271 	|	total =  589824 	|	layerwise sparsity =  0.0597991943359375
layer3.0.shortcut.0.weight_mask 	|	active =  2814 	|	total =  32768 	|	layerwise sparsity =  0.08587646484375
layer3.1.conv1.weight_mask 	|	active =  35040 	|	total =  589824 	|	layerwise sparsity =  0.059407552083333336
layer3.1.conv2.weight_mask 	|	active =  37328 	|	total =  589824 	|	layerwise sparsity =  0.06328667534722222
layer4.0.conv1.weight_mask 	|	active =  90757 	|	total =  1179648 	|	layerwise sparsity =  0.07693566216362847
layer4.0.conv2.weight_mask 	|	active =  221109 	|	total =  2359296 	|	layerwise sparsity =  0.0937182108561198
layer4.0.shortcut.0.weight_mask 	|	active =  11259 	|	total =  131072 	|	layerwise sparsity =  0.08589935302734375
layer4.1.conv1.weight_mask 	|	active =  233942 	|	total =  2359296 	|	layerwise sparsity =  0.0991575453016493
layer4.1.conv2.weight_mask 	|	active =  238480 	|	total =  2359296 	|	layerwise sparsity =  0.10108100043402778
------------------------ Checkpoint 35  ------------------------
best_val =  0.6886999999999998
------------------------ Checkpoint 36  ------------------------
pruning state: 11
remaining weight at start of iteration =  8.893282261718372
iteration: 11, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 11, epoch: 1, best train: 0.594, best val: 0.1, lr: 0.09991
iteration: 11, epoch: 2, best train: 0.594, best val: 0.1, lr: 0.09985
iteration: 11, epoch: 3, best train: 0.594, best val: 0.1646, lr: 0.09976
iteration: 11, epoch: 4, best train: 0.595, best val: 0.4309, lr: 0.09965
iteration: 11, epoch: 5, best train: 0.661, best val: 0.5552, lr: 0.09953
iteration: 11, epoch: 6, best train: 0.711, best val: 0.5879, lr: 0.09938
iteration: 11, epoch: 7, best train: 0.726, best val: 0.5879, lr: 0.09922
iteration: 11, epoch: 8, best train: 0.764, best val: 0.5879, lr: 0.09904
iteration: 11, epoch: 9, best train: 0.789, best val: 0.6112, lr: 0.09884
iteration: 11, epoch: 10, best train: 0.789, best val: 0.6112, lr: 0.09862
iteration: 11, epoch: 11, best train: 0.789, best val: 0.6112, lr: 0.09838
iteration: 11, epoch: 12, best train: 0.798, best val: 0.6112, lr: 0.09812
iteration: 11, epoch: 13, best train: 0.799, best val: 0.6112, lr: 0.09785
iteration: 11, epoch: 14, best train: 0.825, best val: 0.6112, lr: 0.09755
iteration: 11, epoch: 15, best train: 0.825, best val: 0.6112, lr: 0.09724
iteration: 11, epoch: 16, best train: 0.846, best val: 0.6112, lr: 0.09691
iteration: 11, epoch: 17, best train: 0.846, best val: 0.6127, lr: 0.09656
iteration: 11, epoch: 18, best train: 0.87, best val: 0.6127, lr: 0.09619
iteration: 11, epoch: 19, best train: 0.87, best val: 0.6127, lr: 0.09581
iteration: 11, epoch: 20, best train: 0.87, best val: 0.6127, lr: 0.09541
iteration: 11, epoch: 21, best train: 0.874, best val: 0.6127, lr: 0.09499
iteration: 11, epoch: 22, best train: 0.874, best val: 0.6127, lr: 0.09455
iteration: 11, epoch: 23, best train: 0.874, best val: 0.6127, lr: 0.0941
iteration: 11, epoch: 24, best train: 0.874, best val: 0.6197, lr: 0.09362
iteration: 11, epoch: 25, best train: 0.886, best val: 0.6197, lr: 0.09314
iteration: 11, epoch: 26, best train: 0.886, best val: 0.6197, lr: 0.09263
iteration: 11, epoch: 27, best train: 0.887, best val: 0.6197, lr: 0.09211
iteration: 11, epoch: 28, best train: 0.887, best val: 0.6378, lr: 0.09157
iteration: 11, epoch: 29, best train: 0.887, best val: 0.6378, lr: 0.09102
iteration: 11, epoch: 30, best train: 0.887, best val: 0.6378, lr: 0.09045
iteration: 11, epoch: 31, best train: 0.902, best val: 0.6378, lr: 0.08987
iteration: 11, epoch: 32, best train: 0.902, best val: 0.6378, lr: 0.08927
iteration: 11, epoch: 33, best train: 0.902, best val: 0.6378, lr: 0.08865
iteration: 11, epoch: 34, best train: 0.902, best val: 0.6378, lr: 0.08802
iteration: 11, epoch: 35, best train: 0.903, best val: 0.6378, lr: 0.08738
iteration: 11, epoch: 36, best train: 0.903, best val: 0.6378, lr: 0.08672
iteration: 11, epoch: 37, best train: 0.905, best val: 0.6378, lr: 0.08604
iteration: 11, epoch: 38, best train: 0.908, best val: 0.6378, lr: 0.08536
iteration: 11, epoch: 39, best train: 0.912, best val: 0.6378, lr: 0.08465
iteration: 11, epoch: 40, best train: 0.912, best val: 0.6501, lr: 0.08394
iteration: 11, epoch: 41, best train: 0.915, best val: 0.6501, lr: 0.08321
iteration: 11, epoch: 42, best train: 0.934, best val: 0.6501, lr: 0.08247
iteration: 11, epoch: 43, best train: 0.934, best val: 0.6602, lr: 0.08172
iteration: 11, epoch: 44, best train: 0.934, best val: 0.6602, lr: 0.08095
iteration: 11, epoch: 45, best train: 0.934, best val: 0.6602, lr: 0.08018
iteration: 11, epoch: 46, best train: 0.934, best val: 0.6602, lr: 0.07939
iteration: 11, epoch: 47, best train: 0.934, best val: 0.6602, lr: 0.07859
iteration: 11, epoch: 48, best train: 0.934, best val: 0.6602, lr: 0.07778
iteration: 11, epoch: 49, best train: 0.934, best val: 0.6606, lr: 0.07696
iteration: 11, epoch: 50, best train: 0.934, best val: 0.6653, lr: 0.07612
iteration: 11, epoch: 51, best train: 0.934, best val: 0.6653, lr: 0.07528
iteration: 11, epoch: 52, best train: 0.939, best val: 0.6662, lr: 0.07443
iteration: 11, epoch: 53, best train: 0.939, best val: 0.6662, lr: 0.07357
iteration: 11, epoch: 54, best train: 0.939, best val: 0.6662, lr: 0.0727
iteration: 11, epoch: 55, best train: 0.94, best val: 0.6662, lr: 0.07182
iteration: 11, epoch: 56, best train: 0.94, best val: 0.6662, lr: 0.07093
iteration: 11, epoch: 57, best train: 0.94, best val: 0.6662, lr: 0.07004
iteration: 11, epoch: 58, best train: 0.94, best val: 0.6662, lr: 0.06913
iteration: 11, epoch: 59, best train: 0.942, best val: 0.6662, lr: 0.06822
iteration: 11, epoch: 60, best train: 0.942, best val: 0.6662, lr: 0.06731
iteration: 11, epoch: 61, best train: 0.942, best val: 0.6684, lr: 0.06638
iteration: 11, epoch: 62, best train: 0.942, best val: 0.6684, lr: 0.06545
iteration: 11, epoch: 63, best train: 0.95, best val: 0.6684, lr: 0.06451
iteration: 11, epoch: 64, best train: 0.95, best val: 0.6711, lr: 0.06357
iteration: 11, epoch: 65, best train: 0.95, best val: 0.6711, lr: 0.06262
iteration: 11, epoch: 66, best train: 0.954, best val: 0.6721, lr: 0.06167
iteration: 11, epoch: 67, best train: 0.954, best val: 0.6721, lr: 0.06072
iteration: 11, epoch: 68, best train: 0.954, best val: 0.6721, lr: 0.05975
iteration: 11, epoch: 69, best train: 0.954, best val: 0.6721, lr: 0.05879
iteration: 11, epoch: 70, best train: 0.954, best val: 0.6721, lr: 0.05782
iteration: 11, epoch: 71, best train: 0.954, best val: 0.6721, lr: 0.05685
iteration: 11, epoch: 72, best train: 0.954, best val: 0.6721, lr: 0.05588
iteration: 11, epoch: 73, best train: 0.954, best val: 0.6721, lr: 0.0549
iteration: 11, epoch: 74, best train: 0.954, best val: 0.6721, lr: 0.05392
iteration: 11, epoch: 75, best train: 0.954, best val: 0.6721, lr: 0.05294
iteration: 11, epoch: 76, best train: 0.954, best val: 0.6721, lr: 0.05196
iteration: 11, epoch: 77, best train: 0.954, best val: 0.6721, lr: 0.05098
iteration: 11, epoch: 78, best train: 0.954, best val: 0.6721, lr: 0.05
iteration: 11, epoch: 79, best train: 0.954, best val: 0.6726, lr: 0.04902
iteration: 11, epoch: 80, best train: 0.954, best val: 0.6726, lr: 0.04804
iteration: 11, epoch: 81, best train: 0.954, best val: 0.6726, lr: 0.04706
iteration: 11, epoch: 82, best train: 0.954, best val: 0.6771, lr: 0.04608
iteration: 11, epoch: 83, best train: 0.954, best val: 0.6771, lr: 0.0451
iteration: 11, epoch: 84, best train: 0.958, best val: 0.6771, lr: 0.04412
iteration: 11, epoch: 85, best train: 0.958, best val: 0.6771, lr: 0.04315
iteration: 11, epoch: 86, best train: 0.958, best val: 0.6771, lr: 0.04218
iteration: 11, epoch: 87, best train: 0.961, best val: 0.6771, lr: 0.04121
iteration: 11, epoch: 88, best train: 0.961, best val: 0.6771, lr: 0.04025
iteration: 11, epoch: 89, best train: 0.97, best val: 0.6771, lr: 0.03928
iteration: 11, epoch: 90, best train: 0.97, best val: 0.6771, lr: 0.03833
iteration: 11, epoch: 91, best train: 0.97, best val: 0.6771, lr: 0.03738
iteration: 11, epoch: 92, best train: 0.97, best val: 0.6771, lr: 0.03643
iteration: 11, epoch: 93, best train: 0.97, best val: 0.6771, lr: 0.03549
iteration: 11, epoch: 94, best train: 0.97, best val: 0.6771, lr: 0.03455
iteration: 11, epoch: 95, best train: 0.97, best val: 0.6771, lr: 0.03362
iteration: 11, epoch: 96, best train: 0.97, best val: 0.6771, lr: 0.03269
iteration: 11, epoch: 97, best train: 0.97, best val: 0.6771, lr: 0.03178
iteration: 11, epoch: 98, best train: 0.97, best val: 0.6771, lr: 0.03087
iteration: 11, epoch: 99, best train: 0.97, best val: 0.6771, lr: 0.02996
iteration: 11, epoch: 100, best train: 0.97, best val: 0.6771, lr: 0.02907
iteration: 11, epoch: 101, best train: 0.97, best val: 0.6801, lr: 0.02818
iteration: 11, epoch: 102, best train: 0.97, best val: 0.6801, lr: 0.0273
iteration: 11, epoch: 103, best train: 0.97, best val: 0.6801, lr: 0.02643
iteration: 11, epoch: 104, best train: 0.97, best val: 0.6801, lr: 0.02557
iteration: 11, epoch: 105, best train: 0.97, best val: 0.6801, lr: 0.02472
iteration: 11, epoch: 106, best train: 0.97, best val: 0.6801, lr: 0.02388
iteration: 11, epoch: 107, best train: 0.97, best val: 0.6801, lr: 0.02304
iteration: 11, epoch: 108, best train: 0.97, best val: 0.6871, lr: 0.02222
iteration: 11, epoch: 109, best train: 0.97, best val: 0.6901, lr: 0.02141
iteration: 11, epoch: 110, best train: 0.973, best val: 0.6901, lr: 0.02061
iteration: 11, epoch: 111, best train: 0.973, best val: 0.6901, lr: 0.01982
iteration: 11, epoch: 112, best train: 0.973, best val: 0.6901, lr: 0.01905
iteration: 11, epoch: 113, best train: 0.973, best val: 0.6901, lr: 0.01828
iteration: 11, epoch: 114, best train: 0.973, best val: 0.6901, lr: 0.01753
iteration: 11, epoch: 115, best train: 0.973, best val: 0.6901, lr: 0.01679
iteration: 11, epoch: 116, best train: 0.973, best val: 0.6901, lr: 0.01606
iteration: 11, epoch: 117, best train: 0.973, best val: 0.6901, lr: 0.01535
iteration: 11, epoch: 118, best train: 0.973, best val: 0.6901, lr: 0.01464
iteration: 11, epoch: 119, best train: 0.973, best val: 0.6901, lr: 0.01396
iteration: 11, epoch: 120, best train: 0.973, best val: 0.6905, lr: 0.01328
iteration: 11, epoch: 121, best train: 0.973, best val: 0.6906, lr: 0.01262
iteration: 11, epoch: 122, best train: 0.973, best val: 0.6906, lr: 0.01198
iteration: 11, epoch: 123, best train: 0.973, best val: 0.6906, lr: 0.01135
iteration: 11, epoch: 124, best train: 0.975, best val: 0.6906, lr: 0.01073
iteration: 11, epoch: 125, best train: 0.975, best val: 0.6906, lr: 0.01013
iteration: 11, epoch: 126, best train: 0.975, best val: 0.6906, lr: 0.00955
iteration: 11, epoch: 127, best train: 0.975, best val: 0.6906, lr: 0.00898
iteration: 11, epoch: 128, best train: 0.975, best val: 0.6906, lr: 0.00843
iteration: 11, epoch: 129, best train: 0.976, best val: 0.6906, lr: 0.00789
iteration: 11, epoch: 130, best train: 0.976, best val: 0.6911, lr: 0.00737
iteration: 11, epoch: 131, best train: 0.976, best val: 0.6918, lr: 0.00686
iteration: 11, epoch: 132, best train: 0.976, best val: 0.6918, lr: 0.00638
iteration: 11, epoch: 133, best train: 0.976, best val: 0.6918, lr: 0.0059
iteration: 11, epoch: 134, best train: 0.976, best val: 0.692, lr: 0.00545
iteration: 11, epoch: 135, best train: 0.976, best val: 0.6922, lr: 0.00501
iteration: 11, epoch: 136, best train: 0.976, best val: 0.6922, lr: 0.00459
iteration: 11, epoch: 137, best train: 0.976, best val: 0.6922, lr: 0.00419
iteration: 11, epoch: 138, best train: 0.976, best val: 0.6937, lr: 0.00381
iteration: 11, epoch: 139, best train: 0.976, best val: 0.6937, lr: 0.00344
iteration: 11, epoch: 140, best train: 0.976, best val: 0.6937, lr: 0.00309
iteration: 11, epoch: 141, best train: 0.976, best val: 0.6937, lr: 0.00276
iteration: 11, epoch: 142, best train: 0.976, best val: 0.6937, lr: 0.00245
iteration: 11, epoch: 143, best train: 0.976, best val: 0.6937, lr: 0.00215
iteration: 11, epoch: 144, best train: 0.976, best val: 0.6937, lr: 0.00188
iteration: 11, epoch: 145, best train: 0.976, best val: 0.6937, lr: 0.00162
iteration: 11, epoch: 146, best train: 0.976, best val: 0.6937, lr: 0.00138
iteration: 11, epoch: 147, best train: 0.976, best val: 0.6937, lr: 0.00116
iteration: 11, epoch: 148, best train: 0.976, best val: 0.6937, lr: 0.00096
iteration: 11, epoch: 149, best train: 0.978, best val: 0.6937, lr: 0.00078
iteration: 11, epoch: 150, best train: 0.978, best val: 0.6937, lr: 0.00062
iteration: 11, epoch: 151, best train: 0.978, best val: 0.6937, lr: 0.00047
iteration: 11, epoch: 152, best train: 0.978, best val: 0.6937, lr: 0.00035
iteration: 11, epoch: 153, best train: 0.978, best val: 0.6937, lr: 0.00024
iteration: 11, epoch: 154, best train: 0.978, best val: 0.6937, lr: 0.00015
iteration: 11, epoch: 155, best train: 0.978, best val: 0.6937, lr: 9e-05
iteration: 11, epoch: 156, best train: 0.978, best val: 0.6937, lr: 4e-05
iteration: 11, epoch: 157, best train: 0.978, best val: 0.6937, lr: 1e-05
iteration: 11, epoch: 158, best train: 0.978, best val: 0.6937, lr: 0.0
iteration: 11, epoch: 159, best train: 0.978, best val: 0.6937, lr: 1e-05
------------------------ Checkpoint 37  ------------------------
pre_conv.0.weight_mask 	|	active =  658 	|	total =  1728 	|	layerwise sparsity =  0.38078703703703703
layer1.0.conv1.weight_mask 	|	active =  2533 	|	total =  36864 	|	layerwise sparsity =  0.06871202256944445
layer1.0.conv2.weight_mask 	|	active =  2533 	|	total =  36864 	|	layerwise sparsity =  0.06871202256944445
layer1.1.conv1.weight_mask 	|	active =  2533 	|	total =  36864 	|	layerwise sparsity =  0.06871202256944445
layer1.1.conv2.weight_mask 	|	active =  2533 	|	total =  36864 	|	layerwise sparsity =  0.06871202256944445
layer2.0.conv1.weight_mask 	|	active =  5067 	|	total =  73728 	|	layerwise sparsity =  0.0687255859375
layer2.0.conv2.weight_mask 	|	active =  10133 	|	total =  147456 	|	layerwise sparsity =  0.06871880425347222
layer2.0.shortcut.0.weight_mask 	|	active =  3119 	|	total =  8192 	|	layerwise sparsity =  0.3807373046875
layer2.1.conv1.weight_mask 	|	active =  10133 	|	total =  147456 	|	layerwise sparsity =  0.06871880425347222
layer2.1.conv2.weight_mask 	|	active =  10133 	|	total =  147456 	|	layerwise sparsity =  0.06871880425347222
layer3.0.conv1.weight_mask 	|	active =  20266 	|	total =  294912 	|	layerwise sparsity =  0.06871880425347222
layer3.0.conv2.weight_mask 	|	active =  27303 	|	total =  589824 	|	layerwise sparsity =  0.046290079752604164
layer3.0.shortcut.0.weight_mask 	|	active =  2251 	|	total =  32768 	|	layerwise sparsity =  0.068695068359375
layer3.1.conv1.weight_mask 	|	active =  27108 	|	total =  589824 	|	layerwise sparsity =  0.04595947265625
layer3.1.conv2.weight_mask 	|	active =  29044 	|	total =  589824 	|	layerwise sparsity =  0.04924180772569445
layer4.0.conv1.weight_mask 	|	active =  71882 	|	total =  1179648 	|	layerwise sparsity =  0.060935126410590276
layer4.0.conv2.weight_mask 	|	active =  178294 	|	total =  2359296 	|	layerwise sparsity =  0.0755708482530382
layer4.0.shortcut.0.weight_mask 	|	active =  9007 	|	total =  131072 	|	layerwise sparsity =  0.06871795654296875
layer4.1.conv1.weight_mask 	|	active =  189612 	|	total =  2359296 	|	layerwise sparsity =  0.0803680419921875
layer4.1.conv2.weight_mask 	|	active =  193628 	|	total =  2359296 	|	layerwise sparsity =  0.08207024468315972
------------------------ Checkpoint 38  ------------------------
best_val =  0.6937000000000001
------------------------ Checkpoint 39  ------------------------
pruning state: 12
remaining weight at start of iteration =  7.148968674546774
iteration: 12, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 12, epoch: 1, best train: 0.614, best val: 0.1, lr: 0.09991
iteration: 12, epoch: 2, best train: 0.614, best val: 0.1, lr: 0.09985
iteration: 12, epoch: 3, best train: 0.614, best val: 0.1496, lr: 0.09976
iteration: 12, epoch: 4, best train: 0.614, best val: 0.3379, lr: 0.09965
iteration: 12, epoch: 5, best train: 0.614, best val: 0.477, lr: 0.09953
iteration: 12, epoch: 6, best train: 0.655, best val: 0.5181, lr: 0.09938
iteration: 12, epoch: 7, best train: 0.705, best val: 0.5505, lr: 0.09922
iteration: 12, epoch: 8, best train: 0.75, best val: 0.572, lr: 0.09904
iteration: 12, epoch: 9, best train: 0.75, best val: 0.572, lr: 0.09884
iteration: 12, epoch: 10, best train: 0.75, best val: 0.572, lr: 0.09862
iteration: 12, epoch: 11, best train: 0.778, best val: 0.5749, lr: 0.09838
iteration: 12, epoch: 12, best train: 0.79, best val: 0.582, lr: 0.09812
iteration: 12, epoch: 13, best train: 0.79, best val: 0.6182, lr: 0.09785
iteration: 12, epoch: 14, best train: 0.821, best val: 0.6182, lr: 0.09755
iteration: 12, epoch: 15, best train: 0.821, best val: 0.6182, lr: 0.09724
iteration: 12, epoch: 16, best train: 0.835, best val: 0.6182, lr: 0.09691
iteration: 12, epoch: 17, best train: 0.835, best val: 0.6182, lr: 0.09656
iteration: 12, epoch: 18, best train: 0.837, best val: 0.6182, lr: 0.09619
iteration: 12, epoch: 19, best train: 0.837, best val: 0.6182, lr: 0.09581
iteration: 12, epoch: 20, best train: 0.846, best val: 0.6182, lr: 0.09541
iteration: 12, epoch: 21, best train: 0.846, best val: 0.6182, lr: 0.09499
iteration: 12, epoch: 22, best train: 0.846, best val: 0.6182, lr: 0.09455
iteration: 12, epoch: 23, best train: 0.851, best val: 0.6182, lr: 0.0941
iteration: 12, epoch: 24, best train: 0.875, best val: 0.6216, lr: 0.09362
iteration: 12, epoch: 25, best train: 0.875, best val: 0.6216, lr: 0.09314
iteration: 12, epoch: 26, best train: 0.875, best val: 0.6216, lr: 0.09263
iteration: 12, epoch: 27, best train: 0.875, best val: 0.6216, lr: 0.09211
iteration: 12, epoch: 28, best train: 0.891, best val: 0.6216, lr: 0.09157
iteration: 12, epoch: 29, best train: 0.891, best val: 0.6216, lr: 0.09102
iteration: 12, epoch: 30, best train: 0.891, best val: 0.6216, lr: 0.09045
iteration: 12, epoch: 31, best train: 0.891, best val: 0.6374, lr: 0.08987
iteration: 12, epoch: 32, best train: 0.891, best val: 0.6391, lr: 0.08927
iteration: 12, epoch: 33, best train: 0.903, best val: 0.6391, lr: 0.08865
iteration: 12, epoch: 34, best train: 0.907, best val: 0.6391, lr: 0.08802
iteration: 12, epoch: 35, best train: 0.907, best val: 0.6391, lr: 0.08738
iteration: 12, epoch: 36, best train: 0.907, best val: 0.6422, lr: 0.08672
iteration: 12, epoch: 37, best train: 0.907, best val: 0.6422, lr: 0.08604
iteration: 12, epoch: 38, best train: 0.907, best val: 0.6422, lr: 0.08536
iteration: 12, epoch: 39, best train: 0.907, best val: 0.6422, lr: 0.08465
iteration: 12, epoch: 40, best train: 0.907, best val: 0.6422, lr: 0.08394
iteration: 12, epoch: 41, best train: 0.914, best val: 0.643, lr: 0.08321
iteration: 12, epoch: 42, best train: 0.923, best val: 0.643, lr: 0.08247
iteration: 12, epoch: 43, best train: 0.923, best val: 0.643, lr: 0.08172
iteration: 12, epoch: 44, best train: 0.93, best val: 0.643, lr: 0.08095
iteration: 12, epoch: 45, best train: 0.93, best val: 0.643, lr: 0.08018
iteration: 12, epoch: 46, best train: 0.93, best val: 0.643, lr: 0.07939
iteration: 12, epoch: 47, best train: 0.93, best val: 0.643, lr: 0.07859
iteration: 12, epoch: 48, best train: 0.93, best val: 0.6433, lr: 0.07778
iteration: 12, epoch: 49, best train: 0.93, best val: 0.6462, lr: 0.07696
iteration: 12, epoch: 50, best train: 0.93, best val: 0.6556, lr: 0.07612
iteration: 12, epoch: 51, best train: 0.93, best val: 0.6604, lr: 0.07528
iteration: 12, epoch: 52, best train: 0.93, best val: 0.6604, lr: 0.07443
iteration: 12, epoch: 53, best train: 0.93, best val: 0.6604, lr: 0.07357
iteration: 12, epoch: 54, best train: 0.93, best val: 0.6604, lr: 0.0727
iteration: 12, epoch: 55, best train: 0.934, best val: 0.6604, lr: 0.07182
iteration: 12, epoch: 56, best train: 0.934, best val: 0.6604, lr: 0.07093
iteration: 12, epoch: 57, best train: 0.934, best val: 0.6604, lr: 0.07004
iteration: 12, epoch: 58, best train: 0.934, best val: 0.6604, lr: 0.06913
iteration: 12, epoch: 59, best train: 0.934, best val: 0.6604, lr: 0.06822
iteration: 12, epoch: 60, best train: 0.934, best val: 0.6604, lr: 0.06731
iteration: 12, epoch: 61, best train: 0.934, best val: 0.6604, lr: 0.06638
iteration: 12, epoch: 62, best train: 0.934, best val: 0.6604, lr: 0.06545
iteration: 12, epoch: 63, best train: 0.947, best val: 0.6604, lr: 0.06451
iteration: 12, epoch: 64, best train: 0.947, best val: 0.6604, lr: 0.06357
iteration: 12, epoch: 65, best train: 0.947, best val: 0.6604, lr: 0.06262
iteration: 12, epoch: 66, best train: 0.947, best val: 0.6657, lr: 0.06167
iteration: 12, epoch: 67, best train: 0.947, best val: 0.6657, lr: 0.06072
iteration: 12, epoch: 68, best train: 0.947, best val: 0.6657, lr: 0.05975
iteration: 12, epoch: 69, best train: 0.947, best val: 0.6657, lr: 0.05879
iteration: 12, epoch: 70, best train: 0.947, best val: 0.6703, lr: 0.05782
iteration: 12, epoch: 71, best train: 0.952, best val: 0.6703, lr: 0.05685
iteration: 12, epoch: 72, best train: 0.952, best val: 0.6703, lr: 0.05588
iteration: 12, epoch: 73, best train: 0.952, best val: 0.6703, lr: 0.0549
iteration: 12, epoch: 74, best train: 0.952, best val: 0.6703, lr: 0.05392
iteration: 12, epoch: 75, best train: 0.952, best val: 0.6703, lr: 0.05294
iteration: 12, epoch: 76, best train: 0.952, best val: 0.6763, lr: 0.05196
iteration: 12, epoch: 77, best train: 0.952, best val: 0.6763, lr: 0.05098
iteration: 12, epoch: 78, best train: 0.952, best val: 0.6763, lr: 0.05
iteration: 12, epoch: 79, best train: 0.952, best val: 0.6763, lr: 0.04902
iteration: 12, epoch: 80, best train: 0.952, best val: 0.6763, lr: 0.04804
iteration: 12, epoch: 81, best train: 0.952, best val: 0.6763, lr: 0.04706
iteration: 12, epoch: 82, best train: 0.952, best val: 0.6763, lr: 0.04608
iteration: 12, epoch: 83, best train: 0.958, best val: 0.6763, lr: 0.0451
iteration: 12, epoch: 84, best train: 0.966, best val: 0.6763, lr: 0.04412
iteration: 12, epoch: 85, best train: 0.966, best val: 0.6763, lr: 0.04315
iteration: 12, epoch: 86, best train: 0.966, best val: 0.6763, lr: 0.04218
iteration: 12, epoch: 87, best train: 0.966, best val: 0.6763, lr: 0.04121
iteration: 12, epoch: 88, best train: 0.966, best val: 0.6763, lr: 0.04025
iteration: 12, epoch: 89, best train: 0.967, best val: 0.6763, lr: 0.03928
iteration: 12, epoch: 90, best train: 0.967, best val: 0.6765, lr: 0.03833
iteration: 12, epoch: 91, best train: 0.967, best val: 0.6765, lr: 0.03738
iteration: 12, epoch: 92, best train: 0.967, best val: 0.6818, lr: 0.03643
iteration: 12, epoch: 93, best train: 0.967, best val: 0.6863, lr: 0.03549
iteration: 12, epoch: 94, best train: 0.967, best val: 0.6863, lr: 0.03455
iteration: 12, epoch: 95, best train: 0.967, best val: 0.6863, lr: 0.03362
iteration: 12, epoch: 96, best train: 0.967, best val: 0.6863, lr: 0.03269
iteration: 12, epoch: 97, best train: 0.967, best val: 0.6863, lr: 0.03178
iteration: 12, epoch: 98, best train: 0.967, best val: 0.6863, lr: 0.03087
iteration: 12, epoch: 99, best train: 0.967, best val: 0.6863, lr: 0.02996
iteration: 12, epoch: 100, best train: 0.967, best val: 0.6863, lr: 0.02907
iteration: 12, epoch: 101, best train: 0.967, best val: 0.6863, lr: 0.02818
iteration: 12, epoch: 102, best train: 0.967, best val: 0.6863, lr: 0.0273
iteration: 12, epoch: 103, best train: 0.967, best val: 0.6863, lr: 0.02643
iteration: 12, epoch: 104, best train: 0.967, best val: 0.6863, lr: 0.02557
iteration: 12, epoch: 105, best train: 0.967, best val: 0.6863, lr: 0.02472
iteration: 12, epoch: 106, best train: 0.967, best val: 0.6863, lr: 0.02388
iteration: 12, epoch: 107, best train: 0.967, best val: 0.6863, lr: 0.02304
iteration: 12, epoch: 108, best train: 0.967, best val: 0.6863, lr: 0.02222
iteration: 12, epoch: 109, best train: 0.967, best val: 0.6863, lr: 0.02141
iteration: 12, epoch: 110, best train: 0.967, best val: 0.6863, lr: 0.02061
iteration: 12, epoch: 111, best train: 0.967, best val: 0.6863, lr: 0.01982
iteration: 12, epoch: 112, best train: 0.967, best val: 0.6863, lr: 0.01905
iteration: 12, epoch: 113, best train: 0.967, best val: 0.6863, lr: 0.01828
iteration: 12, epoch: 114, best train: 0.967, best val: 0.6863, lr: 0.01753
iteration: 12, epoch: 115, best train: 0.967, best val: 0.6863, lr: 0.01679
iteration: 12, epoch: 116, best train: 0.967, best val: 0.6863, lr: 0.01606
iteration: 12, epoch: 117, best train: 0.967, best val: 0.6863, lr: 0.01535
iteration: 12, epoch: 118, best train: 0.967, best val: 0.6873, lr: 0.01464
iteration: 12, epoch: 119, best train: 0.967, best val: 0.6893, lr: 0.01396
iteration: 12, epoch: 120, best train: 0.977, best val: 0.6902, lr: 0.01328
iteration: 12, epoch: 121, best train: 0.977, best val: 0.6902, lr: 0.01262
iteration: 12, epoch: 122, best train: 0.977, best val: 0.6902, lr: 0.01198
iteration: 12, epoch: 123, best train: 0.977, best val: 0.6902, lr: 0.01135
iteration: 12, epoch: 124, best train: 0.977, best val: 0.6902, lr: 0.01073
iteration: 12, epoch: 125, best train: 0.977, best val: 0.6902, lr: 0.01013
iteration: 12, epoch: 126, best train: 0.977, best val: 0.6902, lr: 0.00955
iteration: 12, epoch: 127, best train: 0.977, best val: 0.6902, lr: 0.00898
iteration: 12, epoch: 128, best train: 0.977, best val: 0.6902, lr: 0.00843
iteration: 12, epoch: 129, best train: 0.977, best val: 0.6902, lr: 0.00789
iteration: 12, epoch: 130, best train: 0.977, best val: 0.6909, lr: 0.00737
iteration: 12, epoch: 131, best train: 0.977, best val: 0.6928, lr: 0.00686
iteration: 12, epoch: 132, best train: 0.977, best val: 0.6928, lr: 0.00638
iteration: 12, epoch: 133, best train: 0.977, best val: 0.6928, lr: 0.0059
iteration: 12, epoch: 134, best train: 0.977, best val: 0.6928, lr: 0.00545
iteration: 12, epoch: 135, best train: 0.977, best val: 0.6928, lr: 0.00501
iteration: 12, epoch: 136, best train: 0.977, best val: 0.6928, lr: 0.00459
iteration: 12, epoch: 137, best train: 0.977, best val: 0.6928, lr: 0.00419
iteration: 12, epoch: 138, best train: 0.977, best val: 0.6928, lr: 0.00381
iteration: 12, epoch: 139, best train: 0.977, best val: 0.6928, lr: 0.00344
iteration: 12, epoch: 140, best train: 0.977, best val: 0.6928, lr: 0.00309
iteration: 12, epoch: 141, best train: 0.977, best val: 0.6928, lr: 0.00276
iteration: 12, epoch: 142, best train: 0.977, best val: 0.6928, lr: 0.00245
iteration: 12, epoch: 143, best train: 0.977, best val: 0.6928, lr: 0.00215
iteration: 12, epoch: 144, best train: 0.977, best val: 0.6928, lr: 0.00188
iteration: 12, epoch: 145, best train: 0.977, best val: 0.6928, lr: 0.00162
iteration: 12, epoch: 146, best train: 0.977, best val: 0.6928, lr: 0.00138
iteration: 12, epoch: 147, best train: 0.977, best val: 0.6928, lr: 0.00116
iteration: 12, epoch: 148, best train: 0.977, best val: 0.6928, lr: 0.00096
iteration: 12, epoch: 149, best train: 0.977, best val: 0.6928, lr: 0.00078
iteration: 12, epoch: 150, best train: 0.977, best val: 0.6928, lr: 0.00062
iteration: 12, epoch: 151, best train: 0.977, best val: 0.6928, lr: 0.00047
iteration: 12, epoch: 152, best train: 0.977, best val: 0.6928, lr: 0.00035
iteration: 12, epoch: 153, best train: 0.977, best val: 0.6928, lr: 0.00024
iteration: 12, epoch: 154, best train: 0.977, best val: 0.6928, lr: 0.00015
iteration: 12, epoch: 155, best train: 0.977, best val: 0.6928, lr: 9e-05
iteration: 12, epoch: 156, best train: 0.977, best val: 0.6928, lr: 4e-05
iteration: 12, epoch: 157, best train: 0.977, best val: 0.6928, lr: 1e-05
iteration: 12, epoch: 158, best train: 0.977, best val: 0.6928, lr: 0.0
iteration: 12, epoch: 159, best train: 0.977, best val: 0.6928, lr: 1e-05
------------------------ Checkpoint 40  ------------------------
pre_conv.0.weight_mask 	|	active =  607 	|	total =  1728 	|	layerwise sparsity =  0.35127314814814814
layer1.0.conv1.weight_mask 	|	active =  2026 	|	total =  36864 	|	layerwise sparsity =  0.05495876736111111
layer1.0.conv2.weight_mask 	|	active =  2026 	|	total =  36864 	|	layerwise sparsity =  0.05495876736111111
layer1.1.conv1.weight_mask 	|	active =  2026 	|	total =  36864 	|	layerwise sparsity =  0.05495876736111111
layer1.1.conv2.weight_mask 	|	active =  2026 	|	total =  36864 	|	layerwise sparsity =  0.05495876736111111
layer2.0.conv1.weight_mask 	|	active =  4054 	|	total =  73728 	|	layerwise sparsity =  0.054985894097222224
layer2.0.conv2.weight_mask 	|	active =  8106 	|	total =  147456 	|	layerwise sparsity =  0.054972330729166664
layer2.0.shortcut.0.weight_mask 	|	active =  2878 	|	total =  8192 	|	layerwise sparsity =  0.351318359375
layer2.1.conv1.weight_mask 	|	active =  8106 	|	total =  147456 	|	layerwise sparsity =  0.054972330729166664
layer2.1.conv2.weight_mask 	|	active =  8106 	|	total =  147456 	|	layerwise sparsity =  0.054972330729166664
layer3.0.conv1.weight_mask 	|	active =  16213 	|	total =  294912 	|	layerwise sparsity =  0.05497572157118055
layer3.0.conv2.weight_mask 	|	active =  21135 	|	total =  589824 	|	layerwise sparsity =  0.035832722981770836
layer3.0.shortcut.0.weight_mask 	|	active =  1801 	|	total =  32768 	|	layerwise sparsity =  0.054962158203125
layer3.1.conv1.weight_mask 	|	active =  20971 	|	total =  589824 	|	layerwise sparsity =  0.03555467393663195
layer3.1.conv2.weight_mask 	|	active =  22599 	|	total =  589824 	|	layerwise sparsity =  0.0383148193359375
layer4.0.conv1.weight_mask 	|	active =  56932 	|	total =  1179648 	|	layerwise sparsity =  0.04826185438368055
layer4.0.conv2.weight_mask 	|	active =  143769 	|	total =  2359296 	|	layerwise sparsity =  0.06093724568684896
layer4.0.shortcut.0.weight_mask 	|	active =  7206 	|	total =  131072 	|	layerwise sparsity =  0.0549774169921875
layer4.1.conv1.weight_mask 	|	active =  153682 	|	total =  2359296 	|	layerwise sparsity =  0.06513892279730903
layer4.1.conv2.weight_mask 	|	active =  157211 	|	total =  2359296 	|	layerwise sparsity =  0.06663470798068577
------------------------ Checkpoint 41  ------------------------
best_val =  0.6928
------------------------ Checkpoint 42  ------------------------
pruning state: 13
remaining weight at start of iteration =  5.748424264322127
iteration: 13, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 13, epoch: 1, best train: 0.545, best val: 0.1, lr: 0.09991
iteration: 13, epoch: 2, best train: 0.545, best val: 0.1097, lr: 0.09985
iteration: 13, epoch: 3, best train: 0.545, best val: 0.1592, lr: 0.09976
iteration: 13, epoch: 4, best train: 0.545, best val: 0.3787, lr: 0.09965
iteration: 13, epoch: 5, best train: 0.583, best val: 0.4996, lr: 0.09953
iteration: 13, epoch: 6, best train: 0.655, best val: 0.5304, lr: 0.09938
iteration: 13, epoch: 7, best train: 0.656, best val: 0.5304, lr: 0.09922
iteration: 13, epoch: 8, best train: 0.704, best val: 0.5304, lr: 0.09904
iteration: 13, epoch: 9, best train: 0.704, best val: 0.5304, lr: 0.09884
iteration: 13, epoch: 10, best train: 0.726, best val: 0.5504, lr: 0.09862
iteration: 13, epoch: 11, best train: 0.779, best val: 0.5713, lr: 0.09838
iteration: 13, epoch: 12, best train: 0.806, best val: 0.5764, lr: 0.09812
iteration: 13, epoch: 13, best train: 0.812, best val: 0.5764, lr: 0.09785
iteration: 13, epoch: 14, best train: 0.817, best val: 0.5764, lr: 0.09755
iteration: 13, epoch: 15, best train: 0.817, best val: 0.5764, lr: 0.09724
iteration: 13, epoch: 16, best train: 0.817, best val: 0.5764, lr: 0.09691
iteration: 13, epoch: 17, best train: 0.819, best val: 0.5891, lr: 0.09656
iteration: 13, epoch: 18, best train: 0.819, best val: 0.5917, lr: 0.09619
iteration: 13, epoch: 19, best train: 0.838, best val: 0.5917, lr: 0.09581
iteration: 13, epoch: 20, best train: 0.85, best val: 0.5917, lr: 0.09541
iteration: 13, epoch: 21, best train: 0.858, best val: 0.6128, lr: 0.09499
iteration: 13, epoch: 22, best train: 0.858, best val: 0.6128, lr: 0.09455
iteration: 13, epoch: 23, best train: 0.859, best val: 0.6168, lr: 0.0941
iteration: 13, epoch: 24, best train: 0.871, best val: 0.6168, lr: 0.09362
iteration: 13, epoch: 25, best train: 0.882, best val: 0.6168, lr: 0.09314
iteration: 13, epoch: 26, best train: 0.882, best val: 0.6168, lr: 0.09263
iteration: 13, epoch: 27, best train: 0.888, best val: 0.621, lr: 0.09211
iteration: 13, epoch: 28, best train: 0.888, best val: 0.621, lr: 0.09157
iteration: 13, epoch: 29, best train: 0.888, best val: 0.621, lr: 0.09102
iteration: 13, epoch: 30, best train: 0.888, best val: 0.621, lr: 0.09045
iteration: 13, epoch: 31, best train: 0.89, best val: 0.621, lr: 0.08987
iteration: 13, epoch: 32, best train: 0.898, best val: 0.6329, lr: 0.08927
iteration: 13, epoch: 33, best train: 0.898, best val: 0.6329, lr: 0.08865
iteration: 13, epoch: 34, best train: 0.898, best val: 0.6329, lr: 0.08802
iteration: 13, epoch: 35, best train: 0.906, best val: 0.6404, lr: 0.08738
iteration: 13, epoch: 36, best train: 0.906, best val: 0.6404, lr: 0.08672
iteration: 13, epoch: 37, best train: 0.906, best val: 0.6404, lr: 0.08604
iteration: 13, epoch: 38, best train: 0.909, best val: 0.6404, lr: 0.08536
iteration: 13, epoch: 39, best train: 0.909, best val: 0.6404, lr: 0.08465
iteration: 13, epoch: 40, best train: 0.912, best val: 0.6404, lr: 0.08394
iteration: 13, epoch: 41, best train: 0.912, best val: 0.6404, lr: 0.08321
iteration: 13, epoch: 42, best train: 0.92, best val: 0.6404, lr: 0.08247
iteration: 13, epoch: 43, best train: 0.92, best val: 0.6404, lr: 0.08172
iteration: 13, epoch: 44, best train: 0.92, best val: 0.6472, lr: 0.08095
iteration: 13, epoch: 45, best train: 0.92, best val: 0.6472, lr: 0.08018
iteration: 13, epoch: 46, best train: 0.92, best val: 0.649, lr: 0.07939
iteration: 13, epoch: 47, best train: 0.92, best val: 0.649, lr: 0.07859
iteration: 13, epoch: 48, best train: 0.923, best val: 0.6612, lr: 0.07778
iteration: 13, epoch: 49, best train: 0.924, best val: 0.6612, lr: 0.07696
iteration: 13, epoch: 50, best train: 0.932, best val: 0.6612, lr: 0.07612
iteration: 13, epoch: 51, best train: 0.932, best val: 0.6612, lr: 0.07528
iteration: 13, epoch: 52, best train: 0.932, best val: 0.6612, lr: 0.07443
iteration: 13, epoch: 53, best train: 0.932, best val: 0.6612, lr: 0.07357
iteration: 13, epoch: 54, best train: 0.932, best val: 0.6612, lr: 0.0727
iteration: 13, epoch: 55, best train: 0.941, best val: 0.6612, lr: 0.07182
iteration: 13, epoch: 56, best train: 0.941, best val: 0.6612, lr: 0.07093
iteration: 13, epoch: 57, best train: 0.941, best val: 0.6612, lr: 0.07004
iteration: 13, epoch: 58, best train: 0.941, best val: 0.6628, lr: 0.06913
iteration: 13, epoch: 59, best train: 0.941, best val: 0.6628, lr: 0.06822
iteration: 13, epoch: 60, best train: 0.941, best val: 0.6628, lr: 0.06731
iteration: 13, epoch: 61, best train: 0.941, best val: 0.6634, lr: 0.06638
iteration: 13, epoch: 62, best train: 0.941, best val: 0.6634, lr: 0.06545
iteration: 13, epoch: 63, best train: 0.941, best val: 0.6634, lr: 0.06451
iteration: 13, epoch: 64, best train: 0.941, best val: 0.6727, lr: 0.06357
iteration: 13, epoch: 65, best train: 0.941, best val: 0.6727, lr: 0.06262
iteration: 13, epoch: 66, best train: 0.941, best val: 0.6727, lr: 0.06167
iteration: 13, epoch: 67, best train: 0.941, best val: 0.6727, lr: 0.06072
iteration: 13, epoch: 68, best train: 0.946, best val: 0.6727, lr: 0.05975
iteration: 13, epoch: 69, best train: 0.946, best val: 0.6727, lr: 0.05879
iteration: 13, epoch: 70, best train: 0.948, best val: 0.6727, lr: 0.05782
iteration: 13, epoch: 71, best train: 0.951, best val: 0.6762, lr: 0.05685
iteration: 13, epoch: 72, best train: 0.951, best val: 0.6762, lr: 0.05588
iteration: 13, epoch: 73, best train: 0.951, best val: 0.6762, lr: 0.0549
iteration: 13, epoch: 74, best train: 0.951, best val: 0.6762, lr: 0.05392
iteration: 13, epoch: 75, best train: 0.951, best val: 0.6762, lr: 0.05294
iteration: 13, epoch: 76, best train: 0.951, best val: 0.6762, lr: 0.05196
iteration: 13, epoch: 77, best train: 0.959, best val: 0.6762, lr: 0.05098
iteration: 13, epoch: 78, best train: 0.959, best val: 0.6762, lr: 0.05
iteration: 13, epoch: 79, best train: 0.959, best val: 0.6762, lr: 0.04902
iteration: 13, epoch: 80, best train: 0.959, best val: 0.6762, lr: 0.04804
iteration: 13, epoch: 81, best train: 0.959, best val: 0.6762, lr: 0.04706
iteration: 13, epoch: 82, best train: 0.959, best val: 0.6762, lr: 0.04608
iteration: 13, epoch: 83, best train: 0.959, best val: 0.6762, lr: 0.0451
iteration: 13, epoch: 84, best train: 0.959, best val: 0.6762, lr: 0.04412
iteration: 13, epoch: 85, best train: 0.959, best val: 0.6762, lr: 0.04315
iteration: 13, epoch: 86, best train: 0.959, best val: 0.6762, lr: 0.04218
iteration: 13, epoch: 87, best train: 0.959, best val: 0.6762, lr: 0.04121
iteration: 13, epoch: 88, best train: 0.961, best val: 0.6836, lr: 0.04025
iteration: 13, epoch: 89, best train: 0.961, best val: 0.6836, lr: 0.03928
iteration: 13, epoch: 90, best train: 0.961, best val: 0.6836, lr: 0.03833
iteration: 13, epoch: 91, best train: 0.961, best val: 0.6836, lr: 0.03738
iteration: 13, epoch: 92, best train: 0.961, best val: 0.6836, lr: 0.03643
iteration: 13, epoch: 93, best train: 0.961, best val: 0.6836, lr: 0.03549
iteration: 13, epoch: 94, best train: 0.961, best val: 0.6836, lr: 0.03455
iteration: 13, epoch: 95, best train: 0.961, best val: 0.6859, lr: 0.03362
iteration: 13, epoch: 96, best train: 0.966, best val: 0.6862, lr: 0.03269
iteration: 13, epoch: 97, best train: 0.966, best val: 0.6862, lr: 0.03178
iteration: 13, epoch: 98, best train: 0.966, best val: 0.6862, lr: 0.03087
iteration: 13, epoch: 99, best train: 0.966, best val: 0.6862, lr: 0.02996
iteration: 13, epoch: 100, best train: 0.966, best val: 0.6862, lr: 0.02907
iteration: 13, epoch: 101, best train: 0.966, best val: 0.6862, lr: 0.02818
iteration: 13, epoch: 102, best train: 0.966, best val: 0.6862, lr: 0.0273
iteration: 13, epoch: 103, best train: 0.966, best val: 0.6862, lr: 0.02643
iteration: 13, epoch: 104, best train: 0.966, best val: 0.6862, lr: 0.02557
iteration: 13, epoch: 105, best train: 0.966, best val: 0.6868, lr: 0.02472
iteration: 13, epoch: 106, best train: 0.966, best val: 0.6917, lr: 0.02388
iteration: 13, epoch: 107, best train: 0.966, best val: 0.6943, lr: 0.02304
iteration: 13, epoch: 108, best train: 0.966, best val: 0.6943, lr: 0.02222
iteration: 13, epoch: 109, best train: 0.966, best val: 0.6943, lr: 0.02141
iteration: 13, epoch: 110, best train: 0.966, best val: 0.6943, lr: 0.02061
iteration: 13, epoch: 111, best train: 0.966, best val: 0.6943, lr: 0.01982
iteration: 13, epoch: 112, best train: 0.966, best val: 0.6943, lr: 0.01905
iteration: 13, epoch: 113, best train: 0.966, best val: 0.6943, lr: 0.01828
iteration: 13, epoch: 114, best train: 0.966, best val: 0.6943, lr: 0.01753
iteration: 13, epoch: 115, best train: 0.966, best val: 0.6943, lr: 0.01679
iteration: 13, epoch: 116, best train: 0.966, best val: 0.6943, lr: 0.01606
iteration: 13, epoch: 117, best train: 0.966, best val: 0.6943, lr: 0.01535
iteration: 13, epoch: 118, best train: 0.966, best val: 0.6943, lr: 0.01464
iteration: 13, epoch: 119, best train: 0.966, best val: 0.6943, lr: 0.01396
iteration: 13, epoch: 120, best train: 0.966, best val: 0.6943, lr: 0.01328
iteration: 13, epoch: 121, best train: 0.966, best val: 0.6943, lr: 0.01262
iteration: 13, epoch: 122, best train: 0.966, best val: 0.6943, lr: 0.01198
iteration: 13, epoch: 123, best train: 0.967, best val: 0.6943, lr: 0.01135
iteration: 13, epoch: 124, best train: 0.967, best val: 0.6943, lr: 0.01073
iteration: 13, epoch: 125, best train: 0.967, best val: 0.6943, lr: 0.01013
iteration: 13, epoch: 126, best train: 0.967, best val: 0.6943, lr: 0.00955
iteration: 13, epoch: 127, best train: 0.967, best val: 0.6943, lr: 0.00898
iteration: 13, epoch: 128, best train: 0.967, best val: 0.6943, lr: 0.00843
iteration: 13, epoch: 129, best train: 0.967, best val: 0.6943, lr: 0.00789
iteration: 13, epoch: 130, best train: 0.967, best val: 0.6943, lr: 0.00737
iteration: 13, epoch: 131, best train: 0.967, best val: 0.6943, lr: 0.00686
iteration: 13, epoch: 132, best train: 0.967, best val: 0.6943, lr: 0.00638
iteration: 13, epoch: 133, best train: 0.967, best val: 0.6943, lr: 0.0059
iteration: 13, epoch: 134, best train: 0.972, best val: 0.6943, lr: 0.00545
iteration: 13, epoch: 135, best train: 0.972, best val: 0.6943, lr: 0.00501
iteration: 13, epoch: 136, best train: 0.972, best val: 0.6943, lr: 0.00459
iteration: 13, epoch: 137, best train: 0.972, best val: 0.6943, lr: 0.00419
iteration: 13, epoch: 138, best train: 0.972, best val: 0.6943, lr: 0.00381
iteration: 13, epoch: 139, best train: 0.972, best val: 0.6943, lr: 0.00344
iteration: 13, epoch: 140, best train: 0.973, best val: 0.6943, lr: 0.00309
iteration: 13, epoch: 141, best train: 0.981, best val: 0.6943, lr: 0.00276
iteration: 13, epoch: 142, best train: 0.981, best val: 0.6943, lr: 0.00245
iteration: 13, epoch: 143, best train: 0.981, best val: 0.6943, lr: 0.00215
iteration: 13, epoch: 144, best train: 0.981, best val: 0.6943, lr: 0.00188
iteration: 13, epoch: 145, best train: 0.981, best val: 0.6943, lr: 0.00162
iteration: 13, epoch: 146, best train: 0.981, best val: 0.6943, lr: 0.00138
iteration: 13, epoch: 147, best train: 0.981, best val: 0.6943, lr: 0.00116
iteration: 13, epoch: 148, best train: 0.981, best val: 0.6943, lr: 0.00096
iteration: 13, epoch: 149, best train: 0.981, best val: 0.6943, lr: 0.00078
iteration: 13, epoch: 150, best train: 0.981, best val: 0.6943, lr: 0.00062
iteration: 13, epoch: 151, best train: 0.981, best val: 0.6943, lr: 0.00047
iteration: 13, epoch: 152, best train: 0.981, best val: 0.6943, lr: 0.00035
iteration: 13, epoch: 153, best train: 0.981, best val: 0.6943, lr: 0.00024
iteration: 13, epoch: 154, best train: 0.981, best val: 0.6943, lr: 0.00015
iteration: 13, epoch: 155, best train: 0.981, best val: 0.6943, lr: 9e-05
iteration: 13, epoch: 156, best train: 0.981, best val: 0.6944, lr: 4e-05
iteration: 13, epoch: 157, best train: 0.981, best val: 0.6944, lr: 1e-05
iteration: 13, epoch: 158, best train: 0.981, best val: 0.6944, lr: 0.0
iteration: 13, epoch: 159, best train: 0.981, best val: 0.6948, lr: 1e-05
------------------------ Checkpoint 43  ------------------------
pre_conv.0.weight_mask 	|	active =  560 	|	total =  1728 	|	layerwise sparsity =  0.32407407407407407
layer1.0.conv1.weight_mask 	|	active =  1621 	|	total =  36864 	|	layerwise sparsity =  0.04397243923611111
layer1.0.conv2.weight_mask 	|	active =  1621 	|	total =  36864 	|	layerwise sparsity =  0.04397243923611111
layer1.1.conv1.weight_mask 	|	active =  1621 	|	total =  36864 	|	layerwise sparsity =  0.04397243923611111
layer1.1.conv2.weight_mask 	|	active =  1621 	|	total =  36864 	|	layerwise sparsity =  0.04397243923611111
layer2.0.conv1.weight_mask 	|	active =  3243 	|	total =  73728 	|	layerwise sparsity =  0.043986002604166664
layer2.0.conv2.weight_mask 	|	active =  6485 	|	total =  147456 	|	layerwise sparsity =  0.04397922092013889
layer2.0.shortcut.0.weight_mask 	|	active =  2655 	|	total =  8192 	|	layerwise sparsity =  0.3240966796875
layer2.1.conv1.weight_mask 	|	active =  6485 	|	total =  147456 	|	layerwise sparsity =  0.04397922092013889
layer2.1.conv2.weight_mask 	|	active =  6485 	|	total =  147456 	|	layerwise sparsity =  0.04397922092013889
layer3.0.conv1.weight_mask 	|	active =  12970 	|	total =  294912 	|	layerwise sparsity =  0.04397922092013889
layer3.0.conv2.weight_mask 	|	active =  16360 	|	total =  589824 	|	layerwise sparsity =  0.027737087673611112
layer3.0.shortcut.0.weight_mask 	|	active =  1441 	|	total =  32768 	|	layerwise sparsity =  0.043975830078125
layer3.1.conv1.weight_mask 	|	active =  16224 	|	total =  589824 	|	layerwise sparsity =  0.027506510416666668
layer3.1.conv2.weight_mask 	|	active =  17584 	|	total =  589824 	|	layerwise sparsity =  0.029812282986111112
layer4.0.conv1.weight_mask 	|	active =  45092 	|	total =  1179648 	|	layerwise sparsity =  0.03822496202256945
layer4.0.conv2.weight_mask 	|	active =  115930 	|	total =  2359296 	|	layerwise sparsity =  0.04913753933376736
layer4.0.shortcut.0.weight_mask 	|	active =  5765 	|	total =  131072 	|	layerwise sparsity =  0.04398345947265625
layer4.1.conv1.weight_mask 	|	active =  124560 	|	total =  2359296 	|	layerwise sparsity =  0.05279541015625
layer4.1.conv2.weight_mask 	|	active =  127643 	|	total =  2359296 	|	layerwise sparsity =  0.05410215589735243
------------------------ Checkpoint 44  ------------------------
best_val =  0.6948000000000001
------------------------ Checkpoint 45  ------------------------
pruning state: 14
remaining weight at start of iteration =  4.6236694424849345
iteration: 14, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 14, epoch: 1, best train: 0.601, best val: 0.1066, lr: 0.09991
iteration: 14, epoch: 2, best train: 0.601, best val: 0.1066, lr: 0.09985
iteration: 14, epoch: 3, best train: 0.601, best val: 0.1322, lr: 0.09976
iteration: 14, epoch: 4, best train: 0.601, best val: 0.3369, lr: 0.09965
iteration: 14, epoch: 5, best train: 0.601, best val: 0.4546, lr: 0.09953
iteration: 14, epoch: 6, best train: 0.645, best val: 0.5604, lr: 0.09938
iteration: 14, epoch: 7, best train: 0.692, best val: 0.5604, lr: 0.09922
iteration: 14, epoch: 8, best train: 0.699, best val: 0.5604, lr: 0.09904
iteration: 14, epoch: 9, best train: 0.738, best val: 0.5604, lr: 0.09884
iteration: 14, epoch: 10, best train: 0.76, best val: 0.5604, lr: 0.09862
iteration: 14, epoch: 11, best train: 0.761, best val: 0.5886, lr: 0.09838
iteration: 14, epoch: 12, best train: 0.761, best val: 0.6136, lr: 0.09812
iteration: 14, epoch: 13, best train: 0.784, best val: 0.6136, lr: 0.09785
iteration: 14, epoch: 14, best train: 0.804, best val: 0.6136, lr: 0.09755
iteration: 14, epoch: 15, best train: 0.808, best val: 0.6136, lr: 0.09724
iteration: 14, epoch: 16, best train: 0.825, best val: 0.6136, lr: 0.09691
iteration: 14, epoch: 17, best train: 0.831, best val: 0.6136, lr: 0.09656
iteration: 14, epoch: 18, best train: 0.831, best val: 0.6136, lr: 0.09619
iteration: 14, epoch: 19, best train: 0.842, best val: 0.6136, lr: 0.09581
iteration: 14, epoch: 20, best train: 0.857, best val: 0.6136, lr: 0.09541
iteration: 14, epoch: 21, best train: 0.857, best val: 0.6136, lr: 0.09499
iteration: 14, epoch: 22, best train: 0.86, best val: 0.6136, lr: 0.09455
iteration: 14, epoch: 23, best train: 0.86, best val: 0.6136, lr: 0.0941
iteration: 14, epoch: 24, best train: 0.866, best val: 0.6136, lr: 0.09362
iteration: 14, epoch: 25, best train: 0.879, best val: 0.6136, lr: 0.09314
iteration: 14, epoch: 26, best train: 0.879, best val: 0.6136, lr: 0.09263
iteration: 14, epoch: 27, best train: 0.879, best val: 0.6136, lr: 0.09211
iteration: 14, epoch: 28, best train: 0.879, best val: 0.6136, lr: 0.09157
iteration: 14, epoch: 29, best train: 0.879, best val: 0.6136, lr: 0.09102
iteration: 14, epoch: 30, best train: 0.884, best val: 0.6136, lr: 0.09045
iteration: 14, epoch: 31, best train: 0.892, best val: 0.6136, lr: 0.08987
iteration: 14, epoch: 32, best train: 0.892, best val: 0.6191, lr: 0.08927
iteration: 14, epoch: 33, best train: 0.898, best val: 0.6463, lr: 0.08865
iteration: 14, epoch: 34, best train: 0.898, best val: 0.6463, lr: 0.08802
iteration: 14, epoch: 35, best train: 0.91, best val: 0.6463, lr: 0.08738
iteration: 14, epoch: 36, best train: 0.91, best val: 0.6463, lr: 0.08672
iteration: 14, epoch: 37, best train: 0.913, best val: 0.6463, lr: 0.08604
iteration: 14, epoch: 38, best train: 0.913, best val: 0.6463, lr: 0.08536
iteration: 14, epoch: 39, best train: 0.913, best val: 0.6463, lr: 0.08465
iteration: 14, epoch: 40, best train: 0.918, best val: 0.6463, lr: 0.08394
iteration: 14, epoch: 41, best train: 0.919, best val: 0.6463, lr: 0.08321
iteration: 14, epoch: 42, best train: 0.919, best val: 0.6463, lr: 0.08247
iteration: 14, epoch: 43, best train: 0.919, best val: 0.6463, lr: 0.08172
iteration: 14, epoch: 44, best train: 0.919, best val: 0.6463, lr: 0.08095
iteration: 14, epoch: 45, best train: 0.919, best val: 0.6463, lr: 0.08018
iteration: 14, epoch: 46, best train: 0.919, best val: 0.6517, lr: 0.07939
iteration: 14, epoch: 47, best train: 0.919, best val: 0.6517, lr: 0.07859
iteration: 14, epoch: 48, best train: 0.937, best val: 0.6517, lr: 0.07778
iteration: 14, epoch: 49, best train: 0.937, best val: 0.6533, lr: 0.07696
iteration: 14, epoch: 50, best train: 0.937, best val: 0.6533, lr: 0.07612
iteration: 14, epoch: 51, best train: 0.937, best val: 0.6533, lr: 0.07528
iteration: 14, epoch: 52, best train: 0.937, best val: 0.6533, lr: 0.07443
iteration: 14, epoch: 53, best train: 0.937, best val: 0.6533, lr: 0.07357
iteration: 14, epoch: 54, best train: 0.937, best val: 0.6533, lr: 0.0727
iteration: 14, epoch: 55, best train: 0.937, best val: 0.6559, lr: 0.07182
iteration: 14, epoch: 56, best train: 0.937, best val: 0.6559, lr: 0.07093
iteration: 14, epoch: 57, best train: 0.937, best val: 0.6581, lr: 0.07004
iteration: 14, epoch: 58, best train: 0.937, best val: 0.6673, lr: 0.06913
iteration: 14, epoch: 59, best train: 0.937, best val: 0.6673, lr: 0.06822
iteration: 14, epoch: 60, best train: 0.937, best val: 0.6673, lr: 0.06731
iteration: 14, epoch: 61, best train: 0.937, best val: 0.6673, lr: 0.06638
iteration: 14, epoch: 62, best train: 0.937, best val: 0.6673, lr: 0.06545
iteration: 14, epoch: 63, best train: 0.937, best val: 0.6673, lr: 0.06451
iteration: 14, epoch: 64, best train: 0.938, best val: 0.6673, lr: 0.06357
iteration: 14, epoch: 65, best train: 0.938, best val: 0.6673, lr: 0.06262
iteration: 14, epoch: 66, best train: 0.944, best val: 0.6673, lr: 0.06167
iteration: 14, epoch: 67, best train: 0.952, best val: 0.6673, lr: 0.06072
iteration: 14, epoch: 68, best train: 0.952, best val: 0.6673, lr: 0.05975
iteration: 14, epoch: 69, best train: 0.952, best val: 0.6679, lr: 0.05879
iteration: 14, epoch: 70, best train: 0.952, best val: 0.6679, lr: 0.05782
iteration: 14, epoch: 71, best train: 0.952, best val: 0.6679, lr: 0.05685
iteration: 14, epoch: 72, best train: 0.952, best val: 0.6679, lr: 0.05588
iteration: 14, epoch: 73, best train: 0.952, best val: 0.6733, lr: 0.0549
iteration: 14, epoch: 74, best train: 0.952, best val: 0.6733, lr: 0.05392
iteration: 14, epoch: 75, best train: 0.952, best val: 0.6733, lr: 0.05294
iteration: 14, epoch: 76, best train: 0.952, best val: 0.6733, lr: 0.05196
iteration: 14, epoch: 77, best train: 0.952, best val: 0.6733, lr: 0.05098
iteration: 14, epoch: 78, best train: 0.952, best val: 0.6733, lr: 0.05
iteration: 14, epoch: 79, best train: 0.952, best val: 0.6733, lr: 0.04902
iteration: 14, epoch: 80, best train: 0.952, best val: 0.6733, lr: 0.04804
iteration: 14, epoch: 81, best train: 0.952, best val: 0.6733, lr: 0.04706
iteration: 14, epoch: 82, best train: 0.952, best val: 0.6733, lr: 0.04608
iteration: 14, epoch: 83, best train: 0.952, best val: 0.6733, lr: 0.0451
iteration: 14, epoch: 84, best train: 0.956, best val: 0.6733, lr: 0.04412
iteration: 14, epoch: 85, best train: 0.956, best val: 0.6733, lr: 0.04315
iteration: 14, epoch: 86, best train: 0.956, best val: 0.6741, lr: 0.04218
iteration: 14, epoch: 87, best train: 0.956, best val: 0.6741, lr: 0.04121
iteration: 14, epoch: 88, best train: 0.956, best val: 0.6741, lr: 0.04025
iteration: 14, epoch: 89, best train: 0.956, best val: 0.6741, lr: 0.03928
iteration: 14, epoch: 90, best train: 0.956, best val: 0.6763, lr: 0.03833
iteration: 14, epoch: 91, best train: 0.956, best val: 0.6856, lr: 0.03738
iteration: 14, epoch: 92, best train: 0.96, best val: 0.6856, lr: 0.03643
iteration: 14, epoch: 93, best train: 0.96, best val: 0.69, lr: 0.03549
iteration: 14, epoch: 94, best train: 0.96, best val: 0.69, lr: 0.03455
iteration: 14, epoch: 95, best train: 0.96, best val: 0.69, lr: 0.03362
iteration: 14, epoch: 96, best train: 0.96, best val: 0.69, lr: 0.03269
iteration: 14, epoch: 97, best train: 0.96, best val: 0.69, lr: 0.03178
iteration: 14, epoch: 98, best train: 0.96, best val: 0.69, lr: 0.03087
iteration: 14, epoch: 99, best train: 0.96, best val: 0.69, lr: 0.02996
iteration: 14, epoch: 100, best train: 0.964, best val: 0.69, lr: 0.02907
iteration: 14, epoch: 101, best train: 0.964, best val: 0.69, lr: 0.02818
iteration: 14, epoch: 102, best train: 0.964, best val: 0.6933, lr: 0.0273
iteration: 14, epoch: 103, best train: 0.964, best val: 0.6933, lr: 0.02643
iteration: 14, epoch: 104, best train: 0.964, best val: 0.6933, lr: 0.02557
iteration: 14, epoch: 105, best train: 0.964, best val: 0.6933, lr: 0.02472
iteration: 14, epoch: 106, best train: 0.964, best val: 0.6933, lr: 0.02388
iteration: 14, epoch: 107, best train: 0.964, best val: 0.6933, lr: 0.02304
iteration: 14, epoch: 108, best train: 0.964, best val: 0.6933, lr: 0.02222
iteration: 14, epoch: 109, best train: 0.964, best val: 0.6933, lr: 0.02141
iteration: 14, epoch: 110, best train: 0.964, best val: 0.6933, lr: 0.02061
iteration: 14, epoch: 111, best train: 0.968, best val: 0.6933, lr: 0.01982
iteration: 14, epoch: 112, best train: 0.968, best val: 0.6933, lr: 0.01905
iteration: 14, epoch: 113, best train: 0.968, best val: 0.6933, lr: 0.01828
iteration: 14, epoch: 114, best train: 0.968, best val: 0.6933, lr: 0.01753
iteration: 14, epoch: 115, best train: 0.968, best val: 0.6933, lr: 0.01679
iteration: 14, epoch: 116, best train: 0.968, best val: 0.6933, lr: 0.01606
iteration: 14, epoch: 117, best train: 0.968, best val: 0.6933, lr: 0.01535
iteration: 14, epoch: 118, best train: 0.968, best val: 0.6933, lr: 0.01464
iteration: 14, epoch: 119, best train: 0.968, best val: 0.6933, lr: 0.01396
iteration: 14, epoch: 120, best train: 0.968, best val: 0.6933, lr: 0.01328
iteration: 14, epoch: 121, best train: 0.968, best val: 0.6933, lr: 0.01262
iteration: 14, epoch: 122, best train: 0.968, best val: 0.6933, lr: 0.01198
iteration: 14, epoch: 123, best train: 0.968, best val: 0.6933, lr: 0.01135
iteration: 14, epoch: 124, best train: 0.968, best val: 0.6933, lr: 0.01073
iteration: 14, epoch: 125, best train: 0.968, best val: 0.6933, lr: 0.01013
iteration: 14, epoch: 126, best train: 0.968, best val: 0.6933, lr: 0.00955
iteration: 14, epoch: 127, best train: 0.976, best val: 0.6945, lr: 0.00898
iteration: 14, epoch: 128, best train: 0.976, best val: 0.6955, lr: 0.00843
iteration: 14, epoch: 129, best train: 0.976, best val: 0.6955, lr: 0.00789
iteration: 14, epoch: 130, best train: 0.976, best val: 0.6955, lr: 0.00737
iteration: 14, epoch: 131, best train: 0.976, best val: 0.6955, lr: 0.00686
iteration: 14, epoch: 132, best train: 0.976, best val: 0.6955, lr: 0.00638
iteration: 14, epoch: 133, best train: 0.976, best val: 0.6955, lr: 0.0059
iteration: 14, epoch: 134, best train: 0.976, best val: 0.6955, lr: 0.00545
iteration: 14, epoch: 135, best train: 0.976, best val: 0.6955, lr: 0.00501
iteration: 14, epoch: 136, best train: 0.976, best val: 0.6955, lr: 0.00459
iteration: 14, epoch: 137, best train: 0.976, best val: 0.6955, lr: 0.00419
iteration: 14, epoch: 138, best train: 0.976, best val: 0.6955, lr: 0.00381
iteration: 14, epoch: 139, best train: 0.976, best val: 0.6955, lr: 0.00344
iteration: 14, epoch: 140, best train: 0.976, best val: 0.6955, lr: 0.00309
iteration: 14, epoch: 141, best train: 0.976, best val: 0.6955, lr: 0.00276
iteration: 14, epoch: 142, best train: 0.976, best val: 0.6955, lr: 0.00245
iteration: 14, epoch: 143, best train: 0.976, best val: 0.6955, lr: 0.00215
iteration: 14, epoch: 144, best train: 0.976, best val: 0.6955, lr: 0.00188
iteration: 14, epoch: 145, best train: 0.976, best val: 0.6955, lr: 0.00162
iteration: 14, epoch: 146, best train: 0.976, best val: 0.6955, lr: 0.00138
iteration: 14, epoch: 147, best train: 0.976, best val: 0.6955, lr: 0.00116
iteration: 14, epoch: 148, best train: 0.976, best val: 0.6955, lr: 0.00096
iteration: 14, epoch: 149, best train: 0.976, best val: 0.6955, lr: 0.00078
iteration: 14, epoch: 150, best train: 0.976, best val: 0.6955, lr: 0.00062
iteration: 14, epoch: 151, best train: 0.976, best val: 0.6956, lr: 0.00047
iteration: 14, epoch: 152, best train: 0.976, best val: 0.6956, lr: 0.00035
iteration: 14, epoch: 153, best train: 0.976, best val: 0.6956, lr: 0.00024
iteration: 14, epoch: 154, best train: 0.976, best val: 0.6956, lr: 0.00015
iteration: 14, epoch: 155, best train: 0.976, best val: 0.6956, lr: 9e-05
iteration: 14, epoch: 156, best train: 0.976, best val: 0.6956, lr: 4e-05
iteration: 14, epoch: 157, best train: 0.976, best val: 0.6956, lr: 1e-05
iteration: 14, epoch: 158, best train: 0.976, best val: 0.6956, lr: 0.0
iteration: 14, epoch: 159, best train: 0.976, best val: 0.6956, lr: 1e-05
------------------------ Checkpoint 46  ------------------------
pre_conv.0.weight_mask 	|	active =  517 	|	total =  1728 	|	layerwise sparsity =  0.2991898148148148
layer1.0.conv1.weight_mask 	|	active =  1297 	|	total =  36864 	|	layerwise sparsity =  0.03518337673611111
layer1.0.conv2.weight_mask 	|	active =  1297 	|	total =  36864 	|	layerwise sparsity =  0.03518337673611111
layer1.1.conv1.weight_mask 	|	active =  1297 	|	total =  36864 	|	layerwise sparsity =  0.03518337673611111
layer1.1.conv2.weight_mask 	|	active =  1297 	|	total =  36864 	|	layerwise sparsity =  0.03518337673611111
layer2.0.conv1.weight_mask 	|	active =  2594 	|	total =  73728 	|	layerwise sparsity =  0.03518337673611111
layer2.0.conv2.weight_mask 	|	active =  5188 	|	total =  147456 	|	layerwise sparsity =  0.03518337673611111
layer2.0.shortcut.0.weight_mask 	|	active =  2450 	|	total =  8192 	|	layerwise sparsity =  0.299072265625
layer2.1.conv1.weight_mask 	|	active =  5188 	|	total =  147456 	|	layerwise sparsity =  0.03518337673611111
layer2.1.conv2.weight_mask 	|	active =  5188 	|	total =  147456 	|	layerwise sparsity =  0.03518337673611111
layer3.0.conv1.weight_mask 	|	active =  10376 	|	total =  294912 	|	layerwise sparsity =  0.03518337673611111
layer3.0.conv2.weight_mask 	|	active =  12664 	|	total =  589824 	|	layerwise sparsity =  0.021470811631944444
layer3.0.shortcut.0.weight_mask 	|	active =  1153 	|	total =  32768 	|	layerwise sparsity =  0.035186767578125
layer3.1.conv1.weight_mask 	|	active =  12551 	|	total =  589824 	|	layerwise sparsity =  0.021279229058159724
layer3.1.conv2.weight_mask 	|	active =  13682 	|	total =  589824 	|	layerwise sparsity =  0.023196750217013888
layer4.0.conv1.weight_mask 	|	active =  35714 	|	total =  1179648 	|	layerwise sparsity =  0.030275132921006944
layer4.0.conv2.weight_mask 	|	active =  93481 	|	total =  2359296 	|	layerwise sparsity =  0.0396224127875434
layer4.0.shortcut.0.weight_mask 	|	active =  4612 	|	total =  131072 	|	layerwise sparsity =  0.035186767578125
layer4.1.conv1.weight_mask 	|	active =  100957 	|	total =  2359296 	|	layerwise sparsity =  0.04279115464952257
layer4.1.conv2.weight_mask 	|	active =  103636 	|	total =  2359296 	|	layerwise sparsity =  0.04392666286892361
------------------------ Checkpoint 47  ------------------------
best_val =  0.6956
------------------------ Checkpoint 48  ------------------------
pruning state: 15
remaining weight at start of iteration =  3.7201395221463263
iteration: 15, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 15, epoch: 1, best train: 0.471, best val: 0.1, lr: 0.09991
iteration: 15, epoch: 2, best train: 0.471, best val: 0.1, lr: 0.09985
iteration: 15, epoch: 3, best train: 0.471, best val: 0.1022, lr: 0.09976
iteration: 15, epoch: 4, best train: 0.509, best val: 0.246, lr: 0.09965
iteration: 15, epoch: 5, best train: 0.554, best val: 0.4506, lr: 0.09953
iteration: 15, epoch: 6, best train: 0.593, best val: 0.4506, lr: 0.09938
iteration: 15, epoch: 7, best train: 0.598, best val: 0.5692, lr: 0.09922
iteration: 15, epoch: 8, best train: 0.645, best val: 0.5692, lr: 0.09904
iteration: 15, epoch: 9, best train: 0.708, best val: 0.5692, lr: 0.09884
iteration: 15, epoch: 10, best train: 0.708, best val: 0.5692, lr: 0.09862
iteration: 15, epoch: 11, best train: 0.708, best val: 0.5692, lr: 0.09838
iteration: 15, epoch: 12, best train: 0.728, best val: 0.5803, lr: 0.09812
iteration: 15, epoch: 13, best train: 0.75, best val: 0.5803, lr: 0.09785
iteration: 15, epoch: 14, best train: 0.805, best val: 0.627, lr: 0.09755
iteration: 15, epoch: 15, best train: 0.805, best val: 0.627, lr: 0.09724
iteration: 15, epoch: 16, best train: 0.805, best val: 0.627, lr: 0.09691
iteration: 15, epoch: 17, best train: 0.805, best val: 0.627, lr: 0.09656
iteration: 15, epoch: 18, best train: 0.819, best val: 0.6319, lr: 0.09619
iteration: 15, epoch: 19, best train: 0.833, best val: 0.6319, lr: 0.09581
iteration: 15, epoch: 20, best train: 0.833, best val: 0.636, lr: 0.09541
iteration: 15, epoch: 21, best train: 0.845, best val: 0.636, lr: 0.09499
iteration: 15, epoch: 22, best train: 0.852, best val: 0.636, lr: 0.09455
iteration: 15, epoch: 23, best train: 0.852, best val: 0.636, lr: 0.0941
iteration: 15, epoch: 24, best train: 0.852, best val: 0.636, lr: 0.09362
iteration: 15, epoch: 25, best train: 0.867, best val: 0.636, lr: 0.09314
iteration: 15, epoch: 26, best train: 0.867, best val: 0.636, lr: 0.09263
iteration: 15, epoch: 27, best train: 0.878, best val: 0.636, lr: 0.09211
iteration: 15, epoch: 28, best train: 0.878, best val: 0.6528, lr: 0.09157
iteration: 15, epoch: 29, best train: 0.878, best val: 0.6528, lr: 0.09102
iteration: 15, epoch: 30, best train: 0.878, best val: 0.6528, lr: 0.09045
iteration: 15, epoch: 31, best train: 0.878, best val: 0.6528, lr: 0.08987
iteration: 15, epoch: 32, best train: 0.878, best val: 0.6528, lr: 0.08927
iteration: 15, epoch: 33, best train: 0.878, best val: 0.6528, lr: 0.08865
iteration: 15, epoch: 34, best train: 0.878, best val: 0.6528, lr: 0.08802
iteration: 15, epoch: 35, best train: 0.878, best val: 0.6528, lr: 0.08738
iteration: 15, epoch: 36, best train: 0.898, best val: 0.6528, lr: 0.08672
iteration: 15, epoch: 37, best train: 0.898, best val: 0.6528, lr: 0.08604
iteration: 15, epoch: 38, best train: 0.898, best val: 0.6528, lr: 0.08536
iteration: 15, epoch: 39, best train: 0.898, best val: 0.6528, lr: 0.08465
iteration: 15, epoch: 40, best train: 0.898, best val: 0.6635, lr: 0.08394
iteration: 15, epoch: 41, best train: 0.898, best val: 0.6635, lr: 0.08321
iteration: 15, epoch: 42, best train: 0.898, best val: 0.6635, lr: 0.08247
iteration: 15, epoch: 43, best train: 0.898, best val: 0.6635, lr: 0.08172
iteration: 15, epoch: 44, best train: 0.918, best val: 0.6635, lr: 0.08095
iteration: 15, epoch: 45, best train: 0.918, best val: 0.6635, lr: 0.08018
iteration: 15, epoch: 46, best train: 0.918, best val: 0.6635, lr: 0.07939
iteration: 15, epoch: 47, best train: 0.918, best val: 0.6635, lr: 0.07859
iteration: 15, epoch: 48, best train: 0.918, best val: 0.6635, lr: 0.07778
iteration: 15, epoch: 49, best train: 0.918, best val: 0.6692, lr: 0.07696
iteration: 15, epoch: 50, best train: 0.918, best val: 0.6692, lr: 0.07612
iteration: 15, epoch: 51, best train: 0.918, best val: 0.6692, lr: 0.07528
iteration: 15, epoch: 52, best train: 0.918, best val: 0.6692, lr: 0.07443
iteration: 15, epoch: 53, best train: 0.918, best val: 0.6692, lr: 0.07357
iteration: 15, epoch: 54, best train: 0.918, best val: 0.6692, lr: 0.0727
iteration: 15, epoch: 55, best train: 0.918, best val: 0.6692, lr: 0.07182
iteration: 15, epoch: 56, best train: 0.918, best val: 0.6692, lr: 0.07093
iteration: 15, epoch: 57, best train: 0.935, best val: 0.6692, lr: 0.07004
iteration: 15, epoch: 58, best train: 0.935, best val: 0.6692, lr: 0.06913
iteration: 15, epoch: 59, best train: 0.935, best val: 0.6692, lr: 0.06822
iteration: 15, epoch: 60, best train: 0.935, best val: 0.6692, lr: 0.06731
iteration: 15, epoch: 61, best train: 0.935, best val: 0.6692, lr: 0.06638
iteration: 15, epoch: 62, best train: 0.935, best val: 0.6692, lr: 0.06545
iteration: 15, epoch: 63, best train: 0.935, best val: 0.6692, lr: 0.06451
iteration: 15, epoch: 64, best train: 0.935, best val: 0.6692, lr: 0.06357
iteration: 15, epoch: 65, best train: 0.935, best val: 0.6692, lr: 0.06262
iteration: 15, epoch: 66, best train: 0.943, best val: 0.6692, lr: 0.06167
iteration: 15, epoch: 67, best train: 0.945, best val: 0.6692, lr: 0.06072
iteration: 15, epoch: 68, best train: 0.945, best val: 0.6692, lr: 0.05975
iteration: 15, epoch: 69, best train: 0.945, best val: 0.6741, lr: 0.05879
iteration: 15, epoch: 70, best train: 0.945, best val: 0.6741, lr: 0.05782
iteration: 15, epoch: 71, best train: 0.945, best val: 0.6741, lr: 0.05685
iteration: 15, epoch: 72, best train: 0.945, best val: 0.6741, lr: 0.05588
iteration: 15, epoch: 73, best train: 0.945, best val: 0.6741, lr: 0.0549
iteration: 15, epoch: 74, best train: 0.945, best val: 0.6763, lr: 0.05392
iteration: 15, epoch: 75, best train: 0.945, best val: 0.6763, lr: 0.05294
iteration: 15, epoch: 76, best train: 0.954, best val: 0.6763, lr: 0.05196
iteration: 15, epoch: 77, best train: 0.954, best val: 0.6763, lr: 0.05098
iteration: 15, epoch: 78, best train: 0.954, best val: 0.6763, lr: 0.05
iteration: 15, epoch: 79, best train: 0.954, best val: 0.6763, lr: 0.04902
iteration: 15, epoch: 80, best train: 0.954, best val: 0.6763, lr: 0.04804
iteration: 15, epoch: 81, best train: 0.954, best val: 0.6763, lr: 0.04706
iteration: 15, epoch: 82, best train: 0.954, best val: 0.6763, lr: 0.04608
iteration: 15, epoch: 83, best train: 0.954, best val: 0.677, lr: 0.0451
iteration: 15, epoch: 84, best train: 0.954, best val: 0.677, lr: 0.04412
iteration: 15, epoch: 85, best train: 0.954, best val: 0.6775, lr: 0.04315
iteration: 15, epoch: 86, best train: 0.954, best val: 0.6775, lr: 0.04218
iteration: 15, epoch: 87, best train: 0.954, best val: 0.6775, lr: 0.04121
iteration: 15, epoch: 88, best train: 0.954, best val: 0.6784, lr: 0.04025
iteration: 15, epoch: 89, best train: 0.954, best val: 0.6784, lr: 0.03928
iteration: 15, epoch: 90, best train: 0.954, best val: 0.6784, lr: 0.03833
iteration: 15, epoch: 91, best train: 0.954, best val: 0.6784, lr: 0.03738
iteration: 15, epoch: 92, best train: 0.954, best val: 0.6784, lr: 0.03643
iteration: 15, epoch: 93, best train: 0.954, best val: 0.6784, lr: 0.03549
iteration: 15, epoch: 94, best train: 0.964, best val: 0.684, lr: 0.03455
iteration: 15, epoch: 95, best train: 0.964, best val: 0.684, lr: 0.03362
iteration: 15, epoch: 96, best train: 0.964, best val: 0.684, lr: 0.03269
iteration: 15, epoch: 97, best train: 0.964, best val: 0.684, lr: 0.03178
iteration: 15, epoch: 98, best train: 0.964, best val: 0.6866, lr: 0.03087
iteration: 15, epoch: 99, best train: 0.964, best val: 0.6869, lr: 0.02996
iteration: 15, epoch: 100, best train: 0.964, best val: 0.6869, lr: 0.02907
iteration: 15, epoch: 101, best train: 0.964, best val: 0.6869, lr: 0.02818
iteration: 15, epoch: 102, best train: 0.964, best val: 0.6869, lr: 0.0273
iteration: 15, epoch: 103, best train: 0.964, best val: 0.6869, lr: 0.02643
iteration: 15, epoch: 104, best train: 0.964, best val: 0.6869, lr: 0.02557
iteration: 15, epoch: 105, best train: 0.965, best val: 0.6869, lr: 0.02472
iteration: 15, epoch: 106, best train: 0.965, best val: 0.6869, lr: 0.02388
iteration: 15, epoch: 107, best train: 0.965, best val: 0.6869, lr: 0.02304
iteration: 15, epoch: 108, best train: 0.965, best val: 0.6869, lr: 0.02222
iteration: 15, epoch: 109, best train: 0.965, best val: 0.6876, lr: 0.02141
iteration: 15, epoch: 110, best train: 0.965, best val: 0.6886, lr: 0.02061
iteration: 15, epoch: 111, best train: 0.965, best val: 0.6895, lr: 0.01982
iteration: 15, epoch: 112, best train: 0.968, best val: 0.6944, lr: 0.01905
iteration: 15, epoch: 113, best train: 0.968, best val: 0.6947, lr: 0.01828
iteration: 15, epoch: 114, best train: 0.968, best val: 0.6949, lr: 0.01753
iteration: 15, epoch: 115, best train: 0.968, best val: 0.6949, lr: 0.01679
iteration: 15, epoch: 116, best train: 0.968, best val: 0.6949, lr: 0.01606
iteration: 15, epoch: 117, best train: 0.968, best val: 0.6949, lr: 0.01535
iteration: 15, epoch: 118, best train: 0.968, best val: 0.6949, lr: 0.01464
iteration: 15, epoch: 119, best train: 0.968, best val: 0.6949, lr: 0.01396
iteration: 15, epoch: 120, best train: 0.968, best val: 0.6949, lr: 0.01328
iteration: 15, epoch: 121, best train: 0.968, best val: 0.6949, lr: 0.01262
iteration: 15, epoch: 122, best train: 0.968, best val: 0.6949, lr: 0.01198
iteration: 15, epoch: 123, best train: 0.968, best val: 0.6949, lr: 0.01135
iteration: 15, epoch: 124, best train: 0.968, best val: 0.6949, lr: 0.01073
iteration: 15, epoch: 125, best train: 0.968, best val: 0.6949, lr: 0.01013
iteration: 15, epoch: 126, best train: 0.968, best val: 0.6949, lr: 0.00955
iteration: 15, epoch: 127, best train: 0.968, best val: 0.6949, lr: 0.00898
iteration: 15, epoch: 128, best train: 0.968, best val: 0.6949, lr: 0.00843
iteration: 15, epoch: 129, best train: 0.968, best val: 0.6949, lr: 0.00789
iteration: 15, epoch: 130, best train: 0.968, best val: 0.6949, lr: 0.00737
iteration: 15, epoch: 131, best train: 0.968, best val: 0.6949, lr: 0.00686
iteration: 15, epoch: 132, best train: 0.968, best val: 0.6955, lr: 0.00638
iteration: 15, epoch: 133, best train: 0.968, best val: 0.6955, lr: 0.0059
iteration: 15, epoch: 134, best train: 0.968, best val: 0.6955, lr: 0.00545
iteration: 15, epoch: 135, best train: 0.968, best val: 0.6955, lr: 0.00501
iteration: 15, epoch: 136, best train: 0.968, best val: 0.6955, lr: 0.00459
iteration: 15, epoch: 137, best train: 0.968, best val: 0.6955, lr: 0.00419
iteration: 15, epoch: 138, best train: 0.968, best val: 0.6956, lr: 0.00381
iteration: 15, epoch: 139, best train: 0.969, best val: 0.6956, lr: 0.00344
iteration: 15, epoch: 140, best train: 0.969, best val: 0.6956, lr: 0.00309
iteration: 15, epoch: 141, best train: 0.969, best val: 0.6956, lr: 0.00276
iteration: 15, epoch: 142, best train: 0.969, best val: 0.6956, lr: 0.00245
iteration: 15, epoch: 143, best train: 0.969, best val: 0.6956, lr: 0.00215
iteration: 15, epoch: 144, best train: 0.969, best val: 0.6956, lr: 0.00188
iteration: 15, epoch: 145, best train: 0.969, best val: 0.6956, lr: 0.00162
iteration: 15, epoch: 146, best train: 0.969, best val: 0.6957, lr: 0.00138
iteration: 15, epoch: 147, best train: 0.969, best val: 0.6959, lr: 0.00116
iteration: 15, epoch: 148, best train: 0.969, best val: 0.6959, lr: 0.00096
iteration: 15, epoch: 149, best train: 0.969, best val: 0.6963, lr: 0.00078
iteration: 15, epoch: 150, best train: 0.969, best val: 0.6963, lr: 0.00062
iteration: 15, epoch: 151, best train: 0.969, best val: 0.6963, lr: 0.00047
iteration: 15, epoch: 152, best train: 0.974, best val: 0.6963, lr: 0.00035
iteration: 15, epoch: 153, best train: 0.974, best val: 0.6963, lr: 0.00024
iteration: 15, epoch: 154, best train: 0.974, best val: 0.6963, lr: 0.00015
iteration: 15, epoch: 155, best train: 0.974, best val: 0.6963, lr: 9e-05
iteration: 15, epoch: 156, best train: 0.974, best val: 0.6963, lr: 4e-05
iteration: 15, epoch: 157, best train: 0.974, best val: 0.6963, lr: 1e-05
iteration: 15, epoch: 158, best train: 0.974, best val: 0.6963, lr: 0.0
iteration: 15, epoch: 159, best train: 0.974, best val: 0.6963, lr: 1e-05
------------------------ Checkpoint 49  ------------------------
pre_conv.0.weight_mask 	|	active =  477 	|	total =  1728 	|	layerwise sparsity =  0.2760416666666667
layer1.0.conv1.weight_mask 	|	active =  1038 	|	total =  36864 	|	layerwise sparsity =  0.028157552083333332
layer1.0.conv2.weight_mask 	|	active =  1038 	|	total =  36864 	|	layerwise sparsity =  0.028157552083333332
layer1.1.conv1.weight_mask 	|	active =  1038 	|	total =  36864 	|	layerwise sparsity =  0.028157552083333332
layer1.1.conv2.weight_mask 	|	active =  1038 	|	total =  36864 	|	layerwise sparsity =  0.028157552083333332
layer2.0.conv1.weight_mask 	|	active =  2075 	|	total =  73728 	|	layerwise sparsity =  0.028143988715277776
layer2.0.conv2.weight_mask 	|	active =  4150 	|	total =  147456 	|	layerwise sparsity =  0.028143988715277776
layer2.0.shortcut.0.weight_mask 	|	active =  2261 	|	total =  8192 	|	layerwise sparsity =  0.2760009765625
layer2.1.conv1.weight_mask 	|	active =  4150 	|	total =  147456 	|	layerwise sparsity =  0.028143988715277776
layer2.1.conv2.weight_mask 	|	active =  4150 	|	total =  147456 	|	layerwise sparsity =  0.028143988715277776
layer3.0.conv1.weight_mask 	|	active =  8301 	|	total =  294912 	|	layerwise sparsity =  0.028147379557291668
layer3.0.conv2.weight_mask 	|	active =  9803 	|	total =  589824 	|	layerwise sparsity =  0.016620212131076388
layer3.0.shortcut.0.weight_mask 	|	active =  922 	|	total =  32768 	|	layerwise sparsity =  0.02813720703125
layer3.1.conv1.weight_mask 	|	active =  9710 	|	total =  589824 	|	layerwise sparsity =  0.016462537977430556
layer3.1.conv2.weight_mask 	|	active =  10646 	|	total =  589824 	|	layerwise sparsity =  0.018049452039930556
layer4.0.conv1.weight_mask 	|	active =  28286 	|	total =  1179648 	|	layerwise sparsity =  0.023978339301215276
layer4.0.conv2.weight_mask 	|	active =  75379 	|	total =  2359296 	|	layerwise sparsity =  0.03194978502061632
layer4.0.shortcut.0.weight_mask 	|	active =  3690 	|	total =  131072 	|	layerwise sparsity =  0.0281524658203125
layer4.1.conv1.weight_mask 	|	active =  81826 	|	total =  2359296 	|	layerwise sparsity =  0.034682379828559026
layer4.1.conv2.weight_mask 	|	active =  84145 	|	total =  2359296 	|	layerwise sparsity =  0.03566530015733507
------------------------ Checkpoint 50  ------------------------
best_val =  0.6962999999999999
------------------------ Checkpoint 51  ------------------------
pruning state: 16
remaining weight at start of iteration =  2.9941397400824687
iteration: 16, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 16, epoch: 1, best train: 0.383, best val: 0.1, lr: 0.09991
iteration: 16, epoch: 2, best train: 0.383, best val: 0.1044, lr: 0.09985
iteration: 16, epoch: 3, best train: 0.383, best val: 0.1318, lr: 0.09976
iteration: 16, epoch: 4, best train: 0.383, best val: 0.2021, lr: 0.09965
iteration: 16, epoch: 5, best train: 0.383, best val: 0.2878, lr: 0.09953
iteration: 16, epoch: 6, best train: 0.383, best val: 0.3893, lr: 0.09938
iteration: 16, epoch: 7, best train: 0.404, best val: 0.4028, lr: 0.09922
iteration: 16, epoch: 8, best train: 0.442, best val: 0.4089, lr: 0.09904
iteration: 16, epoch: 9, best train: 0.455, best val: 0.4483, lr: 0.09884
iteration: 16, epoch: 10, best train: 0.508, best val: 0.4918, lr: 0.09862
iteration: 16, epoch: 11, best train: 0.512, best val: 0.4918, lr: 0.09838
iteration: 16, epoch: 12, best train: 0.539, best val: 0.5099, lr: 0.09812
iteration: 16, epoch: 13, best train: 0.592, best val: 0.5541, lr: 0.09785
iteration: 16, epoch: 14, best train: 0.603, best val: 0.5541, lr: 0.09755
iteration: 16, epoch: 15, best train: 0.613, best val: 0.5541, lr: 0.09724
iteration: 16, epoch: 16, best train: 0.613, best val: 0.5856, lr: 0.09691
iteration: 16, epoch: 17, best train: 0.659, best val: 0.5856, lr: 0.09656
iteration: 16, epoch: 18, best train: 0.668, best val: 0.5856, lr: 0.09619
iteration: 16, epoch: 19, best train: 0.68, best val: 0.5856, lr: 0.09581
iteration: 16, epoch: 20, best train: 0.705, best val: 0.5856, lr: 0.09541
iteration: 16, epoch: 21, best train: 0.705, best val: 0.5856, lr: 0.09499
iteration: 16, epoch: 22, best train: 0.705, best val: 0.5856, lr: 0.09455
iteration: 16, epoch: 23, best train: 0.706, best val: 0.5856, lr: 0.0941
iteration: 16, epoch: 24, best train: 0.71, best val: 0.605, lr: 0.09362
iteration: 16, epoch: 25, best train: 0.746, best val: 0.605, lr: 0.09314
iteration: 16, epoch: 26, best train: 0.766, best val: 0.605, lr: 0.09263
iteration: 16, epoch: 27, best train: 0.776, best val: 0.6073, lr: 0.09211
iteration: 16, epoch: 28, best train: 0.776, best val: 0.6073, lr: 0.09157
iteration: 16, epoch: 29, best train: 0.776, best val: 0.6073, lr: 0.09102
iteration: 16, epoch: 30, best train: 0.776, best val: 0.6073, lr: 0.09045
iteration: 16, epoch: 31, best train: 0.787, best val: 0.6238, lr: 0.08987
iteration: 16, epoch: 32, best train: 0.787, best val: 0.6238, lr: 0.08927
iteration: 16, epoch: 33, best train: 0.817, best val: 0.6238, lr: 0.08865
iteration: 16, epoch: 34, best train: 0.817, best val: 0.6238, lr: 0.08802
iteration: 16, epoch: 35, best train: 0.827, best val: 0.6238, lr: 0.08738
iteration: 16, epoch: 36, best train: 0.827, best val: 0.6238, lr: 0.08672
iteration: 16, epoch: 37, best train: 0.836, best val: 0.6316, lr: 0.08604
iteration: 16, epoch: 38, best train: 0.836, best val: 0.6316, lr: 0.08536
iteration: 16, epoch: 39, best train: 0.836, best val: 0.6316, lr: 0.08465
iteration: 16, epoch: 40, best train: 0.836, best val: 0.6316, lr: 0.08394
iteration: 16, epoch: 41, best train: 0.836, best val: 0.6316, lr: 0.08321
iteration: 16, epoch: 42, best train: 0.841, best val: 0.6316, lr: 0.08247
iteration: 16, epoch: 43, best train: 0.855, best val: 0.6316, lr: 0.08172
iteration: 16, epoch: 44, best train: 0.862, best val: 0.6316, lr: 0.08095
iteration: 16, epoch: 45, best train: 0.862, best val: 0.6316, lr: 0.08018
iteration: 16, epoch: 46, best train: 0.862, best val: 0.6316, lr: 0.07939
iteration: 16, epoch: 47, best train: 0.863, best val: 0.6316, lr: 0.07859
iteration: 16, epoch: 48, best train: 0.867, best val: 0.6316, lr: 0.07778
iteration: 16, epoch: 49, best train: 0.867, best val: 0.6403, lr: 0.07696
iteration: 16, epoch: 50, best train: 0.875, best val: 0.6403, lr: 0.07612
iteration: 16, epoch: 51, best train: 0.878, best val: 0.6407, lr: 0.07528
iteration: 16, epoch: 52, best train: 0.883, best val: 0.6407, lr: 0.07443
iteration: 16, epoch: 53, best train: 0.887, best val: 0.646, lr: 0.07357
iteration: 16, epoch: 54, best train: 0.893, best val: 0.646, lr: 0.0727
iteration: 16, epoch: 55, best train: 0.893, best val: 0.646, lr: 0.07182
iteration: 16, epoch: 56, best train: 0.893, best val: 0.646, lr: 0.07093
iteration: 16, epoch: 57, best train: 0.893, best val: 0.646, lr: 0.07004
iteration: 16, epoch: 58, best train: 0.9, best val: 0.646, lr: 0.06913
iteration: 16, epoch: 59, best train: 0.9, best val: 0.646, lr: 0.06822
iteration: 16, epoch: 60, best train: 0.9, best val: 0.646, lr: 0.06731
iteration: 16, epoch: 61, best train: 0.9, best val: 0.646, lr: 0.06638
iteration: 16, epoch: 62, best train: 0.9, best val: 0.646, lr: 0.06545
iteration: 16, epoch: 63, best train: 0.901, best val: 0.646, lr: 0.06451
iteration: 16, epoch: 64, best train: 0.901, best val: 0.6496, lr: 0.06357
iteration: 16, epoch: 65, best train: 0.901, best val: 0.6575, lr: 0.06262
iteration: 16, epoch: 66, best train: 0.909, best val: 0.6575, lr: 0.06167
iteration: 16, epoch: 67, best train: 0.909, best val: 0.6575, lr: 0.06072
iteration: 16, epoch: 68, best train: 0.915, best val: 0.6682, lr: 0.05975
iteration: 16, epoch: 69, best train: 0.915, best val: 0.6682, lr: 0.05879
iteration: 16, epoch: 70, best train: 0.915, best val: 0.6682, lr: 0.05782
iteration: 16, epoch: 71, best train: 0.915, best val: 0.6682, lr: 0.05685
iteration: 16, epoch: 72, best train: 0.918, best val: 0.6682, lr: 0.05588
iteration: 16, epoch: 73, best train: 0.92, best val: 0.6682, lr: 0.0549
iteration: 16, epoch: 74, best train: 0.92, best val: 0.6682, lr: 0.05392
iteration: 16, epoch: 75, best train: 0.92, best val: 0.6682, lr: 0.05294
iteration: 16, epoch: 76, best train: 0.92, best val: 0.6682, lr: 0.05196
iteration: 16, epoch: 77, best train: 0.92, best val: 0.6682, lr: 0.05098
iteration: 16, epoch: 78, best train: 0.925, best val: 0.6694, lr: 0.05
iteration: 16, epoch: 79, best train: 0.925, best val: 0.6694, lr: 0.04902
iteration: 16, epoch: 80, best train: 0.925, best val: 0.6694, lr: 0.04804
iteration: 16, epoch: 81, best train: 0.925, best val: 0.6694, lr: 0.04706
iteration: 16, epoch: 82, best train: 0.925, best val: 0.6711, lr: 0.04608
iteration: 16, epoch: 83, best train: 0.925, best val: 0.6711, lr: 0.0451
iteration: 16, epoch: 84, best train: 0.925, best val: 0.6711, lr: 0.04412
iteration: 16, epoch: 85, best train: 0.925, best val: 0.6711, lr: 0.04315
iteration: 16, epoch: 86, best train: 0.933, best val: 0.6711, lr: 0.04218
iteration: 16, epoch: 87, best train: 0.933, best val: 0.6711, lr: 0.04121
iteration: 16, epoch: 88, best train: 0.933, best val: 0.6711, lr: 0.04025
iteration: 16, epoch: 89, best train: 0.933, best val: 0.6711, lr: 0.03928
iteration: 16, epoch: 90, best train: 0.933, best val: 0.6711, lr: 0.03833
iteration: 16, epoch: 91, best train: 0.933, best val: 0.6718, lr: 0.03738
iteration: 16, epoch: 92, best train: 0.933, best val: 0.6718, lr: 0.03643
iteration: 16, epoch: 93, best train: 0.933, best val: 0.6718, lr: 0.03549
iteration: 16, epoch: 94, best train: 0.944, best val: 0.6718, lr: 0.03455
iteration: 16, epoch: 95, best train: 0.944, best val: 0.6718, lr: 0.03362
iteration: 16, epoch: 96, best train: 0.951, best val: 0.6718, lr: 0.03269
iteration: 16, epoch: 97, best train: 0.951, best val: 0.6718, lr: 0.03178
iteration: 16, epoch: 98, best train: 0.951, best val: 0.6718, lr: 0.03087
iteration: 16, epoch: 99, best train: 0.951, best val: 0.6718, lr: 0.02996
iteration: 16, epoch: 100, best train: 0.951, best val: 0.672, lr: 0.02907
iteration: 16, epoch: 101, best train: 0.951, best val: 0.6749, lr: 0.02818
iteration: 16, epoch: 102, best train: 0.951, best val: 0.6775, lr: 0.0273
iteration: 16, epoch: 103, best train: 0.951, best val: 0.6788, lr: 0.02643
iteration: 16, epoch: 104, best train: 0.951, best val: 0.6788, lr: 0.02557
iteration: 16, epoch: 105, best train: 0.951, best val: 0.679, lr: 0.02472
iteration: 16, epoch: 106, best train: 0.951, best val: 0.679, lr: 0.02388
iteration: 16, epoch: 107, best train: 0.954, best val: 0.679, lr: 0.02304
iteration: 16, epoch: 108, best train: 0.954, best val: 0.679, lr: 0.02222
iteration: 16, epoch: 109, best train: 0.954, best val: 0.679, lr: 0.02141
iteration: 16, epoch: 110, best train: 0.954, best val: 0.6816, lr: 0.02061
iteration: 16, epoch: 111, best train: 0.954, best val: 0.6816, lr: 0.01982
iteration: 16, epoch: 112, best train: 0.956, best val: 0.6839, lr: 0.01905
iteration: 16, epoch: 113, best train: 0.963, best val: 0.6839, lr: 0.01828
iteration: 16, epoch: 114, best train: 0.963, best val: 0.6839, lr: 0.01753
iteration: 16, epoch: 115, best train: 0.963, best val: 0.6859, lr: 0.01679
iteration: 16, epoch: 116, best train: 0.963, best val: 0.6859, lr: 0.01606
iteration: 16, epoch: 117, best train: 0.963, best val: 0.6859, lr: 0.01535
iteration: 16, epoch: 118, best train: 0.963, best val: 0.6859, lr: 0.01464
iteration: 16, epoch: 119, best train: 0.963, best val: 0.6859, lr: 0.01396
iteration: 16, epoch: 120, best train: 0.963, best val: 0.6859, lr: 0.01328
iteration: 16, epoch: 121, best train: 0.963, best val: 0.6859, lr: 0.01262
iteration: 16, epoch: 122, best train: 0.963, best val: 0.6859, lr: 0.01198
iteration: 16, epoch: 123, best train: 0.963, best val: 0.6859, lr: 0.01135
iteration: 16, epoch: 124, best train: 0.963, best val: 0.6859, lr: 0.01073
iteration: 16, epoch: 125, best train: 0.963, best val: 0.6859, lr: 0.01013
iteration: 16, epoch: 126, best train: 0.963, best val: 0.6859, lr: 0.00955
iteration: 16, epoch: 127, best train: 0.963, best val: 0.6865, lr: 0.00898
iteration: 16, epoch: 128, best train: 0.963, best val: 0.6867, lr: 0.00843
iteration: 16, epoch: 129, best train: 0.963, best val: 0.6892, lr: 0.00789
iteration: 16, epoch: 130, best train: 0.963, best val: 0.6892, lr: 0.00737
iteration: 16, epoch: 131, best train: 0.963, best val: 0.6892, lr: 0.00686
iteration: 16, epoch: 132, best train: 0.963, best val: 0.6892, lr: 0.00638
iteration: 16, epoch: 133, best train: 0.963, best val: 0.6892, lr: 0.0059
iteration: 16, epoch: 134, best train: 0.963, best val: 0.6892, lr: 0.00545
iteration: 16, epoch: 135, best train: 0.963, best val: 0.6892, lr: 0.00501
iteration: 16, epoch: 136, best train: 0.963, best val: 0.6892, lr: 0.00459
iteration: 16, epoch: 137, best train: 0.963, best val: 0.6892, lr: 0.00419
iteration: 16, epoch: 138, best train: 0.963, best val: 0.6892, lr: 0.00381
iteration: 16, epoch: 139, best train: 0.963, best val: 0.6892, lr: 0.00344
iteration: 16, epoch: 140, best train: 0.963, best val: 0.6892, lr: 0.00309
iteration: 16, epoch: 141, best train: 0.963, best val: 0.6892, lr: 0.00276
iteration: 16, epoch: 142, best train: 0.963, best val: 0.6892, lr: 0.00245
iteration: 16, epoch: 143, best train: 0.963, best val: 0.6892, lr: 0.00215
iteration: 16, epoch: 144, best train: 0.963, best val: 0.6892, lr: 0.00188
iteration: 16, epoch: 145, best train: 0.963, best val: 0.6892, lr: 0.00162
iteration: 16, epoch: 146, best train: 0.963, best val: 0.6892, lr: 0.00138
iteration: 16, epoch: 147, best train: 0.963, best val: 0.6892, lr: 0.00116
iteration: 16, epoch: 148, best train: 0.963, best val: 0.6892, lr: 0.00096
iteration: 16, epoch: 149, best train: 0.963, best val: 0.6892, lr: 0.00078
iteration: 16, epoch: 150, best train: 0.963, best val: 0.6892, lr: 0.00062
iteration: 16, epoch: 151, best train: 0.963, best val: 0.6892, lr: 0.00047
iteration: 16, epoch: 152, best train: 0.963, best val: 0.6892, lr: 0.00035
iteration: 16, epoch: 153, best train: 0.963, best val: 0.6892, lr: 0.00024
iteration: 16, epoch: 154, best train: 0.97, best val: 0.6892, lr: 0.00015
iteration: 16, epoch: 155, best train: 0.97, best val: 0.6892, lr: 9e-05
iteration: 16, epoch: 156, best train: 0.97, best val: 0.6892, lr: 4e-05
iteration: 16, epoch: 157, best train: 0.97, best val: 0.6892, lr: 1e-05
iteration: 16, epoch: 158, best train: 0.97, best val: 0.6892, lr: 0.0
iteration: 16, epoch: 159, best train: 0.97, best val: 0.6892, lr: 1e-05
------------------------ Checkpoint 52  ------------------------
pre_conv.0.weight_mask 	|	active =  440 	|	total =  1728 	|	layerwise sparsity =  0.25462962962962965
layer1.0.conv1.weight_mask 	|	active =  830 	|	total =  36864 	|	layerwise sparsity =  0.022515190972222224
layer1.0.conv2.weight_mask 	|	active =  830 	|	total =  36864 	|	layerwise sparsity =  0.022515190972222224
layer1.1.conv1.weight_mask 	|	active =  830 	|	total =  36864 	|	layerwise sparsity =  0.022515190972222224
layer1.1.conv2.weight_mask 	|	active =  830 	|	total =  36864 	|	layerwise sparsity =  0.022515190972222224
layer2.0.conv1.weight_mask 	|	active =  1660 	|	total =  73728 	|	layerwise sparsity =  0.022515190972222224
layer2.0.conv2.weight_mask 	|	active =  3320 	|	total =  147456 	|	layerwise sparsity =  0.022515190972222224
layer2.0.shortcut.0.weight_mask 	|	active =  2086 	|	total =  8192 	|	layerwise sparsity =  0.254638671875
layer2.1.conv1.weight_mask 	|	active =  3320 	|	total =  147456 	|	layerwise sparsity =  0.022515190972222224
layer2.1.conv2.weight_mask 	|	active =  3320 	|	total =  147456 	|	layerwise sparsity =  0.022515190972222224
layer3.0.conv1.weight_mask 	|	active =  6641 	|	total =  294912 	|	layerwise sparsity =  0.022518581814236112
layer3.0.conv2.weight_mask 	|	active =  7588 	|	total =  589824 	|	layerwise sparsity =  0.012864854600694444
layer3.0.shortcut.0.weight_mask 	|	active =  738 	|	total =  32768 	|	layerwise sparsity =  0.02252197265625
layer3.1.conv1.weight_mask 	|	active =  7512 	|	total =  589824 	|	layerwise sparsity =  0.012736002604166666
layer3.1.conv2.weight_mask 	|	active =  8284 	|	total =  589824 	|	layerwise sparsity =  0.014044867621527778
layer4.0.conv1.weight_mask 	|	active =  22403 	|	total =  1179648 	|	layerwise sparsity =  0.018991258409288194
layer4.0.conv2.weight_mask 	|	active =  60783 	|	total =  2359296 	|	layerwise sparsity =  0.025763193766276043
layer4.0.shortcut.0.weight_mask 	|	active =  2952 	|	total =  131072 	|	layerwise sparsity =  0.02252197265625
layer4.1.conv1.weight_mask 	|	active =  66321 	|	total =  2359296 	|	layerwise sparsity =  0.028110504150390625
layer4.1.conv2.weight_mask 	|	active =  68319 	|	total =  2359296 	|	layerwise sparsity =  0.028957366943359375
------------------------ Checkpoint 53  ------------------------
best_val =  0.6891999999999999
------------------------ Checkpoint 54  ------------------------
pruning state: 17
remaining weight at start of iteration =  2.410622881574642
iteration: 17, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 17, epoch: 1, best train: 0.373, best val: 0.1, lr: 0.09991
iteration: 17, epoch: 2, best train: 0.373, best val: 0.1126, lr: 0.09985
iteration: 17, epoch: 3, best train: 0.373, best val: 0.1128, lr: 0.09976
iteration: 17, epoch: 4, best train: 0.373, best val: 0.1718, lr: 0.09965
iteration: 17, epoch: 5, best train: 0.41, best val: 0.363, lr: 0.09953
iteration: 17, epoch: 6, best train: 0.418, best val: 0.4703, lr: 0.09938
iteration: 17, epoch: 7, best train: 0.466, best val: 0.4703, lr: 0.09922
iteration: 17, epoch: 8, best train: 0.482, best val: 0.4703, lr: 0.09904
iteration: 17, epoch: 9, best train: 0.518, best val: 0.5475, lr: 0.09884
iteration: 17, epoch: 10, best train: 0.541, best val: 0.553, lr: 0.09862
iteration: 17, epoch: 11, best train: 0.574, best val: 0.553, lr: 0.09838
iteration: 17, epoch: 12, best train: 0.578, best val: 0.553, lr: 0.09812
iteration: 17, epoch: 13, best train: 0.604, best val: 0.5803, lr: 0.09785
iteration: 17, epoch: 14, best train: 0.617, best val: 0.5803, lr: 0.09755
iteration: 17, epoch: 15, best train: 0.621, best val: 0.5803, lr: 0.09724
iteration: 17, epoch: 16, best train: 0.621, best val: 0.5803, lr: 0.09691
iteration: 17, epoch: 17, best train: 0.641, best val: 0.5803, lr: 0.09656
iteration: 17, epoch: 18, best train: 0.641, best val: 0.5803, lr: 0.09619
iteration: 17, epoch: 19, best train: 0.662, best val: 0.6142, lr: 0.09581
iteration: 17, epoch: 20, best train: 0.718, best val: 0.6142, lr: 0.09541
iteration: 17, epoch: 21, best train: 0.726, best val: 0.6142, lr: 0.09499
iteration: 17, epoch: 22, best train: 0.726, best val: 0.6174, lr: 0.09455
iteration: 17, epoch: 23, best train: 0.727, best val: 0.6174, lr: 0.0941
iteration: 17, epoch: 24, best train: 0.761, best val: 0.6174, lr: 0.09362
iteration: 17, epoch: 25, best train: 0.771, best val: 0.6174, lr: 0.09314
iteration: 17, epoch: 26, best train: 0.771, best val: 0.6174, lr: 0.09263
iteration: 17, epoch: 27, best train: 0.771, best val: 0.6174, lr: 0.09211
iteration: 17, epoch: 28, best train: 0.771, best val: 0.6174, lr: 0.09157
iteration: 17, epoch: 29, best train: 0.771, best val: 0.6174, lr: 0.09102
iteration: 17, epoch: 30, best train: 0.771, best val: 0.6174, lr: 0.09045
iteration: 17, epoch: 31, best train: 0.786, best val: 0.6174, lr: 0.08987
iteration: 17, epoch: 32, best train: 0.786, best val: 0.6174, lr: 0.08927
iteration: 17, epoch: 33, best train: 0.815, best val: 0.6239, lr: 0.08865
iteration: 17, epoch: 34, best train: 0.815, best val: 0.6239, lr: 0.08802
iteration: 17, epoch: 35, best train: 0.815, best val: 0.6239, lr: 0.08738
iteration: 17, epoch: 36, best train: 0.815, best val: 0.6239, lr: 0.08672
iteration: 17, epoch: 37, best train: 0.815, best val: 0.6239, lr: 0.08604
iteration: 17, epoch: 38, best train: 0.825, best val: 0.6239, lr: 0.08536
iteration: 17, epoch: 39, best train: 0.825, best val: 0.6239, lr: 0.08465
iteration: 17, epoch: 40, best train: 0.825, best val: 0.6239, lr: 0.08394
iteration: 17, epoch: 41, best train: 0.825, best val: 0.6239, lr: 0.08321
iteration: 17, epoch: 42, best train: 0.825, best val: 0.6239, lr: 0.08247
iteration: 17, epoch: 43, best train: 0.839, best val: 0.6239, lr: 0.08172
iteration: 17, epoch: 44, best train: 0.849, best val: 0.6281, lr: 0.08095
iteration: 17, epoch: 45, best train: 0.849, best val: 0.6517, lr: 0.08018
iteration: 17, epoch: 46, best train: 0.849, best val: 0.6534, lr: 0.07939
iteration: 17, epoch: 47, best train: 0.858, best val: 0.6534, lr: 0.07859
iteration: 17, epoch: 48, best train: 0.858, best val: 0.6534, lr: 0.07778
iteration: 17, epoch: 49, best train: 0.858, best val: 0.6534, lr: 0.07696
iteration: 17, epoch: 50, best train: 0.858, best val: 0.6534, lr: 0.07612
iteration: 17, epoch: 51, best train: 0.858, best val: 0.6534, lr: 0.07528
iteration: 17, epoch: 52, best train: 0.861, best val: 0.6534, lr: 0.07443
iteration: 17, epoch: 53, best train: 0.861, best val: 0.6534, lr: 0.07357
iteration: 17, epoch: 54, best train: 0.868, best val: 0.6534, lr: 0.0727
iteration: 17, epoch: 55, best train: 0.889, best val: 0.6562, lr: 0.07182
iteration: 17, epoch: 56, best train: 0.889, best val: 0.6562, lr: 0.07093
iteration: 17, epoch: 57, best train: 0.889, best val: 0.6562, lr: 0.07004
iteration: 17, epoch: 58, best train: 0.889, best val: 0.6562, lr: 0.06913
iteration: 17, epoch: 59, best train: 0.889, best val: 0.6574, lr: 0.06822
iteration: 17, epoch: 60, best train: 0.889, best val: 0.6574, lr: 0.06731
iteration: 17, epoch: 61, best train: 0.889, best val: 0.6574, lr: 0.06638
iteration: 17, epoch: 62, best train: 0.889, best val: 0.6574, lr: 0.06545
iteration: 17, epoch: 63, best train: 0.889, best val: 0.6574, lr: 0.06451
iteration: 17, epoch: 64, best train: 0.893, best val: 0.6574, lr: 0.06357
iteration: 17, epoch: 65, best train: 0.893, best val: 0.664, lr: 0.06262
iteration: 17, epoch: 66, best train: 0.899, best val: 0.664, lr: 0.06167
iteration: 17, epoch: 67, best train: 0.913, best val: 0.664, lr: 0.06072
iteration: 17, epoch: 68, best train: 0.913, best val: 0.664, lr: 0.05975
iteration: 17, epoch: 69, best train: 0.913, best val: 0.664, lr: 0.05879
iteration: 17, epoch: 70, best train: 0.913, best val: 0.6658, lr: 0.05782
iteration: 17, epoch: 71, best train: 0.915, best val: 0.6658, lr: 0.05685
iteration: 17, epoch: 72, best train: 0.915, best val: 0.6658, lr: 0.05588
iteration: 17, epoch: 73, best train: 0.915, best val: 0.6658, lr: 0.0549
iteration: 17, epoch: 74, best train: 0.915, best val: 0.6658, lr: 0.05392
iteration: 17, epoch: 75, best train: 0.915, best val: 0.6658, lr: 0.05294
iteration: 17, epoch: 76, best train: 0.933, best val: 0.6658, lr: 0.05196
iteration: 17, epoch: 77, best train: 0.933, best val: 0.6658, lr: 0.05098
iteration: 17, epoch: 78, best train: 0.933, best val: 0.6658, lr: 0.05
iteration: 17, epoch: 79, best train: 0.933, best val: 0.6658, lr: 0.04902
iteration: 17, epoch: 80, best train: 0.933, best val: 0.6658, lr: 0.04804
iteration: 17, epoch: 81, best train: 0.933, best val: 0.6658, lr: 0.04706
iteration: 17, epoch: 82, best train: 0.933, best val: 0.6665, lr: 0.04608
iteration: 17, epoch: 83, best train: 0.933, best val: 0.6665, lr: 0.0451
iteration: 17, epoch: 84, best train: 0.933, best val: 0.6665, lr: 0.04412
iteration: 17, epoch: 85, best train: 0.933, best val: 0.6665, lr: 0.04315
iteration: 17, epoch: 86, best train: 0.933, best val: 0.6665, lr: 0.04218
iteration: 17, epoch: 87, best train: 0.933, best val: 0.6665, lr: 0.04121
iteration: 17, epoch: 88, best train: 0.933, best val: 0.6665, lr: 0.04025
iteration: 17, epoch: 89, best train: 0.933, best val: 0.6736, lr: 0.03928
iteration: 17, epoch: 90, best train: 0.933, best val: 0.6736, lr: 0.03833
iteration: 17, epoch: 91, best train: 0.933, best val: 0.6736, lr: 0.03738
iteration: 17, epoch: 92, best train: 0.933, best val: 0.6736, lr: 0.03643
iteration: 17, epoch: 93, best train: 0.933, best val: 0.6736, lr: 0.03549
iteration: 17, epoch: 94, best train: 0.933, best val: 0.6736, lr: 0.03455
iteration: 17, epoch: 95, best train: 0.933, best val: 0.6736, lr: 0.03362
iteration: 17, epoch: 96, best train: 0.933, best val: 0.6736, lr: 0.03269
iteration: 17, epoch: 97, best train: 0.933, best val: 0.6736, lr: 0.03178
iteration: 17, epoch: 98, best train: 0.933, best val: 0.6736, lr: 0.03087
iteration: 17, epoch: 99, best train: 0.938, best val: 0.6739, lr: 0.02996
iteration: 17, epoch: 100, best train: 0.938, best val: 0.6739, lr: 0.02907
iteration: 17, epoch: 101, best train: 0.938, best val: 0.6739, lr: 0.02818
iteration: 17, epoch: 102, best train: 0.938, best val: 0.6739, lr: 0.0273
iteration: 17, epoch: 103, best train: 0.948, best val: 0.6751, lr: 0.02643
iteration: 17, epoch: 104, best train: 0.948, best val: 0.6786, lr: 0.02557
iteration: 17, epoch: 105, best train: 0.948, best val: 0.6786, lr: 0.02472
iteration: 17, epoch: 106, best train: 0.948, best val: 0.6786, lr: 0.02388
iteration: 17, epoch: 107, best train: 0.948, best val: 0.6786, lr: 0.02304
iteration: 17, epoch: 108, best train: 0.948, best val: 0.6786, lr: 0.02222
iteration: 17, epoch: 109, best train: 0.948, best val: 0.6786, lr: 0.02141
iteration: 17, epoch: 110, best train: 0.948, best val: 0.6786, lr: 0.02061
iteration: 17, epoch: 111, best train: 0.948, best val: 0.6786, lr: 0.01982
iteration: 17, epoch: 112, best train: 0.948, best val: 0.6786, lr: 0.01905
iteration: 17, epoch: 113, best train: 0.948, best val: 0.6786, lr: 0.01828
iteration: 17, epoch: 114, best train: 0.948, best val: 0.681, lr: 0.01753
iteration: 17, epoch: 115, best train: 0.948, best val: 0.6817, lr: 0.01679
iteration: 17, epoch: 116, best train: 0.948, best val: 0.6817, lr: 0.01606
iteration: 17, epoch: 117, best train: 0.948, best val: 0.6817, lr: 0.01535
iteration: 17, epoch: 118, best train: 0.948, best val: 0.6817, lr: 0.01464
iteration: 17, epoch: 119, best train: 0.948, best val: 0.6817, lr: 0.01396
iteration: 17, epoch: 120, best train: 0.948, best val: 0.6817, lr: 0.01328
iteration: 17, epoch: 121, best train: 0.948, best val: 0.6817, lr: 0.01262
iteration: 17, epoch: 122, best train: 0.958, best val: 0.6817, lr: 0.01198
iteration: 17, epoch: 123, best train: 0.958, best val: 0.6832, lr: 0.01135
iteration: 17, epoch: 124, best train: 0.958, best val: 0.684, lr: 0.01073
iteration: 17, epoch: 125, best train: 0.958, best val: 0.6853, lr: 0.01013
iteration: 17, epoch: 126, best train: 0.958, best val: 0.6853, lr: 0.00955
iteration: 17, epoch: 127, best train: 0.958, best val: 0.6872, lr: 0.00898
iteration: 17, epoch: 128, best train: 0.958, best val: 0.6872, lr: 0.00843
iteration: 17, epoch: 129, best train: 0.958, best val: 0.6872, lr: 0.00789
iteration: 17, epoch: 130, best train: 0.961, best val: 0.6872, lr: 0.00737
iteration: 17, epoch: 131, best train: 0.961, best val: 0.6872, lr: 0.00686
iteration: 17, epoch: 132, best train: 0.961, best val: 0.6872, lr: 0.00638
iteration: 17, epoch: 133, best train: 0.961, best val: 0.6872, lr: 0.0059
iteration: 17, epoch: 134, best train: 0.961, best val: 0.6872, lr: 0.00545
iteration: 17, epoch: 135, best train: 0.961, best val: 0.6872, lr: 0.00501
iteration: 17, epoch: 136, best train: 0.961, best val: 0.6872, lr: 0.00459
iteration: 17, epoch: 137, best train: 0.961, best val: 0.6872, lr: 0.00419
iteration: 17, epoch: 138, best train: 0.961, best val: 0.6872, lr: 0.00381
iteration: 17, epoch: 139, best train: 0.961, best val: 0.6872, lr: 0.00344
iteration: 17, epoch: 140, best train: 0.966, best val: 0.6872, lr: 0.00309
iteration: 17, epoch: 141, best train: 0.966, best val: 0.6872, lr: 0.00276
iteration: 17, epoch: 142, best train: 0.966, best val: 0.6872, lr: 0.00245
iteration: 17, epoch: 143, best train: 0.966, best val: 0.6872, lr: 0.00215
iteration: 17, epoch: 144, best train: 0.966, best val: 0.6872, lr: 0.00188
iteration: 17, epoch: 145, best train: 0.966, best val: 0.6872, lr: 0.00162
iteration: 17, epoch: 146, best train: 0.966, best val: 0.6872, lr: 0.00138
iteration: 17, epoch: 147, best train: 0.966, best val: 0.6872, lr: 0.00116
iteration: 17, epoch: 148, best train: 0.966, best val: 0.6872, lr: 0.00096
iteration: 17, epoch: 149, best train: 0.966, best val: 0.6872, lr: 0.00078
iteration: 17, epoch: 150, best train: 0.966, best val: 0.6872, lr: 0.00062
iteration: 17, epoch: 151, best train: 0.966, best val: 0.6872, lr: 0.00047
iteration: 17, epoch: 152, best train: 0.966, best val: 0.6872, lr: 0.00035
iteration: 17, epoch: 153, best train: 0.966, best val: 0.6872, lr: 0.00024
iteration: 17, epoch: 154, best train: 0.966, best val: 0.6872, lr: 0.00015
iteration: 17, epoch: 155, best train: 0.966, best val: 0.6872, lr: 9e-05
iteration: 17, epoch: 156, best train: 0.966, best val: 0.6872, lr: 4e-05
iteration: 17, epoch: 157, best train: 0.966, best val: 0.6872, lr: 1e-05
iteration: 17, epoch: 158, best train: 0.966, best val: 0.6872, lr: 0.0
iteration: 17, epoch: 159, best train: 0.966, best val: 0.6872, lr: 1e-05
------------------------ Checkpoint 55  ------------------------
pre_conv.0.weight_mask 	|	active =  406 	|	total =  1728 	|	layerwise sparsity =  0.2349537037037037
layer1.0.conv1.weight_mask 	|	active =  664 	|	total =  36864 	|	layerwise sparsity =  0.018012152777777776
layer1.0.conv2.weight_mask 	|	active =  664 	|	total =  36864 	|	layerwise sparsity =  0.018012152777777776
layer1.1.conv1.weight_mask 	|	active =  664 	|	total =  36864 	|	layerwise sparsity =  0.018012152777777776
layer1.1.conv2.weight_mask 	|	active =  664 	|	total =  36864 	|	layerwise sparsity =  0.018012152777777776
layer2.0.conv1.weight_mask 	|	active =  1328 	|	total =  73728 	|	layerwise sparsity =  0.018012152777777776
layer2.0.conv2.weight_mask 	|	active =  2656 	|	total =  147456 	|	layerwise sparsity =  0.018012152777777776
layer2.0.shortcut.0.weight_mask 	|	active =  1925 	|	total =  8192 	|	layerwise sparsity =  0.2349853515625
layer2.1.conv1.weight_mask 	|	active =  2656 	|	total =  147456 	|	layerwise sparsity =  0.018012152777777776
layer2.1.conv2.weight_mask 	|	active =  2656 	|	total =  147456 	|	layerwise sparsity =  0.018012152777777776
layer3.0.conv1.weight_mask 	|	active =  5313 	|	total =  294912 	|	layerwise sparsity =  0.018015543619791668
layer3.0.conv2.weight_mask 	|	active =  5874 	|	total =  589824 	|	layerwise sparsity =  0.009958902994791666
layer3.0.shortcut.0.weight_mask 	|	active =  590 	|	total =  32768 	|	layerwise sparsity =  0.01800537109375
layer3.1.conv1.weight_mask 	|	active =  5811 	|	total =  589824 	|	layerwise sparsity =  0.009852091471354166
layer3.1.conv2.weight_mask 	|	active =  6446 	|	total =  589824 	|	layerwise sparsity =  0.010928683810763888
layer4.0.conv1.weight_mask 	|	active =  17744 	|	total =  1179648 	|	layerwise sparsity =  0.015041775173611112
layer4.0.conv2.weight_mask 	|	active =  49013 	|	total =  2359296 	|	layerwise sparsity =  0.020774417453342013
layer4.0.shortcut.0.weight_mask 	|	active =  2362 	|	total =  131072 	|	layerwise sparsity =  0.0180206298828125
layer4.1.conv1.weight_mask 	|	active =  53754 	|	total =  2359296 	|	layerwise sparsity =  0.022783915201822918
layer4.1.conv2.weight_mask 	|	active =  55470 	|	total =  2359296 	|	layerwise sparsity =  0.023511250813802082
------------------------ Checkpoint 56  ------------------------
best_val =  0.6872000000000001
------------------------ Checkpoint 57  ------------------------
pruning state: 18
remaining weight at start of iteration =  1.9415314602295175
iteration: 18, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 18, epoch: 1, best train: 0.273, best val: 0.1, lr: 0.09991
iteration: 18, epoch: 2, best train: 0.273, best val: 0.1, lr: 0.09985
iteration: 18, epoch: 3, best train: 0.306, best val: 0.1124, lr: 0.09976
iteration: 18, epoch: 4, best train: 0.357, best val: 0.2257, lr: 0.09965
iteration: 18, epoch: 5, best train: 0.371, best val: 0.3875, lr: 0.09953
iteration: 18, epoch: 6, best train: 0.402, best val: 0.3875, lr: 0.09938
iteration: 18, epoch: 7, best train: 0.436, best val: 0.426, lr: 0.09922
iteration: 18, epoch: 8, best train: 0.446, best val: 0.4815, lr: 0.09904
iteration: 18, epoch: 9, best train: 0.466, best val: 0.4815, lr: 0.09884
iteration: 18, epoch: 10, best train: 0.479, best val: 0.4815, lr: 0.09862
iteration: 18, epoch: 11, best train: 0.502, best val: 0.5252, lr: 0.09838
iteration: 18, epoch: 12, best train: 0.514, best val: 0.5394, lr: 0.09812
iteration: 18, epoch: 13, best train: 0.552, best val: 0.5394, lr: 0.09785
iteration: 18, epoch: 14, best train: 0.552, best val: 0.5394, lr: 0.09755
iteration: 18, epoch: 15, best train: 0.583, best val: 0.5394, lr: 0.09724
iteration: 18, epoch: 16, best train: 0.591, best val: 0.5394, lr: 0.09691
iteration: 18, epoch: 17, best train: 0.592, best val: 0.5565, lr: 0.09656
iteration: 18, epoch: 18, best train: 0.624, best val: 0.5899, lr: 0.09619
iteration: 18, epoch: 19, best train: 0.652, best val: 0.6016, lr: 0.09581
iteration: 18, epoch: 20, best train: 0.652, best val: 0.6016, lr: 0.09541
iteration: 18, epoch: 21, best train: 0.659, best val: 0.6016, lr: 0.09499
iteration: 18, epoch: 22, best train: 0.662, best val: 0.6016, lr: 0.09455
iteration: 18, epoch: 23, best train: 0.677, best val: 0.6016, lr: 0.0941
iteration: 18, epoch: 24, best train: 0.684, best val: 0.6016, lr: 0.09362
iteration: 18, epoch: 25, best train: 0.716, best val: 0.6016, lr: 0.09314
iteration: 18, epoch: 26, best train: 0.716, best val: 0.6016, lr: 0.09263
iteration: 18, epoch: 27, best train: 0.716, best val: 0.6016, lr: 0.09211
iteration: 18, epoch: 28, best train: 0.728, best val: 0.6016, lr: 0.09157
iteration: 18, epoch: 29, best train: 0.728, best val: 0.6016, lr: 0.09102
iteration: 18, epoch: 30, best train: 0.733, best val: 0.6016, lr: 0.09045
iteration: 18, epoch: 31, best train: 0.741, best val: 0.6016, lr: 0.08987
iteration: 18, epoch: 32, best train: 0.749, best val: 0.6016, lr: 0.08927
iteration: 18, epoch: 33, best train: 0.757, best val: 0.6016, lr: 0.08865
iteration: 18, epoch: 34, best train: 0.757, best val: 0.613, lr: 0.08802
iteration: 18, epoch: 35, best train: 0.762, best val: 0.6181, lr: 0.08738
iteration: 18, epoch: 36, best train: 0.769, best val: 0.6181, lr: 0.08672
iteration: 18, epoch: 37, best train: 0.769, best val: 0.6181, lr: 0.08604
iteration: 18, epoch: 38, best train: 0.77, best val: 0.6198, lr: 0.08536
iteration: 18, epoch: 39, best train: 0.791, best val: 0.6198, lr: 0.08465
iteration: 18, epoch: 40, best train: 0.791, best val: 0.6198, lr: 0.08394
iteration: 18, epoch: 41, best train: 0.796, best val: 0.6451, lr: 0.08321
iteration: 18, epoch: 42, best train: 0.806, best val: 0.6451, lr: 0.08247
iteration: 18, epoch: 43, best train: 0.812, best val: 0.6451, lr: 0.08172
iteration: 18, epoch: 44, best train: 0.812, best val: 0.6451, lr: 0.08095
iteration: 18, epoch: 45, best train: 0.813, best val: 0.6451, lr: 0.08018
iteration: 18, epoch: 46, best train: 0.821, best val: 0.6451, lr: 0.07939
iteration: 18, epoch: 47, best train: 0.821, best val: 0.6451, lr: 0.07859
iteration: 18, epoch: 48, best train: 0.821, best val: 0.6451, lr: 0.07778
iteration: 18, epoch: 49, best train: 0.821, best val: 0.6451, lr: 0.07696
iteration: 18, epoch: 50, best train: 0.843, best val: 0.6451, lr: 0.07612
iteration: 18, epoch: 51, best train: 0.855, best val: 0.6451, lr: 0.07528
iteration: 18, epoch: 52, best train: 0.855, best val: 0.6451, lr: 0.07443
iteration: 18, epoch: 53, best train: 0.855, best val: 0.6498, lr: 0.07357
iteration: 18, epoch: 54, best train: 0.855, best val: 0.6498, lr: 0.0727
iteration: 18, epoch: 55, best train: 0.855, best val: 0.6498, lr: 0.07182
iteration: 18, epoch: 56, best train: 0.855, best val: 0.6504, lr: 0.07093
iteration: 18, epoch: 57, best train: 0.855, best val: 0.6504, lr: 0.07004
iteration: 18, epoch: 58, best train: 0.868, best val: 0.6504, lr: 0.06913
iteration: 18, epoch: 59, best train: 0.868, best val: 0.6504, lr: 0.06822
iteration: 18, epoch: 60, best train: 0.868, best val: 0.6504, lr: 0.06731
iteration: 18, epoch: 61, best train: 0.868, best val: 0.6504, lr: 0.06638
iteration: 18, epoch: 62, best train: 0.868, best val: 0.657, lr: 0.06545
iteration: 18, epoch: 63, best train: 0.868, best val: 0.657, lr: 0.06451
iteration: 18, epoch: 64, best train: 0.869, best val: 0.6586, lr: 0.06357
iteration: 18, epoch: 65, best train: 0.869, best val: 0.6586, lr: 0.06262
iteration: 18, epoch: 66, best train: 0.871, best val: 0.6586, lr: 0.06167
iteration: 18, epoch: 67, best train: 0.871, best val: 0.6586, lr: 0.06072
iteration: 18, epoch: 68, best train: 0.871, best val: 0.6586, lr: 0.05975
iteration: 18, epoch: 69, best train: 0.883, best val: 0.6586, lr: 0.05879
iteration: 18, epoch: 70, best train: 0.887, best val: 0.6586, lr: 0.05782
iteration: 18, epoch: 71, best train: 0.887, best val: 0.6632, lr: 0.05685
iteration: 18, epoch: 72, best train: 0.89, best val: 0.6632, lr: 0.05588
iteration: 18, epoch: 73, best train: 0.89, best val: 0.666, lr: 0.0549
iteration: 18, epoch: 74, best train: 0.891, best val: 0.666, lr: 0.05392
iteration: 18, epoch: 75, best train: 0.891, best val: 0.666, lr: 0.05294
iteration: 18, epoch: 76, best train: 0.895, best val: 0.666, lr: 0.05196
iteration: 18, epoch: 77, best train: 0.895, best val: 0.666, lr: 0.05098
iteration: 18, epoch: 78, best train: 0.895, best val: 0.6677, lr: 0.05
iteration: 18, epoch: 79, best train: 0.908, best val: 0.6677, lr: 0.04902
iteration: 18, epoch: 80, best train: 0.908, best val: 0.6731, lr: 0.04804
iteration: 18, epoch: 81, best train: 0.908, best val: 0.6731, lr: 0.04706
iteration: 18, epoch: 82, best train: 0.908, best val: 0.6731, lr: 0.04608
iteration: 18, epoch: 83, best train: 0.91, best val: 0.6731, lr: 0.0451
iteration: 18, epoch: 84, best train: 0.91, best val: 0.6731, lr: 0.04412
iteration: 18, epoch: 85, best train: 0.91, best val: 0.6734, lr: 0.04315
iteration: 18, epoch: 86, best train: 0.922, best val: 0.6734, lr: 0.04218
iteration: 18, epoch: 87, best train: 0.922, best val: 0.6734, lr: 0.04121
iteration: 18, epoch: 88, best train: 0.922, best val: 0.6738, lr: 0.04025
iteration: 18, epoch: 89, best train: 0.922, best val: 0.6738, lr: 0.03928
iteration: 18, epoch: 90, best train: 0.927, best val: 0.6738, lr: 0.03833
iteration: 18, epoch: 91, best train: 0.927, best val: 0.6738, lr: 0.03738
iteration: 18, epoch: 92, best train: 0.927, best val: 0.6738, lr: 0.03643
iteration: 18, epoch: 93, best train: 0.927, best val: 0.6738, lr: 0.03549
iteration: 18, epoch: 94, best train: 0.934, best val: 0.6738, lr: 0.03455
iteration: 18, epoch: 95, best train: 0.934, best val: 0.6738, lr: 0.03362
iteration: 18, epoch: 96, best train: 0.934, best val: 0.6738, lr: 0.03269
iteration: 18, epoch: 97, best train: 0.934, best val: 0.6738, lr: 0.03178
iteration: 18, epoch: 98, best train: 0.934, best val: 0.6738, lr: 0.03087
iteration: 18, epoch: 99, best train: 0.934, best val: 0.6794, lr: 0.02996
iteration: 18, epoch: 100, best train: 0.934, best val: 0.6815, lr: 0.02907
iteration: 18, epoch: 101, best train: 0.934, best val: 0.6815, lr: 0.02818
iteration: 18, epoch: 102, best train: 0.934, best val: 0.6815, lr: 0.0273
iteration: 18, epoch: 103, best train: 0.934, best val: 0.6815, lr: 0.02643
iteration: 18, epoch: 104, best train: 0.934, best val: 0.6825, lr: 0.02557
iteration: 18, epoch: 105, best train: 0.94, best val: 0.6825, lr: 0.02472
iteration: 18, epoch: 106, best train: 0.94, best val: 0.6825, lr: 0.02388
iteration: 18, epoch: 107, best train: 0.94, best val: 0.6825, lr: 0.02304
iteration: 18, epoch: 108, best train: 0.94, best val: 0.6825, lr: 0.02222
iteration: 18, epoch: 109, best train: 0.94, best val: 0.6825, lr: 0.02141
iteration: 18, epoch: 110, best train: 0.941, best val: 0.6825, lr: 0.02061
iteration: 18, epoch: 111, best train: 0.941, best val: 0.6825, lr: 0.01982
iteration: 18, epoch: 112, best train: 0.946, best val: 0.6825, lr: 0.01905
iteration: 18, epoch: 113, best train: 0.946, best val: 0.6825, lr: 0.01828
iteration: 18, epoch: 114, best train: 0.946, best val: 0.6825, lr: 0.01753
iteration: 18, epoch: 115, best train: 0.946, best val: 0.6825, lr: 0.01679
iteration: 18, epoch: 116, best train: 0.946, best val: 0.6825, lr: 0.01606
iteration: 18, epoch: 117, best train: 0.946, best val: 0.6825, lr: 0.01535
iteration: 18, epoch: 118, best train: 0.946, best val: 0.683, lr: 0.01464
iteration: 18, epoch: 119, best train: 0.946, best val: 0.6854, lr: 0.01396
iteration: 18, epoch: 120, best train: 0.946, best val: 0.6854, lr: 0.01328
iteration: 18, epoch: 121, best train: 0.946, best val: 0.6854, lr: 0.01262
iteration: 18, epoch: 122, best train: 0.946, best val: 0.686, lr: 0.01198
iteration: 18, epoch: 123, best train: 0.946, best val: 0.686, lr: 0.01135
iteration: 18, epoch: 124, best train: 0.946, best val: 0.686, lr: 0.01073
iteration: 18, epoch: 125, best train: 0.946, best val: 0.6863, lr: 0.01013
iteration: 18, epoch: 126, best train: 0.946, best val: 0.6877, lr: 0.00955
iteration: 18, epoch: 127, best train: 0.946, best val: 0.6893, lr: 0.00898
iteration: 18, epoch: 128, best train: 0.946, best val: 0.6893, lr: 0.00843
iteration: 18, epoch: 129, best train: 0.946, best val: 0.6893, lr: 0.00789
iteration: 18, epoch: 130, best train: 0.946, best val: 0.6893, lr: 0.00737
iteration: 18, epoch: 131, best train: 0.946, best val: 0.6903, lr: 0.00686
iteration: 18, epoch: 132, best train: 0.946, best val: 0.6909, lr: 0.00638
iteration: 18, epoch: 133, best train: 0.954, best val: 0.6909, lr: 0.0059
iteration: 18, epoch: 134, best train: 0.954, best val: 0.6909, lr: 0.00545
iteration: 18, epoch: 135, best train: 0.954, best val: 0.6909, lr: 0.00501
iteration: 18, epoch: 136, best train: 0.954, best val: 0.6929, lr: 0.00459
iteration: 18, epoch: 137, best train: 0.954, best val: 0.6929, lr: 0.00419
iteration: 18, epoch: 138, best train: 0.954, best val: 0.6929, lr: 0.00381
iteration: 18, epoch: 139, best train: 0.954, best val: 0.6929, lr: 0.00344
iteration: 18, epoch: 140, best train: 0.954, best val: 0.6929, lr: 0.00309
iteration: 18, epoch: 141, best train: 0.954, best val: 0.6929, lr: 0.00276
iteration: 18, epoch: 142, best train: 0.954, best val: 0.6931, lr: 0.00245
iteration: 18, epoch: 143, best train: 0.954, best val: 0.6931, lr: 0.00215
iteration: 18, epoch: 144, best train: 0.954, best val: 0.6931, lr: 0.00188
iteration: 18, epoch: 145, best train: 0.954, best val: 0.6931, lr: 0.00162
iteration: 18, epoch: 146, best train: 0.954, best val: 0.6932, lr: 0.00138
iteration: 18, epoch: 147, best train: 0.954, best val: 0.6932, lr: 0.00116
iteration: 18, epoch: 148, best train: 0.954, best val: 0.6932, lr: 0.00096
iteration: 18, epoch: 149, best train: 0.954, best val: 0.6932, lr: 0.00078
iteration: 18, epoch: 150, best train: 0.954, best val: 0.6932, lr: 0.00062
iteration: 18, epoch: 151, best train: 0.954, best val: 0.6932, lr: 0.00047
iteration: 18, epoch: 152, best train: 0.954, best val: 0.6937, lr: 0.00035
iteration: 18, epoch: 153, best train: 0.954, best val: 0.6937, lr: 0.00024
iteration: 18, epoch: 154, best train: 0.954, best val: 0.6937, lr: 0.00015
iteration: 18, epoch: 155, best train: 0.954, best val: 0.6937, lr: 9e-05
iteration: 18, epoch: 156, best train: 0.954, best val: 0.6937, lr: 4e-05
iteration: 18, epoch: 157, best train: 0.954, best val: 0.6937, lr: 1e-05
iteration: 18, epoch: 158, best train: 0.954, best val: 0.6937, lr: 0.0
iteration: 18, epoch: 159, best train: 0.954, best val: 0.6937, lr: 1e-05
------------------------ Checkpoint 58  ------------------------
pre_conv.0.weight_mask 	|	active =  375 	|	total =  1728 	|	layerwise sparsity =  0.2170138888888889
layer1.0.conv1.weight_mask 	|	active =  531 	|	total =  36864 	|	layerwise sparsity =  0.014404296875
layer1.0.conv2.weight_mask 	|	active =  531 	|	total =  36864 	|	layerwise sparsity =  0.014404296875
layer1.1.conv1.weight_mask 	|	active =  531 	|	total =  36864 	|	layerwise sparsity =  0.014404296875
layer1.1.conv2.weight_mask 	|	active =  531 	|	total =  36864 	|	layerwise sparsity =  0.014404296875
layer2.0.conv1.weight_mask 	|	active =  1062 	|	total =  73728 	|	layerwise sparsity =  0.014404296875
layer2.0.conv2.weight_mask 	|	active =  2125 	|	total =  147456 	|	layerwise sparsity =  0.014411078559027778
layer2.0.shortcut.0.weight_mask 	|	active =  1776 	|	total =  8192 	|	layerwise sparsity =  0.216796875
layer2.1.conv1.weight_mask 	|	active =  2125 	|	total =  147456 	|	layerwise sparsity =  0.014411078559027778
layer2.1.conv2.weight_mask 	|	active =  2125 	|	total =  147456 	|	layerwise sparsity =  0.014411078559027778
layer3.0.conv1.weight_mask 	|	active =  4250 	|	total =  294912 	|	layerwise sparsity =  0.014411078559027778
layer3.0.conv2.weight_mask 	|	active =  4547 	|	total =  589824 	|	layerwise sparsity =  0.007709079318576389
layer3.0.shortcut.0.weight_mask 	|	active =  472 	|	total =  32768 	|	layerwise sparsity =  0.014404296875
layer3.1.conv1.weight_mask 	|	active =  4496 	|	total =  589824 	|	layerwise sparsity =  0.007622612847222222
layer3.1.conv2.weight_mask 	|	active =  5016 	|	total =  589824 	|	layerwise sparsity =  0.008504231770833334
layer4.0.conv1.weight_mask 	|	active =  14054 	|	total =  1179648 	|	layerwise sparsity =  0.011913723415798612
layer4.0.conv2.weight_mask 	|	active =  39522 	|	total =  2359296 	|	layerwise sparsity =  0.016751607259114582
layer4.0.shortcut.0.weight_mask 	|	active =  1890 	|	total =  131072 	|	layerwise sparsity =  0.0144195556640625
layer4.1.conv1.weight_mask 	|	active =  43568 	|	total =  2359296 	|	layerwise sparsity =  0.018466525607638888
layer4.1.conv2.weight_mask 	|	active =  45037 	|	total =  2359296 	|	layerwise sparsity =  0.019089168972439237
------------------------ Checkpoint 59  ------------------------
best_val =  0.6937000000000001
------------------------ Checkpoint 60  ------------------------
pruning state: 19
remaining weight at start of iteration =  1.5643011992223066
iteration: 19, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 19, epoch: 1, best train: 0.242, best val: 0.1, lr: 0.09991
iteration: 19, epoch: 2, best train: 0.242, best val: 0.1, lr: 0.09985
iteration: 19, epoch: 3, best train: 0.264, best val: 0.1027, lr: 0.09976
iteration: 19, epoch: 4, best train: 0.264, best val: 0.1455, lr: 0.09965
iteration: 19, epoch: 5, best train: 0.335, best val: 0.2453, lr: 0.09953
iteration: 19, epoch: 6, best train: 0.335, best val: 0.3548, lr: 0.09938
iteration: 19, epoch: 7, best train: 0.349, best val: 0.3548, lr: 0.09922
iteration: 19, epoch: 8, best train: 0.378, best val: 0.367, lr: 0.09904
iteration: 19, epoch: 9, best train: 0.406, best val: 0.4133, lr: 0.09884
iteration: 19, epoch: 10, best train: 0.413, best val: 0.4451, lr: 0.09862
iteration: 19, epoch: 11, best train: 0.441, best val: 0.4451, lr: 0.09838
iteration: 19, epoch: 12, best train: 0.441, best val: 0.4451, lr: 0.09812
iteration: 19, epoch: 13, best train: 0.448, best val: 0.4451, lr: 0.09785
iteration: 19, epoch: 14, best train: 0.474, best val: 0.4451, lr: 0.09755
iteration: 19, epoch: 15, best train: 0.474, best val: 0.4906, lr: 0.09724
iteration: 19, epoch: 16, best train: 0.518, best val: 0.4906, lr: 0.09691
iteration: 19, epoch: 17, best train: 0.518, best val: 0.4952, lr: 0.09656
iteration: 19, epoch: 18, best train: 0.518, best val: 0.4952, lr: 0.09619
iteration: 19, epoch: 19, best train: 0.545, best val: 0.4952, lr: 0.09581
iteration: 19, epoch: 20, best train: 0.545, best val: 0.5186, lr: 0.09541
iteration: 19, epoch: 21, best train: 0.554, best val: 0.5186, lr: 0.09499
iteration: 19, epoch: 22, best train: 0.562, best val: 0.5186, lr: 0.09455
iteration: 19, epoch: 23, best train: 0.569, best val: 0.5186, lr: 0.0941
iteration: 19, epoch: 24, best train: 0.577, best val: 0.5186, lr: 0.09362
iteration: 19, epoch: 25, best train: 0.59, best val: 0.5186, lr: 0.09314
iteration: 19, epoch: 26, best train: 0.605, best val: 0.566, lr: 0.09263
iteration: 19, epoch: 27, best train: 0.606, best val: 0.566, lr: 0.09211
iteration: 19, epoch: 28, best train: 0.609, best val: 0.5771, lr: 0.09157
iteration: 19, epoch: 29, best train: 0.633, best val: 0.5771, lr: 0.09102
iteration: 19, epoch: 30, best train: 0.633, best val: 0.5771, lr: 0.09045
iteration: 19, epoch: 31, best train: 0.648, best val: 0.5771, lr: 0.08987
iteration: 19, epoch: 32, best train: 0.648, best val: 0.5771, lr: 0.08927
iteration: 19, epoch: 33, best train: 0.653, best val: 0.5771, lr: 0.08865
iteration: 19, epoch: 34, best train: 0.696, best val: 0.581, lr: 0.08802
iteration: 19, epoch: 35, best train: 0.696, best val: 0.581, lr: 0.08738
iteration: 19, epoch: 36, best train: 0.696, best val: 0.581, lr: 0.08672
iteration: 19, epoch: 37, best train: 0.696, best val: 0.581, lr: 0.08604
iteration: 19, epoch: 38, best train: 0.696, best val: 0.581, lr: 0.08536
iteration: 19, epoch: 39, best train: 0.696, best val: 0.581, lr: 0.08465
iteration: 19, epoch: 40, best train: 0.709, best val: 0.6096, lr: 0.08394
iteration: 19, epoch: 41, best train: 0.709, best val: 0.6115, lr: 0.08321
iteration: 19, epoch: 42, best train: 0.745, best val: 0.6115, lr: 0.08247
iteration: 19, epoch: 43, best train: 0.745, best val: 0.6115, lr: 0.08172
iteration: 19, epoch: 44, best train: 0.745, best val: 0.6115, lr: 0.08095
iteration: 19, epoch: 45, best train: 0.745, best val: 0.6115, lr: 0.08018
iteration: 19, epoch: 46, best train: 0.745, best val: 0.6115, lr: 0.07939
iteration: 19, epoch: 47, best train: 0.745, best val: 0.6115, lr: 0.07859
iteration: 19, epoch: 48, best train: 0.745, best val: 0.6115, lr: 0.07778
iteration: 19, epoch: 49, best train: 0.745, best val: 0.6115, lr: 0.07696
iteration: 19, epoch: 50, best train: 0.769, best val: 0.6115, lr: 0.07612
iteration: 19, epoch: 51, best train: 0.769, best val: 0.6115, lr: 0.07528
iteration: 19, epoch: 52, best train: 0.769, best val: 0.6115, lr: 0.07443
iteration: 19, epoch: 53, best train: 0.769, best val: 0.6115, lr: 0.07357
iteration: 19, epoch: 54, best train: 0.783, best val: 0.6116, lr: 0.0727
iteration: 19, epoch: 55, best train: 0.783, best val: 0.619, lr: 0.07182
iteration: 19, epoch: 56, best train: 0.783, best val: 0.619, lr: 0.07093
iteration: 19, epoch: 57, best train: 0.783, best val: 0.627, lr: 0.07004
iteration: 19, epoch: 58, best train: 0.787, best val: 0.627, lr: 0.06913
iteration: 19, epoch: 59, best train: 0.789, best val: 0.627, lr: 0.06822
iteration: 19, epoch: 60, best train: 0.797, best val: 0.627, lr: 0.06731
iteration: 19, epoch: 61, best train: 0.797, best val: 0.627, lr: 0.06638
iteration: 19, epoch: 62, best train: 0.8, best val: 0.627, lr: 0.06545
iteration: 19, epoch: 63, best train: 0.8, best val: 0.627, lr: 0.06451
iteration: 19, epoch: 64, best train: 0.8, best val: 0.627, lr: 0.06357
iteration: 19, epoch: 65, best train: 0.815, best val: 0.627, lr: 0.06262
iteration: 19, epoch: 66, best train: 0.821, best val: 0.627, lr: 0.06167
iteration: 19, epoch: 67, best train: 0.821, best val: 0.627, lr: 0.06072
iteration: 19, epoch: 68, best train: 0.821, best val: 0.6359, lr: 0.05975
iteration: 19, epoch: 69, best train: 0.821, best val: 0.6362, lr: 0.05879
iteration: 19, epoch: 70, best train: 0.821, best val: 0.6479, lr: 0.05782
iteration: 19, epoch: 71, best train: 0.821, best val: 0.6479, lr: 0.05685
iteration: 19, epoch: 72, best train: 0.836, best val: 0.6479, lr: 0.05588
iteration: 19, epoch: 73, best train: 0.836, best val: 0.6479, lr: 0.0549
iteration: 19, epoch: 74, best train: 0.837, best val: 0.6479, lr: 0.05392
iteration: 19, epoch: 75, best train: 0.837, best val: 0.6479, lr: 0.05294
iteration: 19, epoch: 76, best train: 0.837, best val: 0.6479, lr: 0.05196
iteration: 19, epoch: 77, best train: 0.853, best val: 0.6479, lr: 0.05098
iteration: 19, epoch: 78, best train: 0.853, best val: 0.6479, lr: 0.05
iteration: 19, epoch: 79, best train: 0.853, best val: 0.6479, lr: 0.04902
iteration: 19, epoch: 80, best train: 0.853, best val: 0.6548, lr: 0.04804
iteration: 19, epoch: 81, best train: 0.853, best val: 0.6548, lr: 0.04706
iteration: 19, epoch: 82, best train: 0.859, best val: 0.6548, lr: 0.04608
iteration: 19, epoch: 83, best train: 0.859, best val: 0.6548, lr: 0.0451
iteration: 19, epoch: 84, best train: 0.859, best val: 0.6548, lr: 0.04412
iteration: 19, epoch: 85, best train: 0.859, best val: 0.6548, lr: 0.04315
iteration: 19, epoch: 86, best train: 0.859, best val: 0.6548, lr: 0.04218
iteration: 19, epoch: 87, best train: 0.863, best val: 0.6602, lr: 0.04121
iteration: 19, epoch: 88, best train: 0.863, best val: 0.6602, lr: 0.04025
iteration: 19, epoch: 89, best train: 0.886, best val: 0.6602, lr: 0.03928
iteration: 19, epoch: 90, best train: 0.886, best val: 0.6602, lr: 0.03833
iteration: 19, epoch: 91, best train: 0.886, best val: 0.6602, lr: 0.03738
iteration: 19, epoch: 92, best train: 0.886, best val: 0.6602, lr: 0.03643
iteration: 19, epoch: 93, best train: 0.886, best val: 0.6602, lr: 0.03549
iteration: 19, epoch: 94, best train: 0.886, best val: 0.6602, lr: 0.03455
iteration: 19, epoch: 95, best train: 0.886, best val: 0.6602, lr: 0.03362
iteration: 19, epoch: 96, best train: 0.887, best val: 0.6681, lr: 0.03269
iteration: 19, epoch: 97, best train: 0.887, best val: 0.6681, lr: 0.03178
iteration: 19, epoch: 98, best train: 0.896, best val: 0.6681, lr: 0.03087
iteration: 19, epoch: 99, best train: 0.897, best val: 0.6681, lr: 0.02996
iteration: 19, epoch: 100, best train: 0.897, best val: 0.6681, lr: 0.02907
iteration: 19, epoch: 101, best train: 0.897, best val: 0.6681, lr: 0.02818
iteration: 19, epoch: 102, best train: 0.897, best val: 0.6681, lr: 0.0273
iteration: 19, epoch: 103, best train: 0.897, best val: 0.6681, lr: 0.02643
iteration: 19, epoch: 104, best train: 0.897, best val: 0.6681, lr: 0.02557
iteration: 19, epoch: 105, best train: 0.897, best val: 0.6712, lr: 0.02472
iteration: 19, epoch: 106, best train: 0.906, best val: 0.6712, lr: 0.02388
iteration: 19, epoch: 107, best train: 0.906, best val: 0.6712, lr: 0.02304
iteration: 19, epoch: 108, best train: 0.906, best val: 0.6712, lr: 0.02222
iteration: 19, epoch: 109, best train: 0.906, best val: 0.6712, lr: 0.02141
iteration: 19, epoch: 110, best train: 0.906, best val: 0.6717, lr: 0.02061
iteration: 19, epoch: 111, best train: 0.91, best val: 0.6717, lr: 0.01982
iteration: 19, epoch: 112, best train: 0.91, best val: 0.6717, lr: 0.01905
iteration: 19, epoch: 113, best train: 0.911, best val: 0.6728, lr: 0.01828
iteration: 19, epoch: 114, best train: 0.911, best val: 0.6728, lr: 0.01753
iteration: 19, epoch: 115, best train: 0.911, best val: 0.6728, lr: 0.01679
iteration: 19, epoch: 116, best train: 0.911, best val: 0.6728, lr: 0.01606
iteration: 19, epoch: 117, best train: 0.911, best val: 0.6728, lr: 0.01535
iteration: 19, epoch: 118, best train: 0.911, best val: 0.6728, lr: 0.01464
iteration: 19, epoch: 119, best train: 0.911, best val: 0.6728, lr: 0.01396
iteration: 19, epoch: 120, best train: 0.912, best val: 0.6728, lr: 0.01328
iteration: 19, epoch: 121, best train: 0.912, best val: 0.6728, lr: 0.01262
iteration: 19, epoch: 122, best train: 0.912, best val: 0.6728, lr: 0.01198
iteration: 19, epoch: 123, best train: 0.912, best val: 0.6728, lr: 0.01135
iteration: 19, epoch: 124, best train: 0.914, best val: 0.6728, lr: 0.01073
iteration: 19, epoch: 125, best train: 0.914, best val: 0.6743, lr: 0.01013
iteration: 19, epoch: 126, best train: 0.914, best val: 0.6746, lr: 0.00955
iteration: 19, epoch: 127, best train: 0.921, best val: 0.6746, lr: 0.00898
iteration: 19, epoch: 128, best train: 0.921, best val: 0.6746, lr: 0.00843
iteration: 19, epoch: 129, best train: 0.921, best val: 0.6746, lr: 0.00789
iteration: 19, epoch: 130, best train: 0.921, best val: 0.6746, lr: 0.00737
iteration: 19, epoch: 131, best train: 0.921, best val: 0.6746, lr: 0.00686
iteration: 19, epoch: 132, best train: 0.921, best val: 0.6761, lr: 0.00638
iteration: 19, epoch: 133, best train: 0.921, best val: 0.6761, lr: 0.0059
iteration: 19, epoch: 134, best train: 0.921, best val: 0.6761, lr: 0.00545
iteration: 19, epoch: 135, best train: 0.921, best val: 0.6761, lr: 0.00501
iteration: 19, epoch: 136, best train: 0.921, best val: 0.6761, lr: 0.00459
iteration: 19, epoch: 137, best train: 0.921, best val: 0.6765, lr: 0.00419
iteration: 19, epoch: 138, best train: 0.921, best val: 0.6773, lr: 0.00381
iteration: 19, epoch: 139, best train: 0.921, best val: 0.6773, lr: 0.00344
iteration: 19, epoch: 140, best train: 0.921, best val: 0.6773, lr: 0.00309
iteration: 19, epoch: 141, best train: 0.921, best val: 0.6773, lr: 0.00276
iteration: 19, epoch: 142, best train: 0.921, best val: 0.6773, lr: 0.00245
iteration: 19, epoch: 143, best train: 0.921, best val: 0.6773, lr: 0.00215
iteration: 19, epoch: 144, best train: 0.933, best val: 0.6773, lr: 0.00188
iteration: 19, epoch: 145, best train: 0.933, best val: 0.6773, lr: 0.00162
iteration: 19, epoch: 146, best train: 0.933, best val: 0.6773, lr: 0.00138
iteration: 19, epoch: 147, best train: 0.933, best val: 0.6773, lr: 0.00116
iteration: 19, epoch: 148, best train: 0.933, best val: 0.6773, lr: 0.00096
iteration: 19, epoch: 149, best train: 0.933, best val: 0.6773, lr: 0.00078
iteration: 19, epoch: 150, best train: 0.933, best val: 0.6773, lr: 0.00062
iteration: 19, epoch: 151, best train: 0.933, best val: 0.6773, lr: 0.00047
iteration: 19, epoch: 152, best train: 0.933, best val: 0.6773, lr: 0.00035
iteration: 19, epoch: 153, best train: 0.933, best val: 0.6773, lr: 0.00024
iteration: 19, epoch: 154, best train: 0.933, best val: 0.6773, lr: 0.00015
iteration: 19, epoch: 155, best train: 0.933, best val: 0.6773, lr: 9e-05
iteration: 19, epoch: 156, best train: 0.933, best val: 0.6773, lr: 4e-05
iteration: 19, epoch: 157, best train: 0.933, best val: 0.6773, lr: 1e-05
iteration: 19, epoch: 158, best train: 0.933, best val: 0.6773, lr: 0.0
iteration: 19, epoch: 159, best train: 0.933, best val: 0.6773, lr: 1e-05
------------------------ Checkpoint 61  ------------------------
pre_conv.0.weight_mask 	|	active =  346 	|	total =  1728 	|	layerwise sparsity =  0.20023148148148148
layer1.0.conv1.weight_mask 	|	active =  425 	|	total =  36864 	|	layerwise sparsity =  0.011528862847222222
layer1.0.conv2.weight_mask 	|	active =  425 	|	total =  36864 	|	layerwise sparsity =  0.011528862847222222
layer1.1.conv1.weight_mask 	|	active =  425 	|	total =  36864 	|	layerwise sparsity =  0.011528862847222222
layer1.1.conv2.weight_mask 	|	active =  425 	|	total =  36864 	|	layerwise sparsity =  0.011528862847222222
layer2.0.conv1.weight_mask 	|	active =  850 	|	total =  73728 	|	layerwise sparsity =  0.011528862847222222
layer2.0.conv2.weight_mask 	|	active =  1700 	|	total =  147456 	|	layerwise sparsity =  0.011528862847222222
layer2.0.shortcut.0.weight_mask 	|	active =  1639 	|	total =  8192 	|	layerwise sparsity =  0.2000732421875
layer2.1.conv1.weight_mask 	|	active =  1700 	|	total =  147456 	|	layerwise sparsity =  0.011528862847222222
layer2.1.conv2.weight_mask 	|	active =  1700 	|	total =  147456 	|	layerwise sparsity =  0.011528862847222222
layer3.0.conv1.weight_mask 	|	active =  3400 	|	total =  294912 	|	layerwise sparsity =  0.011528862847222222
layer3.0.conv2.weight_mask 	|	active =  3520 	|	total =  589824 	|	layerwise sparsity =  0.005967881944444444
layer3.0.shortcut.0.weight_mask 	|	active =  378 	|	total =  32768 	|	layerwise sparsity =  0.01153564453125
layer3.1.conv1.weight_mask 	|	active =  3478 	|	total =  589824 	|	layerwise sparsity =  0.005896674262152778
layer3.1.conv2.weight_mask 	|	active =  3903 	|	total =  589824 	|	layerwise sparsity =  0.006617228190104167
layer4.0.conv1.weight_mask 	|	active =  11131 	|	total =  1179648 	|	layerwise sparsity =  0.009435865614149306
layer4.0.conv2.weight_mask 	|	active =  31869 	|	total =  2359296 	|	layerwise sparsity =  0.013507843017578125
layer4.0.shortcut.0.weight_mask 	|	active =  1512 	|	total =  131072 	|	layerwise sparsity =  0.01153564453125
layer4.1.conv1.weight_mask 	|	active =  35312 	|	total =  2359296 	|	layerwise sparsity =  0.014967176649305556
layer4.1.conv2.weight_mask 	|	active =  36567 	|	total =  2359296 	|	layerwise sparsity =  0.015499114990234375
------------------------ Checkpoint 62  ------------------------
remaining weight at end of iteration =  1.2608842615692506
------------------------ Checkpoint 63  ------------------------
best_val =  0.6773
