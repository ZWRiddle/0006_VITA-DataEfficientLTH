
---- experiment configuration ----
 * mode => IMP
 * dist => False
 * seed => 6
 * dset => cifar10
 * contrast_aug => False
 * color_jitter_strength => 0.5
 * color_jitter_prob => 0.8
 * gray_prob => 0.2
 * rand_aug => False
 * n_rand_aug => 4
 * auto_aug => True
 * auto_aug_policy => 2
 * custom_aug => False
 * blur => False
 * blur_sigma => [0.1, 2]
 * blur_prob => 0.5
 * cutout => False
 * cut_len => 16
 * data_root => data/
 * data_size => 1.0
 * data_size_2 => 0.02
 * long_tailed => False
 * long_tailed_type => exp
 * long_tailed_factor => 0.01
 * batch_size => 100
 * n_workers => 4
 * net => resnet18
 * in_planes => 64
 * pretrained => False
 * optim => sgd
 * lr => 0.1
 * momentum => 0.9
 * weight_decay => 0.0005
 * warmup_epochs => 0
 * lr_sched => cosine
 * multi_step_milestones => [100, 150]
 * multi_step_gamma => 0.1
 * resume => False
 * out_dir => checkpoints/08-10_07-30_SNIP+-IMP_0.02_autoaug_S1
 * load_dir => checkpoints/_SNIP+-IMP_1_autoaug
 * pruning_iters => 20
 * epochs => 160
 * rewind_type => epoch
 * rewind_epoch => 2
 * prune_type => l1
 * prune_strategy => SNIP+
 * prune_rate => 0.2
 * load_ticket => 
 * adv_prop => False
 * cos_criterion => False
 * cos_linear => False
 * tvmf_linear => False
 * attack_n_iter => 1
 * attack_eps => 0.03137254901960784
 * attack_step_size => 0.00784313725490196
 * prune_ff_only => False
----------------------------------

setting up device, distributed = False
 | cuda:0
Files already downloaded and verified
Files already downloaded and verified

------------------------ Checkpoint 1  ------------------------

2024-08-10 07:30:11.190786
setting up dataset, train: 50000, val: 10000
setting up dataset_2, train: 1000, val: 10000

starting training from scratch

------------------------ Checkpoint 2  ------------------------

2024-08-10 07:30:12.192312

prune_rate = 0.2, iters = 20, final_sparsity = 0.9884707849539315.

Initialize by SNIP+
layer-wise sparsity is [0.0, 0.0006239149305555555, 0.0006239149305555555, 0.0008680555555555555, 0.0011393229166666667, 0.001071506076388889, 0.0020751953125, 0.00048828125, 0.002231174045138889, 0.002529568142361111, 0.003441704644097222, 0.005150689019097222, 0.001220703125, 0.005583021375868056, 0.006400214301215278, 0.008947584364149306, 0.013342115614149306, 0.0036468505859375, 0.014958699544270834, 0.016336229112413194, 0.0]
Layerwise Density after patching:  [0.2, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.2, 0.01152921504606852, 0.01152921504606852, 0.01152921504606852, 0.005150689019097222, 0.01152921504606852, 0.005583021375868056, 0.006400214301215278, 0.008947584364149306, 0.013342115614149306, 0.01152921504606852, 0.014958699544270834, 0.016336229112413194, 0.0]

------------------------ Checkpoint 3  ------------------------
pruning state: 0
remaining weight at start of iteration =  99.99998207761968
iteration: 0, epoch: 0, best train: 0, best val: 0, lr: 0.1
iteration: 0, epoch: 1, best train: 0.118, best val: 0.0994, lr: 0.09999
iteration: 0, epoch: 2, best train: 0.118, best val: 0.0994, lr: 0.09996
iteration: 0, epoch: 3, best train: 0.13, best val: 0.1329, lr: 0.09991
iteration: 0, epoch: 4, best train: 0.144, best val: 0.1871, lr: 0.09985
iteration: 0, epoch: 5, best train: 0.172, best val: 0.1871, lr: 0.09976
iteration: 0, epoch: 6, best train: 0.172, best val: 0.1871, lr: 0.09965
iteration: 0, epoch: 7, best train: 0.184, best val: 0.2109, lr: 0.09953
iteration: 0, epoch: 8, best train: 0.184, best val: 0.2109, lr: 0.09938
iteration: 0, epoch: 9, best train: 0.193, best val: 0.2204, lr: 0.09922
iteration: 0, epoch: 10, best train: 0.197, best val: 0.251, lr: 0.09904
iteration: 0, epoch: 11, best train: 0.206, best val: 0.251, lr: 0.09884
iteration: 0, epoch: 12, best train: 0.218, best val: 0.251, lr: 0.09862
iteration: 0, epoch: 13, best train: 0.228, best val: 0.2581, lr: 0.09838
iteration: 0, epoch: 14, best train: 0.228, best val: 0.2681, lr: 0.09812
iteration: 0, epoch: 15, best train: 0.228, best val: 0.2984, lr: 0.09785
iteration: 0, epoch: 16, best train: 0.235, best val: 0.2984, lr: 0.09755
iteration: 0, epoch: 17, best train: 0.235, best val: 0.2984, lr: 0.09724
iteration: 0, epoch: 18, best train: 0.235, best val: 0.2984, lr: 0.09691
iteration: 0, epoch: 19, best train: 0.243, best val: 0.2984, lr: 0.09656
iteration: 0, epoch: 20, best train: 0.258, best val: 0.3038, lr: 0.09619
iteration: 0, epoch: 21, best train: 0.258, best val: 0.3038, lr: 0.09581
iteration: 0, epoch: 22, best train: 0.27, best val: 0.3079, lr: 0.09541
iteration: 0, epoch: 23, best train: 0.277, best val: 0.3274, lr: 0.09499
iteration: 0, epoch: 24, best train: 0.277, best val: 0.3274, lr: 0.09455
iteration: 0, epoch: 25, best train: 0.277, best val: 0.3274, lr: 0.0941
iteration: 0, epoch: 26, best train: 0.277, best val: 0.3299, lr: 0.09362
iteration: 0, epoch: 27, best train: 0.292, best val: 0.3299, lr: 0.09314
iteration: 0, epoch: 28, best train: 0.31, best val: 0.3389, lr: 0.09263
iteration: 0, epoch: 29, best train: 0.31, best val: 0.3389, lr: 0.09211
iteration: 0, epoch: 30, best train: 0.31, best val: 0.3389, lr: 0.09157
iteration: 0, epoch: 31, best train: 0.31, best val: 0.38, lr: 0.09102
iteration: 0, epoch: 32, best train: 0.336, best val: 0.3827, lr: 0.09045
iteration: 0, epoch: 33, best train: 0.352, best val: 0.385, lr: 0.08987
iteration: 0, epoch: 34, best train: 0.353, best val: 0.385, lr: 0.08927
iteration: 0, epoch: 35, best train: 0.353, best val: 0.385, lr: 0.08865
iteration: 0, epoch: 36, best train: 0.353, best val: 0.385, lr: 0.08802
iteration: 0, epoch: 37, best train: 0.353, best val: 0.385, lr: 0.08738
iteration: 0, epoch: 38, best train: 0.353, best val: 0.385, lr: 0.08672
iteration: 0, epoch: 39, best train: 0.354, best val: 0.3992, lr: 0.08604
iteration: 0, epoch: 40, best train: 0.354, best val: 0.3992, lr: 0.08536
iteration: 0, epoch: 41, best train: 0.363, best val: 0.3992, lr: 0.08465
iteration: 0, epoch: 42, best train: 0.363, best val: 0.3992, lr: 0.08394
iteration: 0, epoch: 43, best train: 0.372, best val: 0.3992, lr: 0.08321
iteration: 0, epoch: 44, best train: 0.372, best val: 0.3992, lr: 0.08247
iteration: 0, epoch: 45, best train: 0.382, best val: 0.4083, lr: 0.08172
iteration: 0, epoch: 46, best train: 0.392, best val: 0.4083, lr: 0.08095
iteration: 0, epoch: 47, best train: 0.392, best val: 0.4083, lr: 0.08018
iteration: 0, epoch: 48, best train: 0.403, best val: 0.4083, lr: 0.07939
iteration: 0, epoch: 49, best train: 0.416, best val: 0.4238, lr: 0.07859
iteration: 0, epoch: 50, best train: 0.416, best val: 0.4238, lr: 0.07778
iteration: 0, epoch: 51, best train: 0.416, best val: 0.4296, lr: 0.07696
iteration: 0, epoch: 52, best train: 0.428, best val: 0.4302, lr: 0.07612
iteration: 0, epoch: 53, best train: 0.428, best val: 0.4302, lr: 0.07528
iteration: 0, epoch: 54, best train: 0.433, best val: 0.4302, lr: 0.07443
iteration: 0, epoch: 55, best train: 0.433, best val: 0.4302, lr: 0.07357
iteration: 0, epoch: 56, best train: 0.447, best val: 0.4302, lr: 0.0727
iteration: 0, epoch: 57, best train: 0.448, best val: 0.4473, lr: 0.07182
iteration: 0, epoch: 58, best train: 0.47, best val: 0.4473, lr: 0.07093
iteration: 0, epoch: 59, best train: 0.47, best val: 0.4473, lr: 0.07004
iteration: 0, epoch: 60, best train: 0.47, best val: 0.4473, lr: 0.06913
iteration: 0, epoch: 61, best train: 0.486, best val: 0.4473, lr: 0.06822
iteration: 0, epoch: 62, best train: 0.486, best val: 0.462, lr: 0.06731
iteration: 0, epoch: 63, best train: 0.486, best val: 0.462, lr: 0.06638
iteration: 0, epoch: 64, best train: 0.486, best val: 0.462, lr: 0.06545
iteration: 0, epoch: 65, best train: 0.502, best val: 0.462, lr: 0.06451
iteration: 0, epoch: 66, best train: 0.502, best val: 0.4809, lr: 0.06357
iteration: 0, epoch: 67, best train: 0.511, best val: 0.4809, lr: 0.06262
iteration: 0, epoch: 68, best train: 0.537, best val: 0.4809, lr: 0.06167
iteration: 0, epoch: 69, best train: 0.537, best val: 0.4809, lr: 0.06072
iteration: 0, epoch: 70, best train: 0.537, best val: 0.4809, lr: 0.05975
iteration: 0, epoch: 71, best train: 0.537, best val: 0.4809, lr: 0.05879
iteration: 0, epoch: 72, best train: 0.537, best val: 0.4809, lr: 0.05782
iteration: 0, epoch: 73, best train: 0.537, best val: 0.4809, lr: 0.05685
iteration: 0, epoch: 74, best train: 0.537, best val: 0.4809, lr: 0.05588
iteration: 0, epoch: 75, best train: 0.537, best val: 0.4809, lr: 0.0549
iteration: 0, epoch: 76, best train: 0.537, best val: 0.4809, lr: 0.05392
iteration: 0, epoch: 77, best train: 0.537, best val: 0.4817, lr: 0.05294
iteration: 0, epoch: 78, best train: 0.539, best val: 0.4817, lr: 0.05196
iteration: 0, epoch: 79, best train: 0.558, best val: 0.5033, lr: 0.05098
iteration: 0, epoch: 80, best train: 0.593, best val: 0.5033, lr: 0.05
iteration: 0, epoch: 81, best train: 0.593, best val: 0.5033, lr: 0.04902
iteration: 0, epoch: 82, best train: 0.593, best val: 0.5033, lr: 0.04804
iteration: 0, epoch: 83, best train: 0.593, best val: 0.5033, lr: 0.04706
iteration: 0, epoch: 84, best train: 0.593, best val: 0.5033, lr: 0.04608
iteration: 0, epoch: 85, best train: 0.593, best val: 0.5033, lr: 0.0451
iteration: 0, epoch: 86, best train: 0.608, best val: 0.5033, lr: 0.04412
iteration: 0, epoch: 87, best train: 0.608, best val: 0.5328, lr: 0.04315
iteration: 0, epoch: 88, best train: 0.611, best val: 0.5328, lr: 0.04218
iteration: 0, epoch: 89, best train: 0.611, best val: 0.5328, lr: 0.04121
iteration: 0, epoch: 90, best train: 0.616, best val: 0.5328, lr: 0.04025
iteration: 0, epoch: 91, best train: 0.616, best val: 0.5328, lr: 0.03928
iteration: 0, epoch: 92, best train: 0.619, best val: 0.5328, lr: 0.03833
iteration: 0, epoch: 93, best train: 0.638, best val: 0.5328, lr: 0.03738
iteration: 0, epoch: 94, best train: 0.638, best val: 0.5343, lr: 0.03643
iteration: 0, epoch: 95, best train: 0.644, best val: 0.5343, lr: 0.03549
iteration: 0, epoch: 96, best train: 0.647, best val: 0.5343, lr: 0.03455
iteration: 0, epoch: 97, best train: 0.651, best val: 0.5343, lr: 0.03362
iteration: 0, epoch: 98, best train: 0.651, best val: 0.5343, lr: 0.03269
iteration: 0, epoch: 99, best train: 0.662, best val: 0.5343, lr: 0.03178
iteration: 0, epoch: 100, best train: 0.669, best val: 0.5343, lr: 0.03087
iteration: 0, epoch: 101, best train: 0.682, best val: 0.5444, lr: 0.02996
iteration: 0, epoch: 102, best train: 0.684, best val: 0.5444, lr: 0.02907
iteration: 0, epoch: 103, best train: 0.693, best val: 0.5444, lr: 0.02818
iteration: 0, epoch: 104, best train: 0.693, best val: 0.5444, lr: 0.0273
iteration: 0, epoch: 105, best train: 0.693, best val: 0.5444, lr: 0.02643
iteration: 0, epoch: 106, best train: 0.693, best val: 0.5444, lr: 0.02557
iteration: 0, epoch: 107, best train: 0.693, best val: 0.5444, lr: 0.02472
iteration: 0, epoch: 108, best train: 0.704, best val: 0.5444, lr: 0.02388
iteration: 0, epoch: 109, best train: 0.727, best val: 0.5444, lr: 0.02304
iteration: 0, epoch: 110, best train: 0.727, best val: 0.5444, lr: 0.02222
iteration: 0, epoch: 111, best train: 0.738, best val: 0.5471, lr: 0.02141
iteration: 0, epoch: 112, best train: 0.738, best val: 0.5571, lr: 0.02061
iteration: 0, epoch: 113, best train: 0.738, best val: 0.5571, lr: 0.01982
iteration: 0, epoch: 114, best train: 0.765, best val: 0.5575, lr: 0.01905
iteration: 0, epoch: 115, best train: 0.765, best val: 0.5575, lr: 0.01828
iteration: 0, epoch: 116, best train: 0.765, best val: 0.5575, lr: 0.01753
iteration: 0, epoch: 117, best train: 0.765, best val: 0.5575, lr: 0.01679
iteration: 0, epoch: 118, best train: 0.765, best val: 0.5621, lr: 0.01606
iteration: 0, epoch: 119, best train: 0.765, best val: 0.5621, lr: 0.01535
iteration: 0, epoch: 120, best train: 0.768, best val: 0.5621, lr: 0.01464
iteration: 0, epoch: 121, best train: 0.78, best val: 0.5706, lr: 0.01396
iteration: 0, epoch: 122, best train: 0.797, best val: 0.5706, lr: 0.01328
iteration: 0, epoch: 123, best train: 0.797, best val: 0.5756, lr: 0.01262
iteration: 0, epoch: 124, best train: 0.797, best val: 0.5756, lr: 0.01198
iteration: 0, epoch: 125, best train: 0.797, best val: 0.5756, lr: 0.01135
iteration: 0, epoch: 126, best train: 0.81, best val: 0.5756, lr: 0.01073
iteration: 0, epoch: 127, best train: 0.81, best val: 0.578, lr: 0.01013
iteration: 0, epoch: 128, best train: 0.81, best val: 0.578, lr: 0.00955
iteration: 0, epoch: 129, best train: 0.81, best val: 0.578, lr: 0.00898
iteration: 0, epoch: 130, best train: 0.817, best val: 0.578, lr: 0.00843
iteration: 0, epoch: 131, best train: 0.817, best val: 0.578, lr: 0.00789
iteration: 0, epoch: 132, best train: 0.817, best val: 0.5833, lr: 0.00737
iteration: 0, epoch: 133, best train: 0.845, best val: 0.5833, lr: 0.00686
iteration: 0, epoch: 134, best train: 0.845, best val: 0.5833, lr: 0.00638
iteration: 0, epoch: 135, best train: 0.845, best val: 0.5833, lr: 0.0059
iteration: 0, epoch: 136, best train: 0.845, best val: 0.5847, lr: 0.00545
iteration: 0, epoch: 137, best train: 0.845, best val: 0.5847, lr: 0.00501
iteration: 0, epoch: 138, best train: 0.845, best val: 0.5847, lr: 0.00459
iteration: 0, epoch: 139, best train: 0.845, best val: 0.5908, lr: 0.00419
iteration: 0, epoch: 140, best train: 0.845, best val: 0.5927, lr: 0.00381
iteration: 0, epoch: 141, best train: 0.845, best val: 0.5927, lr: 0.00344
iteration: 0, epoch: 142, best train: 0.845, best val: 0.5927, lr: 0.00309
iteration: 0, epoch: 143, best train: 0.85, best val: 0.5927, lr: 0.00276
iteration: 0, epoch: 144, best train: 0.85, best val: 0.5927, lr: 0.00245
iteration: 0, epoch: 145, best train: 0.85, best val: 0.5927, lr: 0.00215
iteration: 0, epoch: 146, best train: 0.853, best val: 0.5958, lr: 0.00188
iteration: 0, epoch: 147, best train: 0.857, best val: 0.5958, lr: 0.00162
iteration: 0, epoch: 148, best train: 0.857, best val: 0.5958, lr: 0.00138
iteration: 0, epoch: 149, best train: 0.857, best val: 0.5958, lr: 0.00116
iteration: 0, epoch: 150, best train: 0.857, best val: 0.5958, lr: 0.00096
iteration: 0, epoch: 151, best train: 0.861, best val: 0.5958, lr: 0.00078
iteration: 0, epoch: 152, best train: 0.861, best val: 0.5958, lr: 0.00062
iteration: 0, epoch: 153, best train: 0.861, best val: 0.5958, lr: 0.00047
iteration: 0, epoch: 154, best train: 0.861, best val: 0.5958, lr: 0.00035
iteration: 0, epoch: 155, best train: 0.861, best val: 0.5958, lr: 0.00024
iteration: 0, epoch: 156, best train: 0.861, best val: 0.5958, lr: 0.00015
iteration: 0, epoch: 157, best train: 0.861, best val: 0.5958, lr: 9e-05
iteration: 0, epoch: 158, best train: 0.861, best val: 0.5958, lr: 4e-05
iteration: 0, epoch: 159, best train: 0.861, best val: 0.5958, lr: 1e-05
------------------------ Checkpoint 4  ------------------------
pre_conv.0.weight_mask 	|	active =  1594 	|	total =  1728 	|	layerwise sparsity =  0.9224537037037037
layer1.0.conv1.weight_mask 	|	active =  29491 	|	total =  36864 	|	layerwise sparsity =  0.7999945746527778
layer1.0.conv2.weight_mask 	|	active =  29491 	|	total =  36864 	|	layerwise sparsity =  0.7999945746527778
layer1.1.conv1.weight_mask 	|	active =  29491 	|	total =  36864 	|	layerwise sparsity =  0.7999945746527778
layer1.1.conv2.weight_mask 	|	active =  29491 	|	total =  36864 	|	layerwise sparsity =  0.7999945746527778
layer2.0.conv1.weight_mask 	|	active =  58982 	|	total =  73728 	|	layerwise sparsity =  0.7999945746527778
layer2.0.conv2.weight_mask 	|	active =  117965 	|	total =  147456 	|	layerwise sparsity =  0.8000013563368056
layer2.0.shortcut.0.weight_mask 	|	active =  7559 	|	total =  8192 	|	layerwise sparsity =  0.9227294921875
layer2.1.conv1.weight_mask 	|	active =  117965 	|	total =  147456 	|	layerwise sparsity =  0.8000013563368056
layer2.1.conv2.weight_mask 	|	active =  117965 	|	total =  147456 	|	layerwise sparsity =  0.8000013563368056
layer3.0.conv1.weight_mask 	|	active =  235930 	|	total =  294912 	|	layerwise sparsity =  0.8000013563368056
layer3.0.conv2.weight_mask 	|	active =  453227 	|	total =  589824 	|	layerwise sparsity =  0.7684105767144097
layer3.0.shortcut.0.weight_mask 	|	active =  26214 	|	total =  32768 	|	layerwise sparsity =  0.79998779296875
layer3.1.conv1.weight_mask 	|	active =  455057 	|	total =  589824 	|	layerwise sparsity =  0.7715131971571181
layer3.1.conv2.weight_mask 	|	active =  458176 	|	total =  589824 	|	layerwise sparsity =  0.7768012152777778
layer4.0.conv1.weight_mask 	|	active =  931832 	|	total =  1179648 	|	layerwise sparsity =  0.7899237738715278
layer4.0.conv2.weight_mask 	|	active =  1901269 	|	total =  2359296 	|	layerwise sparsity =  0.8058628506130643
layer4.0.shortcut.0.weight_mask 	|	active =  104858 	|	total =  131072 	|	layerwise sparsity =  0.8000030517578125
layer4.1.conv1.weight_mask 	|	active =  1912173 	|	total =  2359296 	|	layerwise sparsity =  0.8104845682779948
layer4.1.conv2.weight_mask 	|	active =  1920614 	|	total =  2359296 	|	layerwise sparsity =  0.8140623304578993
------------------------ Checkpoint 5  ------------------------
best_val =  0.5958000000000001
------------------------ Checkpoint 6  ------------------------
pruning state: 1
remaining weight at start of iteration =  80.10716149641839
iteration: 1, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 1, epoch: 1, best train: 0.181, best val: 0.1858, lr: 0.09991
iteration: 1, epoch: 2, best train: 0.181, best val: 0.1926, lr: 0.09985
iteration: 1, epoch: 3, best train: 0.199, best val: 0.2332, lr: 0.09976
iteration: 1, epoch: 4, best train: 0.203, best val: 0.2676, lr: 0.09965
iteration: 1, epoch: 5, best train: 0.22, best val: 0.2989, lr: 0.09953
iteration: 1, epoch: 6, best train: 0.247, best val: 0.3118, lr: 0.09938
iteration: 1, epoch: 7, best train: 0.25, best val: 0.3118, lr: 0.09922
iteration: 1, epoch: 8, best train: 0.25, best val: 0.3118, lr: 0.09904
iteration: 1, epoch: 9, best train: 0.271, best val: 0.3118, lr: 0.09884
iteration: 1, epoch: 10, best train: 0.291, best val: 0.3147, lr: 0.09862
iteration: 1, epoch: 11, best train: 0.303, best val: 0.3377, lr: 0.09838
iteration: 1, epoch: 12, best train: 0.303, best val: 0.3377, lr: 0.09812
iteration: 1, epoch: 13, best train: 0.303, best val: 0.3628, lr: 0.09785
iteration: 1, epoch: 14, best train: 0.303, best val: 0.3628, lr: 0.09755
iteration: 1, epoch: 15, best train: 0.322, best val: 0.3629, lr: 0.09724
iteration: 1, epoch: 16, best train: 0.335, best val: 0.3629, lr: 0.09691
iteration: 1, epoch: 17, best train: 0.335, best val: 0.3629, lr: 0.09656
iteration: 1, epoch: 18, best train: 0.348, best val: 0.401, lr: 0.09619
iteration: 1, epoch: 19, best train: 0.392, best val: 0.401, lr: 0.09581
iteration: 1, epoch: 20, best train: 0.392, best val: 0.401, lr: 0.09541
iteration: 1, epoch: 21, best train: 0.392, best val: 0.401, lr: 0.09499
iteration: 1, epoch: 22, best train: 0.392, best val: 0.401, lr: 0.09455
iteration: 1, epoch: 23, best train: 0.392, best val: 0.4115, lr: 0.0941
iteration: 1, epoch: 24, best train: 0.402, best val: 0.4306, lr: 0.09362
iteration: 1, epoch: 25, best train: 0.402, best val: 0.4306, lr: 0.09314
iteration: 1, epoch: 26, best train: 0.421, best val: 0.4306, lr: 0.09263
iteration: 1, epoch: 27, best train: 0.421, best val: 0.4306, lr: 0.09211
iteration: 1, epoch: 28, best train: 0.421, best val: 0.4306, lr: 0.09157
iteration: 1, epoch: 29, best train: 0.423, best val: 0.4306, lr: 0.09102
iteration: 1, epoch: 30, best train: 0.442, best val: 0.4325, lr: 0.09045
iteration: 1, epoch: 31, best train: 0.442, best val: 0.4483, lr: 0.08987
iteration: 1, epoch: 32, best train: 0.504, best val: 0.4483, lr: 0.08927
iteration: 1, epoch: 33, best train: 0.513, best val: 0.4483, lr: 0.08865
iteration: 1, epoch: 34, best train: 0.513, best val: 0.4483, lr: 0.08802
iteration: 1, epoch: 35, best train: 0.513, best val: 0.4483, lr: 0.08738
iteration: 1, epoch: 36, best train: 0.513, best val: 0.4483, lr: 0.08672
iteration: 1, epoch: 37, best train: 0.513, best val: 0.4551, lr: 0.08604
iteration: 1, epoch: 38, best train: 0.513, best val: 0.4651, lr: 0.08536
iteration: 1, epoch: 39, best train: 0.518, best val: 0.4651, lr: 0.08465
iteration: 1, epoch: 40, best train: 0.518, best val: 0.4651, lr: 0.08394
iteration: 1, epoch: 41, best train: 0.518, best val: 0.4651, lr: 0.08321
iteration: 1, epoch: 42, best train: 0.518, best val: 0.4651, lr: 0.08247
iteration: 1, epoch: 43, best train: 0.523, best val: 0.4851, lr: 0.08172
iteration: 1, epoch: 44, best train: 0.563, best val: 0.4851, lr: 0.08095
iteration: 1, epoch: 45, best train: 0.563, best val: 0.4851, lr: 0.08018
iteration: 1, epoch: 46, best train: 0.568, best val: 0.4851, lr: 0.07939
iteration: 1, epoch: 47, best train: 0.568, best val: 0.4987, lr: 0.07859
iteration: 1, epoch: 48, best train: 0.588, best val: 0.4987, lr: 0.07778
iteration: 1, epoch: 49, best train: 0.588, best val: 0.4987, lr: 0.07696
iteration: 1, epoch: 50, best train: 0.588, best val: 0.4987, lr: 0.07612
iteration: 1, epoch: 51, best train: 0.588, best val: 0.5109, lr: 0.07528
iteration: 1, epoch: 52, best train: 0.608, best val: 0.5109, lr: 0.07443
iteration: 1, epoch: 53, best train: 0.608, best val: 0.5109, lr: 0.07357
iteration: 1, epoch: 54, best train: 0.608, best val: 0.5109, lr: 0.0727
iteration: 1, epoch: 55, best train: 0.614, best val: 0.5109, lr: 0.07182
iteration: 1, epoch: 56, best train: 0.614, best val: 0.5109, lr: 0.07093
iteration: 1, epoch: 57, best train: 0.614, best val: 0.5109, lr: 0.07004
iteration: 1, epoch: 58, best train: 0.624, best val: 0.5133, lr: 0.06913
iteration: 1, epoch: 59, best train: 0.662, best val: 0.5133, lr: 0.06822
iteration: 1, epoch: 60, best train: 0.662, best val: 0.5226, lr: 0.06731
iteration: 1, epoch: 61, best train: 0.673, best val: 0.5226, lr: 0.06638
iteration: 1, epoch: 62, best train: 0.673, best val: 0.5226, lr: 0.06545
iteration: 1, epoch: 63, best train: 0.673, best val: 0.5226, lr: 0.06451
iteration: 1, epoch: 64, best train: 0.673, best val: 0.5345, lr: 0.06357
iteration: 1, epoch: 65, best train: 0.673, best val: 0.5345, lr: 0.06262
iteration: 1, epoch: 66, best train: 0.673, best val: 0.5345, lr: 0.06167
iteration: 1, epoch: 67, best train: 0.673, best val: 0.5345, lr: 0.06072
iteration: 1, epoch: 68, best train: 0.673, best val: 0.5345, lr: 0.05975
iteration: 1, epoch: 69, best train: 0.677, best val: 0.5345, lr: 0.05879
iteration: 1, epoch: 70, best train: 0.695, best val: 0.5345, lr: 0.05782
iteration: 1, epoch: 71, best train: 0.695, best val: 0.5345, lr: 0.05685
iteration: 1, epoch: 72, best train: 0.704, best val: 0.5345, lr: 0.05588
iteration: 1, epoch: 73, best train: 0.704, best val: 0.5345, lr: 0.0549
iteration: 1, epoch: 74, best train: 0.704, best val: 0.5345, lr: 0.05392
iteration: 1, epoch: 75, best train: 0.704, best val: 0.5345, lr: 0.05294
iteration: 1, epoch: 76, best train: 0.713, best val: 0.5526, lr: 0.05196
iteration: 1, epoch: 77, best train: 0.738, best val: 0.5526, lr: 0.05098
iteration: 1, epoch: 78, best train: 0.738, best val: 0.5526, lr: 0.05
iteration: 1, epoch: 79, best train: 0.738, best val: 0.5526, lr: 0.04902
iteration: 1, epoch: 80, best train: 0.738, best val: 0.5594, lr: 0.04804
iteration: 1, epoch: 81, best train: 0.738, best val: 0.5594, lr: 0.04706
iteration: 1, epoch: 82, best train: 0.768, best val: 0.5625, lr: 0.04608
iteration: 1, epoch: 83, best train: 0.768, best val: 0.5635, lr: 0.0451
iteration: 1, epoch: 84, best train: 0.768, best val: 0.5635, lr: 0.04412
iteration: 1, epoch: 85, best train: 0.768, best val: 0.5635, lr: 0.04315
iteration: 1, epoch: 86, best train: 0.78, best val: 0.5635, lr: 0.04218
iteration: 1, epoch: 87, best train: 0.78, best val: 0.5635, lr: 0.04121
iteration: 1, epoch: 88, best train: 0.78, best val: 0.5635, lr: 0.04025
iteration: 1, epoch: 89, best train: 0.78, best val: 0.5635, lr: 0.03928
iteration: 1, epoch: 90, best train: 0.78, best val: 0.5761, lr: 0.03833
iteration: 1, epoch: 91, best train: 0.804, best val: 0.5761, lr: 0.03738
iteration: 1, epoch: 92, best train: 0.804, best val: 0.5761, lr: 0.03643
iteration: 1, epoch: 93, best train: 0.804, best val: 0.5761, lr: 0.03549
iteration: 1, epoch: 94, best train: 0.804, best val: 0.5761, lr: 0.03455
iteration: 1, epoch: 95, best train: 0.804, best val: 0.5889, lr: 0.03362
iteration: 1, epoch: 96, best train: 0.804, best val: 0.5889, lr: 0.03269
iteration: 1, epoch: 97, best train: 0.804, best val: 0.5889, lr: 0.03178
iteration: 1, epoch: 98, best train: 0.808, best val: 0.5889, lr: 0.03087
iteration: 1, epoch: 99, best train: 0.835, best val: 0.5889, lr: 0.02996
iteration: 1, epoch: 100, best train: 0.85, best val: 0.5889, lr: 0.02907
iteration: 1, epoch: 101, best train: 0.85, best val: 0.5889, lr: 0.02818
iteration: 1, epoch: 102, best train: 0.85, best val: 0.5889, lr: 0.0273
iteration: 1, epoch: 103, best train: 0.85, best val: 0.594, lr: 0.02643
iteration: 1, epoch: 104, best train: 0.85, best val: 0.594, lr: 0.02557
iteration: 1, epoch: 105, best train: 0.85, best val: 0.594, lr: 0.02472
iteration: 1, epoch: 106, best train: 0.85, best val: 0.594, lr: 0.02388
iteration: 1, epoch: 107, best train: 0.85, best val: 0.594, lr: 0.02304
iteration: 1, epoch: 108, best train: 0.853, best val: 0.5978, lr: 0.02222
iteration: 1, epoch: 109, best train: 0.853, best val: 0.5978, lr: 0.02141
iteration: 1, epoch: 110, best train: 0.853, best val: 0.5978, lr: 0.02061
iteration: 1, epoch: 111, best train: 0.853, best val: 0.5978, lr: 0.01982
iteration: 1, epoch: 112, best train: 0.853, best val: 0.5978, lr: 0.01905
iteration: 1, epoch: 113, best train: 0.853, best val: 0.5978, lr: 0.01828
iteration: 1, epoch: 114, best train: 0.869, best val: 0.5978, lr: 0.01753
iteration: 1, epoch: 115, best train: 0.869, best val: 0.5978, lr: 0.01679
iteration: 1, epoch: 116, best train: 0.869, best val: 0.5978, lr: 0.01606
iteration: 1, epoch: 117, best train: 0.869, best val: 0.5978, lr: 0.01535
iteration: 1, epoch: 118, best train: 0.869, best val: 0.5978, lr: 0.01464
iteration: 1, epoch: 119, best train: 0.869, best val: 0.5978, lr: 0.01396
iteration: 1, epoch: 120, best train: 0.87, best val: 0.5978, lr: 0.01328
iteration: 1, epoch: 121, best train: 0.878, best val: 0.6082, lr: 0.01262
iteration: 1, epoch: 122, best train: 0.878, best val: 0.6082, lr: 0.01198
iteration: 1, epoch: 123, best train: 0.878, best val: 0.6082, lr: 0.01135
iteration: 1, epoch: 124, best train: 0.878, best val: 0.6082, lr: 0.01073
iteration: 1, epoch: 125, best train: 0.878, best val: 0.6082, lr: 0.01013
iteration: 1, epoch: 126, best train: 0.878, best val: 0.6082, lr: 0.00955
iteration: 1, epoch: 127, best train: 0.88, best val: 0.6082, lr: 0.00898
iteration: 1, epoch: 128, best train: 0.88, best val: 0.6082, lr: 0.00843
iteration: 1, epoch: 129, best train: 0.893, best val: 0.6082, lr: 0.00789
iteration: 1, epoch: 130, best train: 0.893, best val: 0.6082, lr: 0.00737
iteration: 1, epoch: 131, best train: 0.909, best val: 0.6082, lr: 0.00686
iteration: 1, epoch: 132, best train: 0.909, best val: 0.6103, lr: 0.00638
iteration: 1, epoch: 133, best train: 0.909, best val: 0.6103, lr: 0.0059
iteration: 1, epoch: 134, best train: 0.909, best val: 0.6103, lr: 0.00545
iteration: 1, epoch: 135, best train: 0.909, best val: 0.6103, lr: 0.00501
iteration: 1, epoch: 136, best train: 0.909, best val: 0.6103, lr: 0.00459
iteration: 1, epoch: 137, best train: 0.909, best val: 0.6103, lr: 0.00419
iteration: 1, epoch: 138, best train: 0.924, best val: 0.6103, lr: 0.00381
iteration: 1, epoch: 139, best train: 0.924, best val: 0.6103, lr: 0.00344
iteration: 1, epoch: 140, best train: 0.924, best val: 0.613, lr: 0.00309
iteration: 1, epoch: 141, best train: 0.924, best val: 0.6163, lr: 0.00276
iteration: 1, epoch: 142, best train: 0.924, best val: 0.6163, lr: 0.00245
iteration: 1, epoch: 143, best train: 0.924, best val: 0.6163, lr: 0.00215
iteration: 1, epoch: 144, best train: 0.924, best val: 0.6163, lr: 0.00188
iteration: 1, epoch: 145, best train: 0.924, best val: 0.6163, lr: 0.00162
iteration: 1, epoch: 146, best train: 0.926, best val: 0.6163, lr: 0.00138
iteration: 1, epoch: 147, best train: 0.926, best val: 0.6163, lr: 0.00116
iteration: 1, epoch: 148, best train: 0.926, best val: 0.6163, lr: 0.00096
iteration: 1, epoch: 149, best train: 0.926, best val: 0.6163, lr: 0.00078
iteration: 1, epoch: 150, best train: 0.926, best val: 0.6163, lr: 0.00062
iteration: 1, epoch: 151, best train: 0.926, best val: 0.6163, lr: 0.00047
iteration: 1, epoch: 152, best train: 0.926, best val: 0.6163, lr: 0.00035
iteration: 1, epoch: 153, best train: 0.926, best val: 0.6163, lr: 0.00024
iteration: 1, epoch: 154, best train: 0.926, best val: 0.6163, lr: 0.00015
iteration: 1, epoch: 155, best train: 0.926, best val: 0.6163, lr: 9e-05
iteration: 1, epoch: 156, best train: 0.926, best val: 0.6163, lr: 4e-05
iteration: 1, epoch: 157, best train: 0.926, best val: 0.6163, lr: 1e-05
iteration: 1, epoch: 158, best train: 0.926, best val: 0.6163, lr: 0.0
iteration: 1, epoch: 159, best train: 0.926, best val: 0.6163, lr: 1e-05
------------------------ Checkpoint 7  ------------------------
pre_conv.0.weight_mask 	|	active =  1471 	|	total =  1728 	|	layerwise sparsity =  0.8512731481481481
layer1.0.conv1.weight_mask 	|	active =  23593 	|	total =  36864 	|	layerwise sparsity =  0.6400010850694444
layer1.0.conv2.weight_mask 	|	active =  23593 	|	total =  36864 	|	layerwise sparsity =  0.6400010850694444
layer1.1.conv1.weight_mask 	|	active =  23593 	|	total =  36864 	|	layerwise sparsity =  0.6400010850694444
layer1.1.conv2.weight_mask 	|	active =  23593 	|	total =  36864 	|	layerwise sparsity =  0.6400010850694444
layer2.0.conv1.weight_mask 	|	active =  47186 	|	total =  73728 	|	layerwise sparsity =  0.6400010850694444
layer2.0.conv2.weight_mask 	|	active =  94372 	|	total =  147456 	|	layerwise sparsity =  0.6400010850694444
layer2.0.shortcut.0.weight_mask 	|	active =  6975 	|	total =  8192 	|	layerwise sparsity =  0.8514404296875
layer2.1.conv1.weight_mask 	|	active =  94372 	|	total =  147456 	|	layerwise sparsity =  0.6400010850694444
layer2.1.conv2.weight_mask 	|	active =  94372 	|	total =  147456 	|	layerwise sparsity =  0.6400010850694444
layer3.0.conv1.weight_mask 	|	active =  188744 	|	total =  294912 	|	layerwise sparsity =  0.6400010850694444
layer3.0.conv2.weight_mask 	|	active =  348264 	|	total =  589824 	|	layerwise sparsity =  0.5904541015625
layer3.0.shortcut.0.weight_mask 	|	active =  20971 	|	total =  32768 	|	layerwise sparsity =  0.639984130859375
layer3.1.conv1.weight_mask 	|	active =  351083 	|	total =  589824 	|	layerwise sparsity =  0.5952334933810763
layer3.1.conv2.weight_mask 	|	active =  355912 	|	total =  589824 	|	layerwise sparsity =  0.6034206814236112
layer4.0.conv1.weight_mask 	|	active =  736076 	|	total =  1179648 	|	layerwise sparsity =  0.6239793565538194
layer4.0.conv2.weight_mask 	|	active =  1532162 	|	total =  2359296 	|	layerwise sparsity =  0.6494149102105035
layer4.0.shortcut.0.weight_mask 	|	active =  83886 	|	total =  131072 	|	layerwise sparsity =  0.6399993896484375
layer4.1.conv1.weight_mask 	|	active =  1549787 	|	total =  2359296 	|	layerwise sparsity =  0.6568853590223525
layer4.1.conv2.weight_mask 	|	active =  1563499 	|	total =  2359296 	|	layerwise sparsity =  0.662697262234158
------------------------ Checkpoint 8  ------------------------
best_val =  0.6163000000000001
------------------------ Checkpoint 9  ------------------------
pruning state: 2
remaining weight at start of iteration =  64.19352156134042
iteration: 2, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 2, epoch: 1, best train: 0.198, best val: 0.1441, lr: 0.09991
iteration: 2, epoch: 2, best train: 0.216, best val: 0.2216, lr: 0.09985
iteration: 2, epoch: 3, best train: 0.232, best val: 0.2853, lr: 0.09976
iteration: 2, epoch: 4, best train: 0.279, best val: 0.2982, lr: 0.09965
iteration: 2, epoch: 5, best train: 0.307, best val: 0.3117, lr: 0.09953
iteration: 2, epoch: 6, best train: 0.313, best val: 0.362, lr: 0.09938
iteration: 2, epoch: 7, best train: 0.347, best val: 0.362, lr: 0.09922
iteration: 2, epoch: 8, best train: 0.374, best val: 0.3925, lr: 0.09904
iteration: 2, epoch: 9, best train: 0.374, best val: 0.3925, lr: 0.09884
iteration: 2, epoch: 10, best train: 0.374, best val: 0.3925, lr: 0.09862
iteration: 2, epoch: 11, best train: 0.413, best val: 0.4123, lr: 0.09838
iteration: 2, epoch: 12, best train: 0.444, best val: 0.4123, lr: 0.09812
iteration: 2, epoch: 13, best train: 0.444, best val: 0.4123, lr: 0.09785
iteration: 2, epoch: 14, best train: 0.444, best val: 0.4222, lr: 0.09755
iteration: 2, epoch: 15, best train: 0.484, best val: 0.4253, lr: 0.09724
iteration: 2, epoch: 16, best train: 0.484, best val: 0.4253, lr: 0.09691
iteration: 2, epoch: 17, best train: 0.49, best val: 0.4532, lr: 0.09656
iteration: 2, epoch: 18, best train: 0.544, best val: 0.4661, lr: 0.09619
iteration: 2, epoch: 19, best train: 0.544, best val: 0.4661, lr: 0.09581
iteration: 2, epoch: 20, best train: 0.544, best val: 0.4661, lr: 0.09541
iteration: 2, epoch: 21, best train: 0.544, best val: 0.4802, lr: 0.09499
iteration: 2, epoch: 22, best train: 0.554, best val: 0.4802, lr: 0.09455
iteration: 2, epoch: 23, best train: 0.571, best val: 0.4802, lr: 0.0941
iteration: 2, epoch: 24, best train: 0.571, best val: 0.4802, lr: 0.09362
iteration: 2, epoch: 25, best train: 0.615, best val: 0.4802, lr: 0.09314
iteration: 2, epoch: 26, best train: 0.615, best val: 0.4802, lr: 0.09263
iteration: 2, epoch: 27, best train: 0.615, best val: 0.4802, lr: 0.09211
iteration: 2, epoch: 28, best train: 0.615, best val: 0.4802, lr: 0.09157
iteration: 2, epoch: 29, best train: 0.615, best val: 0.4973, lr: 0.09102
iteration: 2, epoch: 30, best train: 0.615, best val: 0.4973, lr: 0.09045
iteration: 2, epoch: 31, best train: 0.625, best val: 0.4973, lr: 0.08987
iteration: 2, epoch: 32, best train: 0.659, best val: 0.5265, lr: 0.08927
iteration: 2, epoch: 33, best train: 0.659, best val: 0.5265, lr: 0.08865
iteration: 2, epoch: 34, best train: 0.659, best val: 0.5265, lr: 0.08802
iteration: 2, epoch: 35, best train: 0.659, best val: 0.5265, lr: 0.08738
iteration: 2, epoch: 36, best train: 0.68, best val: 0.5265, lr: 0.08672
iteration: 2, epoch: 37, best train: 0.68, best val: 0.5265, lr: 0.08604
iteration: 2, epoch: 38, best train: 0.68, best val: 0.5265, lr: 0.08536
iteration: 2, epoch: 39, best train: 0.68, best val: 0.5265, lr: 0.08465
iteration: 2, epoch: 40, best train: 0.68, best val: 0.5265, lr: 0.08394
iteration: 2, epoch: 41, best train: 0.68, best val: 0.5277, lr: 0.08321
iteration: 2, epoch: 42, best train: 0.719, best val: 0.5277, lr: 0.08247
iteration: 2, epoch: 43, best train: 0.719, best val: 0.5277, lr: 0.08172
iteration: 2, epoch: 44, best train: 0.719, best val: 0.5277, lr: 0.08095
iteration: 2, epoch: 45, best train: 0.719, best val: 0.541, lr: 0.08018
iteration: 2, epoch: 46, best train: 0.719, best val: 0.541, lr: 0.07939
iteration: 2, epoch: 47, best train: 0.719, best val: 0.541, lr: 0.07859
iteration: 2, epoch: 48, best train: 0.729, best val: 0.541, lr: 0.07778
iteration: 2, epoch: 49, best train: 0.729, best val: 0.541, lr: 0.07696
iteration: 2, epoch: 50, best train: 0.729, best val: 0.5457, lr: 0.07612
iteration: 2, epoch: 51, best train: 0.736, best val: 0.5457, lr: 0.07528
iteration: 2, epoch: 52, best train: 0.736, best val: 0.5457, lr: 0.07443
iteration: 2, epoch: 53, best train: 0.761, best val: 0.5457, lr: 0.07357
iteration: 2, epoch: 54, best train: 0.761, best val: 0.5483, lr: 0.0727
iteration: 2, epoch: 55, best train: 0.773, best val: 0.5483, lr: 0.07182
iteration: 2, epoch: 56, best train: 0.773, best val: 0.5663, lr: 0.07093
iteration: 2, epoch: 57, best train: 0.773, best val: 0.5663, lr: 0.07004
iteration: 2, epoch: 58, best train: 0.773, best val: 0.5663, lr: 0.06913
iteration: 2, epoch: 59, best train: 0.779, best val: 0.5663, lr: 0.06822
iteration: 2, epoch: 60, best train: 0.779, best val: 0.5663, lr: 0.06731
iteration: 2, epoch: 61, best train: 0.779, best val: 0.5663, lr: 0.06638
iteration: 2, epoch: 62, best train: 0.779, best val: 0.5663, lr: 0.06545
iteration: 2, epoch: 63, best train: 0.825, best val: 0.5663, lr: 0.06451
iteration: 2, epoch: 64, best train: 0.825, best val: 0.5663, lr: 0.06357
iteration: 2, epoch: 65, best train: 0.825, best val: 0.5663, lr: 0.06262
iteration: 2, epoch: 66, best train: 0.825, best val: 0.5663, lr: 0.06167
iteration: 2, epoch: 67, best train: 0.825, best val: 0.5663, lr: 0.06072
iteration: 2, epoch: 68, best train: 0.825, best val: 0.5663, lr: 0.05975
iteration: 2, epoch: 69, best train: 0.825, best val: 0.5663, lr: 0.05879
iteration: 2, epoch: 70, best train: 0.825, best val: 0.5857, lr: 0.05782
iteration: 2, epoch: 71, best train: 0.827, best val: 0.5875, lr: 0.05685
iteration: 2, epoch: 72, best train: 0.842, best val: 0.5875, lr: 0.05588
iteration: 2, epoch: 73, best train: 0.842, best val: 0.5875, lr: 0.0549
iteration: 2, epoch: 74, best train: 0.842, best val: 0.5875, lr: 0.05392
iteration: 2, epoch: 75, best train: 0.842, best val: 0.5875, lr: 0.05294
iteration: 2, epoch: 76, best train: 0.842, best val: 0.5875, lr: 0.05196
iteration: 2, epoch: 77, best train: 0.843, best val: 0.5875, lr: 0.05098
iteration: 2, epoch: 78, best train: 0.843, best val: 0.5875, lr: 0.05
iteration: 2, epoch: 79, best train: 0.846, best val: 0.5875, lr: 0.04902
iteration: 2, epoch: 80, best train: 0.846, best val: 0.5875, lr: 0.04804
iteration: 2, epoch: 81, best train: 0.846, best val: 0.5875, lr: 0.04706
iteration: 2, epoch: 82, best train: 0.848, best val: 0.5879, lr: 0.04608
iteration: 2, epoch: 83, best train: 0.848, best val: 0.5922, lr: 0.0451
iteration: 2, epoch: 84, best train: 0.85, best val: 0.5947, lr: 0.04412
iteration: 2, epoch: 85, best train: 0.863, best val: 0.5947, lr: 0.04315
iteration: 2, epoch: 86, best train: 0.863, best val: 0.5947, lr: 0.04218
iteration: 2, epoch: 87, best train: 0.863, best val: 0.5947, lr: 0.04121
iteration: 2, epoch: 88, best train: 0.863, best val: 0.5947, lr: 0.04025
iteration: 2, epoch: 89, best train: 0.863, best val: 0.5947, lr: 0.03928
iteration: 2, epoch: 90, best train: 0.87, best val: 0.6005, lr: 0.03833
iteration: 2, epoch: 91, best train: 0.87, best val: 0.6077, lr: 0.03738
iteration: 2, epoch: 92, best train: 0.892, best val: 0.6077, lr: 0.03643
iteration: 2, epoch: 93, best train: 0.892, best val: 0.62, lr: 0.03549
iteration: 2, epoch: 94, best train: 0.892, best val: 0.62, lr: 0.03455
iteration: 2, epoch: 95, best train: 0.893, best val: 0.62, lr: 0.03362
iteration: 2, epoch: 96, best train: 0.893, best val: 0.62, lr: 0.03269
iteration: 2, epoch: 97, best train: 0.893, best val: 0.62, lr: 0.03178
iteration: 2, epoch: 98, best train: 0.893, best val: 0.62, lr: 0.03087
iteration: 2, epoch: 99, best train: 0.893, best val: 0.62, lr: 0.02996
iteration: 2, epoch: 100, best train: 0.893, best val: 0.62, lr: 0.02907
iteration: 2, epoch: 101, best train: 0.896, best val: 0.62, lr: 0.02818
iteration: 2, epoch: 102, best train: 0.896, best val: 0.62, lr: 0.0273
iteration: 2, epoch: 103, best train: 0.896, best val: 0.62, lr: 0.02643
iteration: 2, epoch: 104, best train: 0.903, best val: 0.62, lr: 0.02557
iteration: 2, epoch: 105, best train: 0.903, best val: 0.62, lr: 0.02472
iteration: 2, epoch: 106, best train: 0.903, best val: 0.62, lr: 0.02388
iteration: 2, epoch: 107, best train: 0.903, best val: 0.62, lr: 0.02304
iteration: 2, epoch: 108, best train: 0.903, best val: 0.62, lr: 0.02222
iteration: 2, epoch: 109, best train: 0.903, best val: 0.62, lr: 0.02141
iteration: 2, epoch: 110, best train: 0.925, best val: 0.62, lr: 0.02061
iteration: 2, epoch: 111, best train: 0.925, best val: 0.62, lr: 0.01982
iteration: 2, epoch: 112, best train: 0.925, best val: 0.62, lr: 0.01905
iteration: 2, epoch: 113, best train: 0.925, best val: 0.62, lr: 0.01828
iteration: 2, epoch: 114, best train: 0.925, best val: 0.6209, lr: 0.01753
iteration: 2, epoch: 115, best train: 0.93, best val: 0.6209, lr: 0.01679
iteration: 2, epoch: 116, best train: 0.93, best val: 0.6218, lr: 0.01606
iteration: 2, epoch: 117, best train: 0.93, best val: 0.6243, lr: 0.01535
iteration: 2, epoch: 118, best train: 0.93, best val: 0.6243, lr: 0.01464
iteration: 2, epoch: 119, best train: 0.942, best val: 0.6247, lr: 0.01396
iteration: 2, epoch: 120, best train: 0.942, best val: 0.6315, lr: 0.01328
iteration: 2, epoch: 121, best train: 0.942, best val: 0.6315, lr: 0.01262
iteration: 2, epoch: 122, best train: 0.942, best val: 0.6315, lr: 0.01198
iteration: 2, epoch: 123, best train: 0.942, best val: 0.6315, lr: 0.01135
iteration: 2, epoch: 124, best train: 0.942, best val: 0.6339, lr: 0.01073
iteration: 2, epoch: 125, best train: 0.942, best val: 0.635, lr: 0.01013
iteration: 2, epoch: 126, best train: 0.942, best val: 0.635, lr: 0.00955
iteration: 2, epoch: 127, best train: 0.942, best val: 0.635, lr: 0.00898
iteration: 2, epoch: 128, best train: 0.942, best val: 0.6369, lr: 0.00843
iteration: 2, epoch: 129, best train: 0.942, best val: 0.6375, lr: 0.00789
iteration: 2, epoch: 130, best train: 0.942, best val: 0.6375, lr: 0.00737
iteration: 2, epoch: 131, best train: 0.942, best val: 0.6375, lr: 0.00686
iteration: 2, epoch: 132, best train: 0.942, best val: 0.6375, lr: 0.00638
iteration: 2, epoch: 133, best train: 0.942, best val: 0.6375, lr: 0.0059
iteration: 2, epoch: 134, best train: 0.942, best val: 0.6375, lr: 0.00545
iteration: 2, epoch: 135, best train: 0.942, best val: 0.6375, lr: 0.00501
iteration: 2, epoch: 136, best train: 0.942, best val: 0.6375, lr: 0.00459
iteration: 2, epoch: 137, best train: 0.942, best val: 0.6375, lr: 0.00419
iteration: 2, epoch: 138, best train: 0.942, best val: 0.6375, lr: 0.00381
iteration: 2, epoch: 139, best train: 0.942, best val: 0.6383, lr: 0.00344
iteration: 2, epoch: 140, best train: 0.942, best val: 0.6383, lr: 0.00309
iteration: 2, epoch: 141, best train: 0.942, best val: 0.6383, lr: 0.00276
iteration: 2, epoch: 142, best train: 0.942, best val: 0.6383, lr: 0.00245
iteration: 2, epoch: 143, best train: 0.948, best val: 0.6383, lr: 0.00215
iteration: 2, epoch: 144, best train: 0.948, best val: 0.6383, lr: 0.00188
iteration: 2, epoch: 145, best train: 0.948, best val: 0.6383, lr: 0.00162
iteration: 2, epoch: 146, best train: 0.948, best val: 0.6383, lr: 0.00138
iteration: 2, epoch: 147, best train: 0.948, best val: 0.6388, lr: 0.00116
iteration: 2, epoch: 148, best train: 0.948, best val: 0.6388, lr: 0.00096
iteration: 2, epoch: 149, best train: 0.948, best val: 0.6388, lr: 0.00078
iteration: 2, epoch: 150, best train: 0.948, best val: 0.6388, lr: 0.00062
iteration: 2, epoch: 151, best train: 0.948, best val: 0.6388, lr: 0.00047
iteration: 2, epoch: 152, best train: 0.952, best val: 0.6388, lr: 0.00035
iteration: 2, epoch: 153, best train: 0.952, best val: 0.6388, lr: 0.00024
iteration: 2, epoch: 154, best train: 0.952, best val: 0.6388, lr: 0.00015
iteration: 2, epoch: 155, best train: 0.952, best val: 0.6397, lr: 9e-05
iteration: 2, epoch: 156, best train: 0.952, best val: 0.64, lr: 4e-05
iteration: 2, epoch: 157, best train: 0.952, best val: 0.6401, lr: 1e-05
iteration: 2, epoch: 158, best train: 0.952, best val: 0.6401, lr: 0.0
iteration: 2, epoch: 159, best train: 0.952, best val: 0.6401, lr: 1e-05
------------------------ Checkpoint 10  ------------------------
pre_conv.0.weight_mask 	|	active =  1357 	|	total =  1728 	|	layerwise sparsity =  0.7853009259259259
layer1.0.conv1.weight_mask 	|	active =  18874 	|	total =  36864 	|	layerwise sparsity =  0.5119900173611112
layer1.0.conv2.weight_mask 	|	active =  18874 	|	total =  36864 	|	layerwise sparsity =  0.5119900173611112
layer1.1.conv1.weight_mask 	|	active =  18874 	|	total =  36864 	|	layerwise sparsity =  0.5119900173611112
layer1.1.conv2.weight_mask 	|	active =  18874 	|	total =  36864 	|	layerwise sparsity =  0.5119900173611112
layer2.0.conv1.weight_mask 	|	active =  37749 	|	total =  73728 	|	layerwise sparsity =  0.5120035807291666
layer2.0.conv2.weight_mask 	|	active =  75498 	|	total =  147456 	|	layerwise sparsity =  0.5120035807291666
layer2.0.shortcut.0.weight_mask 	|	active =  6436 	|	total =  8192 	|	layerwise sparsity =  0.78564453125
layer2.1.conv1.weight_mask 	|	active =  75498 	|	total =  147456 	|	layerwise sparsity =  0.5120035807291666
layer2.1.conv2.weight_mask 	|	active =  75498 	|	total =  147456 	|	layerwise sparsity =  0.5120035807291666
layer3.0.conv1.weight_mask 	|	active =  150995 	|	total =  294912 	|	layerwise sparsity =  0.5120001898871528
layer3.0.conv2.weight_mask 	|	active =  267610 	|	total =  589824 	|	layerwise sparsity =  0.4537116156684028
layer3.0.shortcut.0.weight_mask 	|	active =  16777 	|	total =  32768 	|	layerwise sparsity =  0.511993408203125
layer3.1.conv1.weight_mask 	|	active =  270865 	|	total =  589824 	|	layerwise sparsity =  0.4592302110460069
layer3.1.conv2.weight_mask 	|	active =  276473 	|	total =  589824 	|	layerwise sparsity =  0.4687381320529514
layer4.0.conv1.weight_mask 	|	active =  581444 	|	total =  1179648 	|	layerwise sparsity =  0.4928961859809028
layer4.0.conv2.weight_mask 	|	active =  1234713 	|	total =  2359296 	|	layerwise sparsity =  0.523339589436849
layer4.0.shortcut.0.weight_mask 	|	active =  67109 	|	total =  131072 	|	layerwise sparsity =  0.5120010375976562
layer4.1.conv1.weight_mask 	|	active =  1256078 	|	total =  2359296 	|	layerwise sparsity =  0.532395256890191
layer4.1.conv2.weight_mask 	|	active =  1272785 	|	total =  2359296 	|	layerwise sparsity =  0.5394766065809462
------------------------ Checkpoint 11  ------------------------
best_val =  0.6407
------------------------ Checkpoint 12  ------------------------
pruning state: 3
remaining weight at start of iteration =  51.45856811651554
iteration: 3, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 3, epoch: 1, best train: 0.216, best val: 0.1712, lr: 0.09991
iteration: 3, epoch: 2, best train: 0.272, best val: 0.2633, lr: 0.09985
iteration: 3, epoch: 3, best train: 0.34, best val: 0.2793, lr: 0.09976
iteration: 3, epoch: 4, best train: 0.382, best val: 0.2813, lr: 0.09965
iteration: 3, epoch: 5, best train: 0.42, best val: 0.3573, lr: 0.09953
iteration: 3, epoch: 6, best train: 0.458, best val: 0.3573, lr: 0.09938
iteration: 3, epoch: 7, best train: 0.507, best val: 0.3777, lr: 0.09922
iteration: 3, epoch: 8, best train: 0.507, best val: 0.3777, lr: 0.09904
iteration: 3, epoch: 9, best train: 0.514, best val: 0.3777, lr: 0.09884
iteration: 3, epoch: 10, best train: 0.551, best val: 0.4594, lr: 0.09862
iteration: 3, epoch: 11, best train: 0.551, best val: 0.4594, lr: 0.09838
iteration: 3, epoch: 12, best train: 0.62, best val: 0.4594, lr: 0.09812
iteration: 3, epoch: 13, best train: 0.62, best val: 0.4594, lr: 0.09785
iteration: 3, epoch: 14, best train: 0.62, best val: 0.4594, lr: 0.09755
iteration: 3, epoch: 15, best train: 0.631, best val: 0.4594, lr: 0.09724
iteration: 3, epoch: 16, best train: 0.659, best val: 0.5028, lr: 0.09691
iteration: 3, epoch: 17, best train: 0.659, best val: 0.5028, lr: 0.09656
iteration: 3, epoch: 18, best train: 0.679, best val: 0.5419, lr: 0.09619
iteration: 3, epoch: 19, best train: 0.68, best val: 0.5526, lr: 0.09581
iteration: 3, epoch: 20, best train: 0.68, best val: 0.5526, lr: 0.09541
iteration: 3, epoch: 21, best train: 0.68, best val: 0.5526, lr: 0.09499
iteration: 3, epoch: 22, best train: 0.683, best val: 0.5526, lr: 0.09455
iteration: 3, epoch: 23, best train: 0.683, best val: 0.5526, lr: 0.0941
iteration: 3, epoch: 24, best train: 0.683, best val: 0.5526, lr: 0.09362
iteration: 3, epoch: 25, best train: 0.706, best val: 0.5526, lr: 0.09314
iteration: 3, epoch: 26, best train: 0.714, best val: 0.5526, lr: 0.09263
iteration: 3, epoch: 27, best train: 0.72, best val: 0.5526, lr: 0.09211
iteration: 3, epoch: 28, best train: 0.72, best val: 0.5526, lr: 0.09157
iteration: 3, epoch: 29, best train: 0.72, best val: 0.5526, lr: 0.09102
iteration: 3, epoch: 30, best train: 0.746, best val: 0.5526, lr: 0.09045
iteration: 3, epoch: 31, best train: 0.746, best val: 0.5526, lr: 0.08987
iteration: 3, epoch: 32, best train: 0.746, best val: 0.5526, lr: 0.08927
iteration: 3, epoch: 33, best train: 0.746, best val: 0.5526, lr: 0.08865
iteration: 3, epoch: 34, best train: 0.746, best val: 0.5526, lr: 0.08802
iteration: 3, epoch: 35, best train: 0.751, best val: 0.5537, lr: 0.08738
iteration: 3, epoch: 36, best train: 0.751, best val: 0.5593, lr: 0.08672
iteration: 3, epoch: 37, best train: 0.763, best val: 0.5593, lr: 0.08604
iteration: 3, epoch: 38, best train: 0.78, best val: 0.5593, lr: 0.08536
iteration: 3, epoch: 39, best train: 0.78, best val: 0.5593, lr: 0.08465
iteration: 3, epoch: 40, best train: 0.806, best val: 0.5593, lr: 0.08394
iteration: 3, epoch: 41, best train: 0.806, best val: 0.5765, lr: 0.08321
iteration: 3, epoch: 42, best train: 0.809, best val: 0.5765, lr: 0.08247
iteration: 3, epoch: 43, best train: 0.809, best val: 0.5765, lr: 0.08172
iteration: 3, epoch: 44, best train: 0.831, best val: 0.5765, lr: 0.08095
iteration: 3, epoch: 45, best train: 0.831, best val: 0.5765, lr: 0.08018
iteration: 3, epoch: 46, best train: 0.831, best val: 0.5765, lr: 0.07939
iteration: 3, epoch: 47, best train: 0.831, best val: 0.5765, lr: 0.07859
iteration: 3, epoch: 48, best train: 0.831, best val: 0.5765, lr: 0.07778
iteration: 3, epoch: 49, best train: 0.831, best val: 0.5765, lr: 0.07696
iteration: 3, epoch: 50, best train: 0.831, best val: 0.5765, lr: 0.07612
iteration: 3, epoch: 51, best train: 0.831, best val: 0.5765, lr: 0.07528
iteration: 3, epoch: 52, best train: 0.837, best val: 0.5842, lr: 0.07443
iteration: 3, epoch: 53, best train: 0.837, best val: 0.5842, lr: 0.07357
iteration: 3, epoch: 54, best train: 0.837, best val: 0.5842, lr: 0.0727
iteration: 3, epoch: 55, best train: 0.837, best val: 0.5842, lr: 0.07182
iteration: 3, epoch: 56, best train: 0.849, best val: 0.5842, lr: 0.07093
iteration: 3, epoch: 57, best train: 0.854, best val: 0.5889, lr: 0.07004
iteration: 3, epoch: 58, best train: 0.854, best val: 0.5889, lr: 0.06913
iteration: 3, epoch: 59, best train: 0.854, best val: 0.5889, lr: 0.06822
iteration: 3, epoch: 60, best train: 0.854, best val: 0.5924, lr: 0.06731
iteration: 3, epoch: 61, best train: 0.854, best val: 0.5924, lr: 0.06638
iteration: 3, epoch: 62, best train: 0.854, best val: 0.5924, lr: 0.06545
iteration: 3, epoch: 63, best train: 0.854, best val: 0.5924, lr: 0.06451
iteration: 3, epoch: 64, best train: 0.87, best val: 0.5924, lr: 0.06357
iteration: 3, epoch: 65, best train: 0.87, best val: 0.6008, lr: 0.06262
iteration: 3, epoch: 66, best train: 0.87, best val: 0.6008, lr: 0.06167
iteration: 3, epoch: 67, best train: 0.87, best val: 0.6008, lr: 0.06072
iteration: 3, epoch: 68, best train: 0.87, best val: 0.6008, lr: 0.05975
iteration: 3, epoch: 69, best train: 0.87, best val: 0.6008, lr: 0.05879
iteration: 3, epoch: 70, best train: 0.87, best val: 0.6008, lr: 0.05782
iteration: 3, epoch: 71, best train: 0.87, best val: 0.6008, lr: 0.05685
iteration: 3, epoch: 72, best train: 0.871, best val: 0.6008, lr: 0.05588
iteration: 3, epoch: 73, best train: 0.885, best val: 0.6008, lr: 0.0549
iteration: 3, epoch: 74, best train: 0.908, best val: 0.6008, lr: 0.05392
iteration: 3, epoch: 75, best train: 0.908, best val: 0.6008, lr: 0.05294
iteration: 3, epoch: 76, best train: 0.908, best val: 0.6008, lr: 0.05196
iteration: 3, epoch: 77, best train: 0.908, best val: 0.6008, lr: 0.05098
iteration: 3, epoch: 78, best train: 0.908, best val: 0.6159, lr: 0.05
iteration: 3, epoch: 79, best train: 0.908, best val: 0.6159, lr: 0.04902
iteration: 3, epoch: 80, best train: 0.908, best val: 0.6159, lr: 0.04804
iteration: 3, epoch: 81, best train: 0.908, best val: 0.6159, lr: 0.04706
iteration: 3, epoch: 82, best train: 0.908, best val: 0.6159, lr: 0.04608
iteration: 3, epoch: 83, best train: 0.908, best val: 0.6159, lr: 0.0451
iteration: 3, epoch: 84, best train: 0.908, best val: 0.6159, lr: 0.04412
iteration: 3, epoch: 85, best train: 0.908, best val: 0.6159, lr: 0.04315
iteration: 3, epoch: 86, best train: 0.908, best val: 0.6159, lr: 0.04218
iteration: 3, epoch: 87, best train: 0.908, best val: 0.6159, lr: 0.04121
iteration: 3, epoch: 88, best train: 0.908, best val: 0.6168, lr: 0.04025
iteration: 3, epoch: 89, best train: 0.913, best val: 0.6168, lr: 0.03928
iteration: 3, epoch: 90, best train: 0.913, best val: 0.6168, lr: 0.03833
iteration: 3, epoch: 91, best train: 0.919, best val: 0.6187, lr: 0.03738
iteration: 3, epoch: 92, best train: 0.919, best val: 0.6187, lr: 0.03643
iteration: 3, epoch: 93, best train: 0.919, best val: 0.6187, lr: 0.03549
iteration: 3, epoch: 94, best train: 0.919, best val: 0.6204, lr: 0.03455
iteration: 3, epoch: 95, best train: 0.919, best val: 0.6204, lr: 0.03362
iteration: 3, epoch: 96, best train: 0.919, best val: 0.6204, lr: 0.03269
iteration: 3, epoch: 97, best train: 0.919, best val: 0.6204, lr: 0.03178
iteration: 3, epoch: 98, best train: 0.919, best val: 0.6204, lr: 0.03087
iteration: 3, epoch: 99, best train: 0.919, best val: 0.6234, lr: 0.02996
iteration: 3, epoch: 100, best train: 0.919, best val: 0.6255, lr: 0.02907
iteration: 3, epoch: 101, best train: 0.919, best val: 0.6255, lr: 0.02818
iteration: 3, epoch: 102, best train: 0.922, best val: 0.6255, lr: 0.0273
iteration: 3, epoch: 103, best train: 0.922, best val: 0.6341, lr: 0.02643
iteration: 3, epoch: 104, best train: 0.928, best val: 0.6341, lr: 0.02557
iteration: 3, epoch: 105, best train: 0.928, best val: 0.6341, lr: 0.02472
iteration: 3, epoch: 106, best train: 0.928, best val: 0.6341, lr: 0.02388
iteration: 3, epoch: 107, best train: 0.928, best val: 0.6341, lr: 0.02304
iteration: 3, epoch: 108, best train: 0.928, best val: 0.6341, lr: 0.02222
iteration: 3, epoch: 109, best train: 0.928, best val: 0.6341, lr: 0.02141
iteration: 3, epoch: 110, best train: 0.941, best val: 0.6365, lr: 0.02061
iteration: 3, epoch: 111, best train: 0.941, best val: 0.6391, lr: 0.01982
iteration: 3, epoch: 112, best train: 0.941, best val: 0.6391, lr: 0.01905
iteration: 3, epoch: 113, best train: 0.945, best val: 0.6391, lr: 0.01828
iteration: 3, epoch: 114, best train: 0.945, best val: 0.6391, lr: 0.01753
iteration: 3, epoch: 115, best train: 0.945, best val: 0.6391, lr: 0.01679
iteration: 3, epoch: 116, best train: 0.945, best val: 0.6391, lr: 0.01606
iteration: 3, epoch: 117, best train: 0.945, best val: 0.6391, lr: 0.01535
iteration: 3, epoch: 118, best train: 0.945, best val: 0.6391, lr: 0.01464
iteration: 3, epoch: 119, best train: 0.945, best val: 0.6391, lr: 0.01396
iteration: 3, epoch: 120, best train: 0.945, best val: 0.6391, lr: 0.01328
iteration: 3, epoch: 121, best train: 0.945, best val: 0.6391, lr: 0.01262
iteration: 3, epoch: 122, best train: 0.945, best val: 0.6391, lr: 0.01198
iteration: 3, epoch: 123, best train: 0.945, best val: 0.6391, lr: 0.01135
iteration: 3, epoch: 124, best train: 0.945, best val: 0.6391, lr: 0.01073
iteration: 3, epoch: 125, best train: 0.945, best val: 0.6391, lr: 0.01013
iteration: 3, epoch: 126, best train: 0.948, best val: 0.6391, lr: 0.00955
iteration: 3, epoch: 127, best train: 0.948, best val: 0.6391, lr: 0.00898
iteration: 3, epoch: 128, best train: 0.948, best val: 0.6391, lr: 0.00843
iteration: 3, epoch: 129, best train: 0.948, best val: 0.6408, lr: 0.00789
iteration: 3, epoch: 130, best train: 0.948, best val: 0.6414, lr: 0.00737
iteration: 3, epoch: 131, best train: 0.948, best val: 0.6414, lr: 0.00686
iteration: 3, epoch: 132, best train: 0.948, best val: 0.6414, lr: 0.00638
iteration: 3, epoch: 133, best train: 0.948, best val: 0.6414, lr: 0.0059
iteration: 3, epoch: 134, best train: 0.948, best val: 0.6414, lr: 0.00545
iteration: 3, epoch: 135, best train: 0.949, best val: 0.6414, lr: 0.00501
iteration: 3, epoch: 136, best train: 0.949, best val: 0.6414, lr: 0.00459
iteration: 3, epoch: 137, best train: 0.949, best val: 0.6414, lr: 0.00419
iteration: 3, epoch: 138, best train: 0.949, best val: 0.6414, lr: 0.00381
iteration: 3, epoch: 139, best train: 0.949, best val: 0.6414, lr: 0.00344
iteration: 3, epoch: 140, best train: 0.949, best val: 0.6414, lr: 0.00309
iteration: 3, epoch: 141, best train: 0.95, best val: 0.6423, lr: 0.00276
iteration: 3, epoch: 142, best train: 0.95, best val: 0.6423, lr: 0.00245
iteration: 3, epoch: 143, best train: 0.95, best val: 0.6423, lr: 0.00215
iteration: 3, epoch: 144, best train: 0.95, best val: 0.6423, lr: 0.00188
iteration: 3, epoch: 145, best train: 0.95, best val: 0.6423, lr: 0.00162
iteration: 3, epoch: 146, best train: 0.95, best val: 0.6423, lr: 0.00138
iteration: 3, epoch: 147, best train: 0.952, best val: 0.6423, lr: 0.00116
iteration: 3, epoch: 148, best train: 0.952, best val: 0.6423, lr: 0.00096
iteration: 3, epoch: 149, best train: 0.952, best val: 0.6423, lr: 0.00078
iteration: 3, epoch: 150, best train: 0.952, best val: 0.6423, lr: 0.00062
iteration: 3, epoch: 151, best train: 0.952, best val: 0.6423, lr: 0.00047
iteration: 3, epoch: 152, best train: 0.952, best val: 0.6423, lr: 0.00035
iteration: 3, epoch: 153, best train: 0.955, best val: 0.6423, lr: 0.00024
iteration: 3, epoch: 154, best train: 0.955, best val: 0.6423, lr: 0.00015
iteration: 3, epoch: 155, best train: 0.955, best val: 0.6423, lr: 9e-05
iteration: 3, epoch: 156, best train: 0.962, best val: 0.6423, lr: 4e-05
iteration: 3, epoch: 157, best train: 0.962, best val: 0.6423, lr: 1e-05
iteration: 3, epoch: 158, best train: 0.962, best val: 0.6423, lr: 0.0
iteration: 3, epoch: 159, best train: 0.962, best val: 0.6423, lr: 1e-05
------------------------ Checkpoint 13  ------------------------
pre_conv.0.weight_mask 	|	active =  1252 	|	total =  1728 	|	layerwise sparsity =  0.7245370370370371
layer1.0.conv1.weight_mask 	|	active =  15099 	|	total =  36864 	|	layerwise sparsity =  0.4095865885416667
layer1.0.conv2.weight_mask 	|	active =  15099 	|	total =  36864 	|	layerwise sparsity =  0.4095865885416667
layer1.1.conv1.weight_mask 	|	active =  15099 	|	total =  36864 	|	layerwise sparsity =  0.4095865885416667
layer1.1.conv2.weight_mask 	|	active =  15099 	|	total =  36864 	|	layerwise sparsity =  0.4095865885416667
layer2.0.conv1.weight_mask 	|	active =  30199 	|	total =  73728 	|	layerwise sparsity =  0.4096001519097222
layer2.0.conv2.weight_mask 	|	active =  60398 	|	total =  147456 	|	layerwise sparsity =  0.4096001519097222
layer2.0.shortcut.0.weight_mask 	|	active =  5938 	|	total =  8192 	|	layerwise sparsity =  0.724853515625
layer2.1.conv1.weight_mask 	|	active =  60398 	|	total =  147456 	|	layerwise sparsity =  0.4096001519097222
layer2.1.conv2.weight_mask 	|	active =  60398 	|	total =  147456 	|	layerwise sparsity =  0.4096001519097222
layer3.0.conv1.weight_mask 	|	active =  120796 	|	total =  294912 	|	layerwise sparsity =  0.4096001519097222
layer3.0.conv2.weight_mask 	|	active =  205634 	|	total =  589824 	|	layerwise sparsity =  0.3486362033420139
layer3.0.shortcut.0.weight_mask 	|	active =  13422 	|	total =  32768 	|	layerwise sparsity =  0.40960693359375
layer3.1.conv1.weight_mask 	|	active =  208976 	|	total =  589824 	|	layerwise sparsity =  0.3543023003472222
layer3.1.conv2.weight_mask 	|	active =  214764 	|	total =  589824 	|	layerwise sparsity =  0.3641153971354167
layer4.0.conv1.weight_mask 	|	active =  459297 	|	total =  1179648 	|	layerwise sparsity =  0.38935089111328125
layer4.0.conv2.weight_mask 	|	active =  995010 	|	total =  2359296 	|	layerwise sparsity =  0.42174021402994794
layer4.0.shortcut.0.weight_mask 	|	active =  53687 	|	total =  131072 	|	layerwise sparsity =  0.40959930419921875
layer4.1.conv1.weight_mask 	|	active =  1018032 	|	total =  2359296 	|	layerwise sparsity =  0.4314982096354167
layer4.1.conv2.weight_mask 	|	active =  1036126 	|	total =  2359296 	|	layerwise sparsity =  0.43916744656032985
------------------------ Checkpoint 14  ------------------------
best_val =  0.6423000000000001
------------------------ Checkpoint 15  ------------------------
pruning state: 4
remaining weight at start of iteration =  41.263798440609534
iteration: 4, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 4, epoch: 1, best train: 0.297, best val: 0.1766, lr: 0.09991
iteration: 4, epoch: 2, best train: 0.362, best val: 0.2707, lr: 0.09985
iteration: 4, epoch: 3, best train: 0.403, best val: 0.3594, lr: 0.09976
iteration: 4, epoch: 4, best train: 0.47, best val: 0.3594, lr: 0.09965
iteration: 4, epoch: 5, best train: 0.526, best val: 0.3811, lr: 0.09953
iteration: 4, epoch: 6, best train: 0.526, best val: 0.3811, lr: 0.09938
iteration: 4, epoch: 7, best train: 0.528, best val: 0.4726, lr: 0.09922
iteration: 4, epoch: 8, best train: 0.579, best val: 0.4726, lr: 0.09904
iteration: 4, epoch: 9, best train: 0.601, best val: 0.4726, lr: 0.09884
iteration: 4, epoch: 10, best train: 0.637, best val: 0.4726, lr: 0.09862
iteration: 4, epoch: 11, best train: 0.637, best val: 0.4762, lr: 0.09838
iteration: 4, epoch: 12, best train: 0.646, best val: 0.5008, lr: 0.09812
iteration: 4, epoch: 13, best train: 0.687, best val: 0.5195, lr: 0.09785
iteration: 4, epoch: 14, best train: 0.723, best val: 0.5195, lr: 0.09755
iteration: 4, epoch: 15, best train: 0.723, best val: 0.5195, lr: 0.09724
iteration: 4, epoch: 16, best train: 0.723, best val: 0.5195, lr: 0.09691
iteration: 4, epoch: 17, best train: 0.723, best val: 0.5424, lr: 0.09656
iteration: 4, epoch: 18, best train: 0.723, best val: 0.5424, lr: 0.09619
iteration: 4, epoch: 19, best train: 0.731, best val: 0.5424, lr: 0.09581
iteration: 4, epoch: 20, best train: 0.776, best val: 0.5424, lr: 0.09541
iteration: 4, epoch: 21, best train: 0.776, best val: 0.5424, lr: 0.09499
iteration: 4, epoch: 22, best train: 0.776, best val: 0.5424, lr: 0.09455
iteration: 4, epoch: 23, best train: 0.776, best val: 0.5424, lr: 0.0941
iteration: 4, epoch: 24, best train: 0.776, best val: 0.5424, lr: 0.09362
iteration: 4, epoch: 25, best train: 0.78, best val: 0.5537, lr: 0.09314
iteration: 4, epoch: 26, best train: 0.781, best val: 0.5537, lr: 0.09263
iteration: 4, epoch: 27, best train: 0.781, best val: 0.5611, lr: 0.09211
iteration: 4, epoch: 28, best train: 0.799, best val: 0.5611, lr: 0.09157
iteration: 4, epoch: 29, best train: 0.817, best val: 0.5611, lr: 0.09102
iteration: 4, epoch: 30, best train: 0.817, best val: 0.5611, lr: 0.09045
iteration: 4, epoch: 31, best train: 0.817, best val: 0.5611, lr: 0.08987
iteration: 4, epoch: 32, best train: 0.828, best val: 0.5611, lr: 0.08927
iteration: 4, epoch: 33, best train: 0.828, best val: 0.565, lr: 0.08865
iteration: 4, epoch: 34, best train: 0.828, best val: 0.565, lr: 0.08802
iteration: 4, epoch: 35, best train: 0.828, best val: 0.565, lr: 0.08738
iteration: 4, epoch: 36, best train: 0.828, best val: 0.5709, lr: 0.08672
iteration: 4, epoch: 37, best train: 0.828, best val: 0.5709, lr: 0.08604
iteration: 4, epoch: 38, best train: 0.828, best val: 0.5709, lr: 0.08536
iteration: 4, epoch: 39, best train: 0.828, best val: 0.5709, lr: 0.08465
iteration: 4, epoch: 40, best train: 0.829, best val: 0.5826, lr: 0.08394
iteration: 4, epoch: 41, best train: 0.848, best val: 0.5826, lr: 0.08321
iteration: 4, epoch: 42, best train: 0.848, best val: 0.5826, lr: 0.08247
iteration: 4, epoch: 43, best train: 0.848, best val: 0.5826, lr: 0.08172
iteration: 4, epoch: 44, best train: 0.848, best val: 0.5826, lr: 0.08095
iteration: 4, epoch: 45, best train: 0.862, best val: 0.5974, lr: 0.08018
iteration: 4, epoch: 46, best train: 0.862, best val: 0.5974, lr: 0.07939
iteration: 4, epoch: 47, best train: 0.862, best val: 0.5974, lr: 0.07859
iteration: 4, epoch: 48, best train: 0.862, best val: 0.5974, lr: 0.07778
iteration: 4, epoch: 49, best train: 0.862, best val: 0.5974, lr: 0.07696
iteration: 4, epoch: 50, best train: 0.862, best val: 0.5974, lr: 0.07612
iteration: 4, epoch: 51, best train: 0.862, best val: 0.6029, lr: 0.07528
iteration: 4, epoch: 52, best train: 0.864, best val: 0.6029, lr: 0.07443
iteration: 4, epoch: 53, best train: 0.864, best val: 0.6043, lr: 0.07357
iteration: 4, epoch: 54, best train: 0.864, best val: 0.6043, lr: 0.0727
iteration: 4, epoch: 55, best train: 0.864, best val: 0.6043, lr: 0.07182
iteration: 4, epoch: 56, best train: 0.864, best val: 0.6043, lr: 0.07093
iteration: 4, epoch: 57, best train: 0.864, best val: 0.6043, lr: 0.07004
iteration: 4, epoch: 58, best train: 0.883, best val: 0.6043, lr: 0.06913
iteration: 4, epoch: 59, best train: 0.883, best val: 0.6043, lr: 0.06822
iteration: 4, epoch: 60, best train: 0.883, best val: 0.6043, lr: 0.06731
iteration: 4, epoch: 61, best train: 0.891, best val: 0.6043, lr: 0.06638
iteration: 4, epoch: 62, best train: 0.891, best val: 0.6043, lr: 0.06545
iteration: 4, epoch: 63, best train: 0.893, best val: 0.6091, lr: 0.06451
iteration: 4, epoch: 64, best train: 0.906, best val: 0.6091, lr: 0.06357
iteration: 4, epoch: 65, best train: 0.906, best val: 0.6091, lr: 0.06262
iteration: 4, epoch: 66, best train: 0.906, best val: 0.6091, lr: 0.06167
iteration: 4, epoch: 67, best train: 0.906, best val: 0.6091, lr: 0.06072
iteration: 4, epoch: 68, best train: 0.906, best val: 0.6091, lr: 0.05975
iteration: 4, epoch: 69, best train: 0.906, best val: 0.6107, lr: 0.05879
iteration: 4, epoch: 70, best train: 0.906, best val: 0.6107, lr: 0.05782
iteration: 4, epoch: 71, best train: 0.906, best val: 0.6107, lr: 0.05685
iteration: 4, epoch: 72, best train: 0.909, best val: 0.6107, lr: 0.05588
iteration: 4, epoch: 73, best train: 0.91, best val: 0.6107, lr: 0.0549
iteration: 4, epoch: 74, best train: 0.911, best val: 0.6116, lr: 0.05392
iteration: 4, epoch: 75, best train: 0.911, best val: 0.6116, lr: 0.05294
iteration: 4, epoch: 76, best train: 0.911, best val: 0.6147, lr: 0.05196
iteration: 4, epoch: 77, best train: 0.917, best val: 0.6147, lr: 0.05098
iteration: 4, epoch: 78, best train: 0.917, best val: 0.6147, lr: 0.05
iteration: 4, epoch: 79, best train: 0.917, best val: 0.6161, lr: 0.04902
iteration: 4, epoch: 80, best train: 0.917, best val: 0.6161, lr: 0.04804
iteration: 4, epoch: 81, best train: 0.917, best val: 0.6161, lr: 0.04706
iteration: 4, epoch: 82, best train: 0.917, best val: 0.6161, lr: 0.04608
iteration: 4, epoch: 83, best train: 0.917, best val: 0.6161, lr: 0.0451
iteration: 4, epoch: 84, best train: 0.917, best val: 0.6177, lr: 0.04412
iteration: 4, epoch: 85, best train: 0.917, best val: 0.6177, lr: 0.04315
iteration: 4, epoch: 86, best train: 0.919, best val: 0.6177, lr: 0.04218
iteration: 4, epoch: 87, best train: 0.93, best val: 0.6177, lr: 0.04121
iteration: 4, epoch: 88, best train: 0.93, best val: 0.6177, lr: 0.04025
iteration: 4, epoch: 89, best train: 0.932, best val: 0.6177, lr: 0.03928
iteration: 4, epoch: 90, best train: 0.932, best val: 0.6202, lr: 0.03833
iteration: 4, epoch: 91, best train: 0.932, best val: 0.6202, lr: 0.03738
iteration: 4, epoch: 92, best train: 0.932, best val: 0.6209, lr: 0.03643
iteration: 4, epoch: 93, best train: 0.932, best val: 0.6302, lr: 0.03549
iteration: 4, epoch: 94, best train: 0.932, best val: 0.6302, lr: 0.03455
iteration: 4, epoch: 95, best train: 0.932, best val: 0.6302, lr: 0.03362
iteration: 4, epoch: 96, best train: 0.932, best val: 0.6302, lr: 0.03269
iteration: 4, epoch: 97, best train: 0.932, best val: 0.6336, lr: 0.03178
iteration: 4, epoch: 98, best train: 0.94, best val: 0.6336, lr: 0.03087
iteration: 4, epoch: 99, best train: 0.94, best val: 0.6336, lr: 0.02996
iteration: 4, epoch: 100, best train: 0.94, best val: 0.6347, lr: 0.02907
iteration: 4, epoch: 101, best train: 0.94, best val: 0.6347, lr: 0.02818
iteration: 4, epoch: 102, best train: 0.94, best val: 0.6406, lr: 0.0273
iteration: 4, epoch: 103, best train: 0.94, best val: 0.6406, lr: 0.02643
iteration: 4, epoch: 104, best train: 0.94, best val: 0.6406, lr: 0.02557
iteration: 4, epoch: 105, best train: 0.94, best val: 0.6406, lr: 0.02472
iteration: 4, epoch: 106, best train: 0.94, best val: 0.6406, lr: 0.02388
iteration: 4, epoch: 107, best train: 0.94, best val: 0.6406, lr: 0.02304
iteration: 4, epoch: 108, best train: 0.94, best val: 0.6406, lr: 0.02222
iteration: 4, epoch: 109, best train: 0.94, best val: 0.6406, lr: 0.02141
iteration: 4, epoch: 110, best train: 0.94, best val: 0.6406, lr: 0.02061
iteration: 4, epoch: 111, best train: 0.94, best val: 0.6406, lr: 0.01982
iteration: 4, epoch: 112, best train: 0.946, best val: 0.6406, lr: 0.01905
iteration: 4, epoch: 113, best train: 0.946, best val: 0.6406, lr: 0.01828
iteration: 4, epoch: 114, best train: 0.946, best val: 0.6406, lr: 0.01753
iteration: 4, epoch: 115, best train: 0.954, best val: 0.6406, lr: 0.01679
iteration: 4, epoch: 116, best train: 0.954, best val: 0.6406, lr: 0.01606
iteration: 4, epoch: 117, best train: 0.954, best val: 0.6415, lr: 0.01535
iteration: 4, epoch: 118, best train: 0.954, best val: 0.6415, lr: 0.01464
iteration: 4, epoch: 119, best train: 0.954, best val: 0.6415, lr: 0.01396
iteration: 4, epoch: 120, best train: 0.954, best val: 0.6427, lr: 0.01328
iteration: 4, epoch: 121, best train: 0.954, best val: 0.6477, lr: 0.01262
iteration: 4, epoch: 122, best train: 0.957, best val: 0.6477, lr: 0.01198
iteration: 4, epoch: 123, best train: 0.957, best val: 0.6477, lr: 0.01135
iteration: 4, epoch: 124, best train: 0.957, best val: 0.6477, lr: 0.01073
iteration: 4, epoch: 125, best train: 0.957, best val: 0.6477, lr: 0.01013
iteration: 4, epoch: 126, best train: 0.957, best val: 0.6477, lr: 0.00955
iteration: 4, epoch: 127, best train: 0.957, best val: 0.6477, lr: 0.00898
iteration: 4, epoch: 128, best train: 0.957, best val: 0.6477, lr: 0.00843
iteration: 4, epoch: 129, best train: 0.957, best val: 0.6481, lr: 0.00789
iteration: 4, epoch: 130, best train: 0.957, best val: 0.6492, lr: 0.00737
iteration: 4, epoch: 131, best train: 0.957, best val: 0.6492, lr: 0.00686
iteration: 4, epoch: 132, best train: 0.957, best val: 0.6492, lr: 0.00638
iteration: 4, epoch: 133, best train: 0.957, best val: 0.6492, lr: 0.0059
iteration: 4, epoch: 134, best train: 0.957, best val: 0.6492, lr: 0.00545
iteration: 4, epoch: 135, best train: 0.957, best val: 0.6492, lr: 0.00501
iteration: 4, epoch: 136, best train: 0.957, best val: 0.6492, lr: 0.00459
iteration: 4, epoch: 137, best train: 0.957, best val: 0.6492, lr: 0.00419
iteration: 4, epoch: 138, best train: 0.959, best val: 0.6492, lr: 0.00381
iteration: 4, epoch: 139, best train: 0.959, best val: 0.6492, lr: 0.00344
iteration: 4, epoch: 140, best train: 0.959, best val: 0.6492, lr: 0.00309
iteration: 4, epoch: 141, best train: 0.959, best val: 0.6492, lr: 0.00276
iteration: 4, epoch: 142, best train: 0.959, best val: 0.6492, lr: 0.00245
iteration: 4, epoch: 143, best train: 0.959, best val: 0.6492, lr: 0.00215
iteration: 4, epoch: 144, best train: 0.967, best val: 0.6492, lr: 0.00188
iteration: 4, epoch: 145, best train: 0.967, best val: 0.6492, lr: 0.00162
iteration: 4, epoch: 146, best train: 0.967, best val: 0.6492, lr: 0.00138
iteration: 4, epoch: 147, best train: 0.967, best val: 0.6492, lr: 0.00116
iteration: 4, epoch: 148, best train: 0.967, best val: 0.6492, lr: 0.00096
iteration: 4, epoch: 149, best train: 0.967, best val: 0.6492, lr: 0.00078
iteration: 4, epoch: 150, best train: 0.967, best val: 0.6492, lr: 0.00062
iteration: 4, epoch: 151, best train: 0.967, best val: 0.6492, lr: 0.00047
iteration: 4, epoch: 152, best train: 0.967, best val: 0.6492, lr: 0.00035
iteration: 4, epoch: 153, best train: 0.967, best val: 0.6492, lr: 0.00024
iteration: 4, epoch: 154, best train: 0.967, best val: 0.6492, lr: 0.00015
iteration: 4, epoch: 155, best train: 0.967, best val: 0.6492, lr: 9e-05
iteration: 4, epoch: 156, best train: 0.967, best val: 0.6492, lr: 4e-05
iteration: 4, epoch: 157, best train: 0.967, best val: 0.6496, lr: 1e-05
iteration: 4, epoch: 158, best train: 0.967, best val: 0.6496, lr: 0.0
iteration: 4, epoch: 159, best train: 0.967, best val: 0.6496, lr: 1e-05
------------------------ Checkpoint 16  ------------------------
pre_conv.0.weight_mask 	|	active =  1155 	|	total =  1728 	|	layerwise sparsity =  0.6684027777777778
layer1.0.conv1.weight_mask 	|	active =  12079 	|	total =  36864 	|	layerwise sparsity =  0.3276638454861111
layer1.0.conv2.weight_mask 	|	active =  12079 	|	total =  36864 	|	layerwise sparsity =  0.3276638454861111
layer1.1.conv1.weight_mask 	|	active =  12079 	|	total =  36864 	|	layerwise sparsity =  0.3276638454861111
layer1.1.conv2.weight_mask 	|	active =  12079 	|	total =  36864 	|	layerwise sparsity =  0.3276638454861111
layer2.0.conv1.weight_mask 	|	active =  24159 	|	total =  73728 	|	layerwise sparsity =  0.3276774088541667
layer2.0.conv2.weight_mask 	|	active =  48318 	|	total =  147456 	|	layerwise sparsity =  0.3276774088541667
layer2.0.shortcut.0.weight_mask 	|	active =  5479 	|	total =  8192 	|	layerwise sparsity =  0.6688232421875
layer2.1.conv1.weight_mask 	|	active =  48318 	|	total =  147456 	|	layerwise sparsity =  0.3276774088541667
layer2.1.conv2.weight_mask 	|	active =  48318 	|	total =  147456 	|	layerwise sparsity =  0.3276774088541667
layer3.0.conv1.weight_mask 	|	active =  96637 	|	total =  294912 	|	layerwise sparsity =  0.3276807996961806
layer3.0.conv2.weight_mask 	|	active =  158011 	|	total =  589824 	|	layerwise sparsity =  0.2678951687282986
layer3.0.shortcut.0.weight_mask 	|	active =  10738 	|	total =  32768 	|	layerwise sparsity =  0.32769775390625
layer3.1.conv1.weight_mask 	|	active =  161228 	|	total =  589824 	|	layerwise sparsity =  0.2733493381076389
layer3.1.conv2.weight_mask 	|	active =  166829 	|	total =  589824 	|	layerwise sparsity =  0.2828453911675347
layer4.0.conv1.weight_mask 	|	active =  362810 	|	total =  1179648 	|	layerwise sparsity =  0.3075578477647569
layer4.0.conv2.weight_mask 	|	active =  801842 	|	total =  2359296 	|	layerwise sparsity =  0.33986494276258683
layer4.0.shortcut.0.weight_mask 	|	active =  42950 	|	total =  131072 	|	layerwise sparsity =  0.3276824951171875
layer4.1.conv1.weight_mask 	|	active =  825099 	|	total =  2359296 	|	layerwise sparsity =  0.34972254435221356
layer4.1.conv2.weight_mask 	|	active =  843471 	|	total =  2359296 	|	layerwise sparsity =  0.3575096130371094
------------------------ Checkpoint 17  ------------------------
best_val =  0.6496
------------------------ Checkpoint 18  ------------------------
pruning state: 5
remaining weight at start of iteration =  33.09975095060306
iteration: 5, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 5, epoch: 1, best train: 0.36, best val: 0.1346, lr: 0.09991
iteration: 5, epoch: 2, best train: 0.468, best val: 0.1542, lr: 0.09985
iteration: 5, epoch: 3, best train: 0.493, best val: 0.3826, lr: 0.09976
iteration: 5, epoch: 4, best train: 0.542, best val: 0.4811, lr: 0.09965
iteration: 5, epoch: 5, best train: 0.609, best val: 0.4811, lr: 0.09953
iteration: 5, epoch: 6, best train: 0.636, best val: 0.4811, lr: 0.09938
iteration: 5, epoch: 7, best train: 0.66, best val: 0.4972, lr: 0.09922
iteration: 5, epoch: 8, best train: 0.66, best val: 0.4972, lr: 0.09904
iteration: 5, epoch: 9, best train: 0.672, best val: 0.4972, lr: 0.09884
iteration: 5, epoch: 10, best train: 0.674, best val: 0.4972, lr: 0.09862
iteration: 5, epoch: 11, best train: 0.723, best val: 0.5447, lr: 0.09838
iteration: 5, epoch: 12, best train: 0.749, best val: 0.5447, lr: 0.09812
iteration: 5, epoch: 13, best train: 0.756, best val: 0.5447, lr: 0.09785
iteration: 5, epoch: 14, best train: 0.772, best val: 0.5597, lr: 0.09755
iteration: 5, epoch: 15, best train: 0.775, best val: 0.5618, lr: 0.09724
iteration: 5, epoch: 16, best train: 0.775, best val: 0.5618, lr: 0.09691
iteration: 5, epoch: 17, best train: 0.775, best val: 0.5618, lr: 0.09656
iteration: 5, epoch: 18, best train: 0.795, best val: 0.5618, lr: 0.09619
iteration: 5, epoch: 19, best train: 0.795, best val: 0.5618, lr: 0.09581
iteration: 5, epoch: 20, best train: 0.797, best val: 0.5631, lr: 0.09541
iteration: 5, epoch: 21, best train: 0.806, best val: 0.5631, lr: 0.09499
iteration: 5, epoch: 22, best train: 0.806, best val: 0.5631, lr: 0.09455
iteration: 5, epoch: 23, best train: 0.806, best val: 0.5631, lr: 0.0941
iteration: 5, epoch: 24, best train: 0.806, best val: 0.5631, lr: 0.09362
iteration: 5, epoch: 25, best train: 0.82, best val: 0.5631, lr: 0.09314
iteration: 5, epoch: 26, best train: 0.824, best val: 0.5895, lr: 0.09263
iteration: 5, epoch: 27, best train: 0.824, best val: 0.5895, lr: 0.09211
iteration: 5, epoch: 28, best train: 0.835, best val: 0.5895, lr: 0.09157
iteration: 5, epoch: 29, best train: 0.857, best val: 0.5895, lr: 0.09102
iteration: 5, epoch: 30, best train: 0.857, best val: 0.5895, lr: 0.09045
iteration: 5, epoch: 31, best train: 0.857, best val: 0.5895, lr: 0.08987
iteration: 5, epoch: 32, best train: 0.857, best val: 0.5895, lr: 0.08927
iteration: 5, epoch: 33, best train: 0.857, best val: 0.5895, lr: 0.08865
iteration: 5, epoch: 34, best train: 0.857, best val: 0.5895, lr: 0.08802
iteration: 5, epoch: 35, best train: 0.857, best val: 0.5895, lr: 0.08738
iteration: 5, epoch: 36, best train: 0.857, best val: 0.5895, lr: 0.08672
iteration: 5, epoch: 37, best train: 0.857, best val: 0.5895, lr: 0.08604
iteration: 5, epoch: 38, best train: 0.861, best val: 0.5895, lr: 0.08536
iteration: 5, epoch: 39, best train: 0.862, best val: 0.6111, lr: 0.08465
iteration: 5, epoch: 40, best train: 0.862, best val: 0.6111, lr: 0.08394
iteration: 5, epoch: 41, best train: 0.862, best val: 0.6111, lr: 0.08321
iteration: 5, epoch: 42, best train: 0.865, best val: 0.6111, lr: 0.08247
iteration: 5, epoch: 43, best train: 0.865, best val: 0.6111, lr: 0.08172
iteration: 5, epoch: 44, best train: 0.875, best val: 0.6111, lr: 0.08095
iteration: 5, epoch: 45, best train: 0.875, best val: 0.6111, lr: 0.08018
iteration: 5, epoch: 46, best train: 0.875, best val: 0.6111, lr: 0.07939
iteration: 5, epoch: 47, best train: 0.882, best val: 0.6111, lr: 0.07859
iteration: 5, epoch: 48, best train: 0.882, best val: 0.6111, lr: 0.07778
iteration: 5, epoch: 49, best train: 0.894, best val: 0.6111, lr: 0.07696
iteration: 5, epoch: 50, best train: 0.894, best val: 0.6111, lr: 0.07612
iteration: 5, epoch: 51, best train: 0.894, best val: 0.6111, lr: 0.07528
iteration: 5, epoch: 52, best train: 0.894, best val: 0.6111, lr: 0.07443
iteration: 5, epoch: 53, best train: 0.9, best val: 0.6111, lr: 0.07357
iteration: 5, epoch: 54, best train: 0.9, best val: 0.6111, lr: 0.0727
iteration: 5, epoch: 55, best train: 0.9, best val: 0.6111, lr: 0.07182
iteration: 5, epoch: 56, best train: 0.9, best val: 0.6111, lr: 0.07093
iteration: 5, epoch: 57, best train: 0.9, best val: 0.6111, lr: 0.07004
iteration: 5, epoch: 58, best train: 0.904, best val: 0.6111, lr: 0.06913
iteration: 5, epoch: 59, best train: 0.904, best val: 0.6111, lr: 0.06822
iteration: 5, epoch: 60, best train: 0.904, best val: 0.6125, lr: 0.06731
iteration: 5, epoch: 61, best train: 0.904, best val: 0.6125, lr: 0.06638
iteration: 5, epoch: 62, best train: 0.908, best val: 0.6125, lr: 0.06545
iteration: 5, epoch: 63, best train: 0.908, best val: 0.6125, lr: 0.06451
iteration: 5, epoch: 64, best train: 0.908, best val: 0.6125, lr: 0.06357
iteration: 5, epoch: 65, best train: 0.912, best val: 0.6178, lr: 0.06262
iteration: 5, epoch: 66, best train: 0.918, best val: 0.6178, lr: 0.06167
iteration: 5, epoch: 67, best train: 0.918, best val: 0.6178, lr: 0.06072
iteration: 5, epoch: 68, best train: 0.918, best val: 0.6178, lr: 0.05975
iteration: 5, epoch: 69, best train: 0.918, best val: 0.6178, lr: 0.05879
iteration: 5, epoch: 70, best train: 0.918, best val: 0.6227, lr: 0.05782
iteration: 5, epoch: 71, best train: 0.918, best val: 0.6227, lr: 0.05685
iteration: 5, epoch: 72, best train: 0.918, best val: 0.634, lr: 0.05588
iteration: 5, epoch: 73, best train: 0.918, best val: 0.634, lr: 0.0549
iteration: 5, epoch: 74, best train: 0.918, best val: 0.634, lr: 0.05392
iteration: 5, epoch: 75, best train: 0.922, best val: 0.634, lr: 0.05294
iteration: 5, epoch: 76, best train: 0.922, best val: 0.634, lr: 0.05196
iteration: 5, epoch: 77, best train: 0.922, best val: 0.642, lr: 0.05098
iteration: 5, epoch: 78, best train: 0.932, best val: 0.642, lr: 0.05
iteration: 5, epoch: 79, best train: 0.932, best val: 0.642, lr: 0.04902
iteration: 5, epoch: 80, best train: 0.932, best val: 0.642, lr: 0.04804
iteration: 5, epoch: 81, best train: 0.932, best val: 0.642, lr: 0.04706
iteration: 5, epoch: 82, best train: 0.936, best val: 0.642, lr: 0.04608
iteration: 5, epoch: 83, best train: 0.938, best val: 0.642, lr: 0.0451
iteration: 5, epoch: 84, best train: 0.938, best val: 0.642, lr: 0.04412
iteration: 5, epoch: 85, best train: 0.938, best val: 0.642, lr: 0.04315
iteration: 5, epoch: 86, best train: 0.938, best val: 0.6449, lr: 0.04218
iteration: 5, epoch: 87, best train: 0.938, best val: 0.6449, lr: 0.04121
iteration: 5, epoch: 88, best train: 0.938, best val: 0.6449, lr: 0.04025
iteration: 5, epoch: 89, best train: 0.938, best val: 0.6449, lr: 0.03928
iteration: 5, epoch: 90, best train: 0.939, best val: 0.6449, lr: 0.03833
iteration: 5, epoch: 91, best train: 0.939, best val: 0.6449, lr: 0.03738
iteration: 5, epoch: 92, best train: 0.939, best val: 0.6449, lr: 0.03643
iteration: 5, epoch: 93, best train: 0.939, best val: 0.6449, lr: 0.03549
iteration: 5, epoch: 94, best train: 0.939, best val: 0.6449, lr: 0.03455
iteration: 5, epoch: 95, best train: 0.939, best val: 0.6449, lr: 0.03362
iteration: 5, epoch: 96, best train: 0.942, best val: 0.6449, lr: 0.03269
iteration: 5, epoch: 97, best train: 0.946, best val: 0.6449, lr: 0.03178
iteration: 5, epoch: 98, best train: 0.949, best val: 0.6449, lr: 0.03087
iteration: 5, epoch: 99, best train: 0.949, best val: 0.6449, lr: 0.02996
iteration: 5, epoch: 100, best train: 0.949, best val: 0.6449, lr: 0.02907
iteration: 5, epoch: 101, best train: 0.949, best val: 0.6449, lr: 0.02818
iteration: 5, epoch: 102, best train: 0.949, best val: 0.6449, lr: 0.0273
iteration: 5, epoch: 103, best train: 0.949, best val: 0.6475, lr: 0.02643
iteration: 5, epoch: 104, best train: 0.949, best val: 0.6534, lr: 0.02557
iteration: 5, epoch: 105, best train: 0.958, best val: 0.6543, lr: 0.02472
iteration: 5, epoch: 106, best train: 0.958, best val: 0.6543, lr: 0.02388
iteration: 5, epoch: 107, best train: 0.958, best val: 0.6543, lr: 0.02304
iteration: 5, epoch: 108, best train: 0.958, best val: 0.6543, lr: 0.02222
iteration: 5, epoch: 109, best train: 0.958, best val: 0.6543, lr: 0.02141
iteration: 5, epoch: 110, best train: 0.958, best val: 0.6543, lr: 0.02061
iteration: 5, epoch: 111, best train: 0.958, best val: 0.6543, lr: 0.01982
iteration: 5, epoch: 112, best train: 0.958, best val: 0.6543, lr: 0.01905
iteration: 5, epoch: 113, best train: 0.958, best val: 0.6543, lr: 0.01828
iteration: 5, epoch: 114, best train: 0.958, best val: 0.6543, lr: 0.01753
iteration: 5, epoch: 115, best train: 0.958, best val: 0.6543, lr: 0.01679
iteration: 5, epoch: 116, best train: 0.958, best val: 0.6543, lr: 0.01606
iteration: 5, epoch: 117, best train: 0.959, best val: 0.6543, lr: 0.01535
iteration: 5, epoch: 118, best train: 0.959, best val: 0.6543, lr: 0.01464
iteration: 5, epoch: 119, best train: 0.959, best val: 0.6543, lr: 0.01396
iteration: 5, epoch: 120, best train: 0.959, best val: 0.6543, lr: 0.01328
iteration: 5, epoch: 121, best train: 0.959, best val: 0.655, lr: 0.01262
iteration: 5, epoch: 122, best train: 0.963, best val: 0.655, lr: 0.01198
iteration: 5, epoch: 123, best train: 0.963, best val: 0.655, lr: 0.01135
iteration: 5, epoch: 124, best train: 0.963, best val: 0.6557, lr: 0.01073
iteration: 5, epoch: 125, best train: 0.963, best val: 0.656, lr: 0.01013
iteration: 5, epoch: 126, best train: 0.963, best val: 0.656, lr: 0.00955
iteration: 5, epoch: 127, best train: 0.963, best val: 0.656, lr: 0.00898
iteration: 5, epoch: 128, best train: 0.963, best val: 0.6568, lr: 0.00843
iteration: 5, epoch: 129, best train: 0.963, best val: 0.6568, lr: 0.00789
iteration: 5, epoch: 130, best train: 0.963, best val: 0.6581, lr: 0.00737
iteration: 5, epoch: 131, best train: 0.963, best val: 0.6581, lr: 0.00686
iteration: 5, epoch: 132, best train: 0.963, best val: 0.6581, lr: 0.00638
iteration: 5, epoch: 133, best train: 0.963, best val: 0.6581, lr: 0.0059
iteration: 5, epoch: 134, best train: 0.963, best val: 0.6581, lr: 0.00545
iteration: 5, epoch: 135, best train: 0.963, best val: 0.6581, lr: 0.00501
iteration: 5, epoch: 136, best train: 0.963, best val: 0.6581, lr: 0.00459
iteration: 5, epoch: 137, best train: 0.963, best val: 0.6581, lr: 0.00419
iteration: 5, epoch: 138, best train: 0.963, best val: 0.6581, lr: 0.00381
iteration: 5, epoch: 139, best train: 0.963, best val: 0.6581, lr: 0.00344
iteration: 5, epoch: 140, best train: 0.963, best val: 0.6581, lr: 0.00309
iteration: 5, epoch: 141, best train: 0.963, best val: 0.6581, lr: 0.00276
iteration: 5, epoch: 142, best train: 0.963, best val: 0.6581, lr: 0.00245
iteration: 5, epoch: 143, best train: 0.968, best val: 0.6581, lr: 0.00215
iteration: 5, epoch: 144, best train: 0.972, best val: 0.6581, lr: 0.00188
iteration: 5, epoch: 145, best train: 0.972, best val: 0.6581, lr: 0.00162
iteration: 5, epoch: 146, best train: 0.972, best val: 0.6581, lr: 0.00138
iteration: 5, epoch: 147, best train: 0.972, best val: 0.6581, lr: 0.00116
iteration: 5, epoch: 148, best train: 0.972, best val: 0.6581, lr: 0.00096
iteration: 5, epoch: 149, best train: 0.972, best val: 0.6581, lr: 0.00078
iteration: 5, epoch: 150, best train: 0.972, best val: 0.6583, lr: 0.00062
iteration: 5, epoch: 151, best train: 0.972, best val: 0.6583, lr: 0.00047
iteration: 5, epoch: 152, best train: 0.972, best val: 0.6583, lr: 0.00035
iteration: 5, epoch: 153, best train: 0.972, best val: 0.6583, lr: 0.00024
iteration: 5, epoch: 154, best train: 0.972, best val: 0.6583, lr: 0.00015
iteration: 5, epoch: 155, best train: 0.972, best val: 0.6583, lr: 9e-05
iteration: 5, epoch: 156, best train: 0.972, best val: 0.6583, lr: 4e-05
iteration: 5, epoch: 157, best train: 0.972, best val: 0.6583, lr: 1e-05
iteration: 5, epoch: 158, best train: 0.972, best val: 0.6583, lr: 0.0
iteration: 5, epoch: 159, best train: 0.972, best val: 0.6583, lr: 1e-05
------------------------ Checkpoint 19  ------------------------
pre_conv.0.weight_mask 	|	active =  1066 	|	total =  1728 	|	layerwise sparsity =  0.6168981481481481
layer1.0.conv1.weight_mask 	|	active =  9663 	|	total =  36864 	|	layerwise sparsity =  0.2621256510416667
layer1.0.conv2.weight_mask 	|	active =  9663 	|	total =  36864 	|	layerwise sparsity =  0.2621256510416667
layer1.1.conv1.weight_mask 	|	active =  9663 	|	total =  36864 	|	layerwise sparsity =  0.2621256510416667
layer1.1.conv2.weight_mask 	|	active =  9663 	|	total =  36864 	|	layerwise sparsity =  0.2621256510416667
layer2.0.conv1.weight_mask 	|	active =  19327 	|	total =  73728 	|	layerwise sparsity =  0.2621392144097222
layer2.0.conv2.weight_mask 	|	active =  38654 	|	total =  147456 	|	layerwise sparsity =  0.2621392144097222
layer2.0.shortcut.0.weight_mask 	|	active =  5055 	|	total =  8192 	|	layerwise sparsity =  0.6170654296875
layer2.1.conv1.weight_mask 	|	active =  38654 	|	total =  147456 	|	layerwise sparsity =  0.2621392144097222
layer2.1.conv2.weight_mask 	|	active =  38654 	|	total =  147456 	|	layerwise sparsity =  0.2621392144097222
layer3.0.conv1.weight_mask 	|	active =  77310 	|	total =  294912 	|	layerwise sparsity =  0.26214599609375
layer3.0.conv2.weight_mask 	|	active =  121417 	|	total =  589824 	|	layerwise sparsity =  0.2058529324001736
layer3.0.shortcut.0.weight_mask 	|	active =  8590 	|	total =  32768 	|	layerwise sparsity =  0.26214599609375
layer3.1.conv1.weight_mask 	|	active =  124390 	|	total =  589824 	|	layerwise sparsity =  0.21089341905381945
layer3.1.conv2.weight_mask 	|	active =  129593 	|	total =  589824 	|	layerwise sparsity =  0.2197146945529514
layer4.0.conv1.weight_mask 	|	active =  286592 	|	total =  1179648 	|	layerwise sparsity =  0.2429470486111111
layer4.0.conv2.weight_mask 	|	active =  646175 	|	total =  2359296 	|	layerwise sparsity =  0.2738846672905816
layer4.0.shortcut.0.weight_mask 	|	active =  34360 	|	total =  131072 	|	layerwise sparsity =  0.26214599609375
layer4.1.conv1.weight_mask 	|	active =  668730 	|	total =  2359296 	|	layerwise sparsity =  0.28344472249348956
layer4.1.conv2.weight_mask 	|	active =  686638 	|	total =  2359296 	|	layerwise sparsity =  0.29103512234157985
------------------------ Checkpoint 20  ------------------------
best_val =  0.6583
------------------------ Checkpoint 21  ------------------------
pruning state: 6
remaining weight at start of iteration =  26.55968618628952
iteration: 6, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 6, epoch: 1, best train: 0.487, best val: 0.1187, lr: 0.09991
iteration: 6, epoch: 2, best train: 0.525, best val: 0.1187, lr: 0.09985
iteration: 6, epoch: 3, best train: 0.525, best val: 0.3835, lr: 0.09976
iteration: 6, epoch: 4, best train: 0.583, best val: 0.4064, lr: 0.09965
iteration: 6, epoch: 5, best train: 0.659, best val: 0.4653, lr: 0.09953
iteration: 6, epoch: 6, best train: 0.662, best val: 0.4809, lr: 0.09938
iteration: 6, epoch: 7, best train: 0.704, best val: 0.4809, lr: 0.09922
iteration: 6, epoch: 8, best train: 0.713, best val: 0.5084, lr: 0.09904
iteration: 6, epoch: 9, best train: 0.723, best val: 0.5439, lr: 0.09884
iteration: 6, epoch: 10, best train: 0.747, best val: 0.558, lr: 0.09862
iteration: 6, epoch: 11, best train: 0.767, best val: 0.558, lr: 0.09838
iteration: 6, epoch: 12, best train: 0.79, best val: 0.558, lr: 0.09812
iteration: 6, epoch: 13, best train: 0.79, best val: 0.558, lr: 0.09785
iteration: 6, epoch: 14, best train: 0.79, best val: 0.558, lr: 0.09755
iteration: 6, epoch: 15, best train: 0.79, best val: 0.558, lr: 0.09724
iteration: 6, epoch: 16, best train: 0.794, best val: 0.558, lr: 0.09691
iteration: 6, epoch: 17, best train: 0.818, best val: 0.558, lr: 0.09656
iteration: 6, epoch: 18, best train: 0.824, best val: 0.558, lr: 0.09619
iteration: 6, epoch: 19, best train: 0.824, best val: 0.558, lr: 0.09581
iteration: 6, epoch: 20, best train: 0.824, best val: 0.558, lr: 0.09541
iteration: 6, epoch: 21, best train: 0.849, best val: 0.5997, lr: 0.09499
iteration: 6, epoch: 22, best train: 0.849, best val: 0.5997, lr: 0.09455
iteration: 6, epoch: 23, best train: 0.849, best val: 0.5997, lr: 0.0941
iteration: 6, epoch: 24, best train: 0.849, best val: 0.5997, lr: 0.09362
iteration: 6, epoch: 25, best train: 0.857, best val: 0.5997, lr: 0.09314
iteration: 6, epoch: 26, best train: 0.857, best val: 0.5997, lr: 0.09263
iteration: 6, epoch: 27, best train: 0.857, best val: 0.5997, lr: 0.09211
iteration: 6, epoch: 28, best train: 0.879, best val: 0.5997, lr: 0.09157
iteration: 6, epoch: 29, best train: 0.879, best val: 0.5997, lr: 0.09102
iteration: 6, epoch: 30, best train: 0.879, best val: 0.5997, lr: 0.09045
iteration: 6, epoch: 31, best train: 0.879, best val: 0.6008, lr: 0.08987
iteration: 6, epoch: 32, best train: 0.879, best val: 0.6138, lr: 0.08927
iteration: 6, epoch: 33, best train: 0.887, best val: 0.6138, lr: 0.08865
iteration: 6, epoch: 34, best train: 0.887, best val: 0.6138, lr: 0.08802
iteration: 6, epoch: 35, best train: 0.887, best val: 0.6138, lr: 0.08738
iteration: 6, epoch: 36, best train: 0.887, best val: 0.6138, lr: 0.08672
iteration: 6, epoch: 37, best train: 0.887, best val: 0.6138, lr: 0.08604
iteration: 6, epoch: 38, best train: 0.887, best val: 0.6138, lr: 0.08536
iteration: 6, epoch: 39, best train: 0.887, best val: 0.6138, lr: 0.08465
iteration: 6, epoch: 40, best train: 0.887, best val: 0.6138, lr: 0.08394
iteration: 6, epoch: 41, best train: 0.901, best val: 0.6138, lr: 0.08321
iteration: 6, epoch: 42, best train: 0.91, best val: 0.6138, lr: 0.08247
iteration: 6, epoch: 43, best train: 0.91, best val: 0.6138, lr: 0.08172
iteration: 6, epoch: 44, best train: 0.91, best val: 0.6174, lr: 0.08095
iteration: 6, epoch: 45, best train: 0.91, best val: 0.6174, lr: 0.08018
iteration: 6, epoch: 46, best train: 0.91, best val: 0.6174, lr: 0.07939
iteration: 6, epoch: 47, best train: 0.91, best val: 0.6174, lr: 0.07859
iteration: 6, epoch: 48, best train: 0.91, best val: 0.6174, lr: 0.07778
iteration: 6, epoch: 49, best train: 0.91, best val: 0.6174, lr: 0.07696
iteration: 6, epoch: 50, best train: 0.91, best val: 0.6174, lr: 0.07612
iteration: 6, epoch: 51, best train: 0.91, best val: 0.6174, lr: 0.07528
iteration: 6, epoch: 52, best train: 0.911, best val: 0.6174, lr: 0.07443
iteration: 6, epoch: 53, best train: 0.911, best val: 0.6174, lr: 0.07357
iteration: 6, epoch: 54, best train: 0.911, best val: 0.6174, lr: 0.0727
iteration: 6, epoch: 55, best train: 0.911, best val: 0.6174, lr: 0.07182
iteration: 6, epoch: 56, best train: 0.911, best val: 0.6174, lr: 0.07093
iteration: 6, epoch: 57, best train: 0.911, best val: 0.6174, lr: 0.07004
iteration: 6, epoch: 58, best train: 0.911, best val: 0.6174, lr: 0.06913
iteration: 6, epoch: 59, best train: 0.916, best val: 0.6182, lr: 0.06822
iteration: 6, epoch: 60, best train: 0.916, best val: 0.6217, lr: 0.06731
iteration: 6, epoch: 61, best train: 0.916, best val: 0.6315, lr: 0.06638
iteration: 6, epoch: 62, best train: 0.916, best val: 0.6315, lr: 0.06545
iteration: 6, epoch: 63, best train: 0.916, best val: 0.6315, lr: 0.06451
iteration: 6, epoch: 64, best train: 0.916, best val: 0.6315, lr: 0.06357
iteration: 6, epoch: 65, best train: 0.916, best val: 0.6315, lr: 0.06262
iteration: 6, epoch: 66, best train: 0.916, best val: 0.6315, lr: 0.06167
iteration: 6, epoch: 67, best train: 0.925, best val: 0.6342, lr: 0.06072
iteration: 6, epoch: 68, best train: 0.941, best val: 0.6347, lr: 0.05975
iteration: 6, epoch: 69, best train: 0.941, best val: 0.6347, lr: 0.05879
iteration: 6, epoch: 70, best train: 0.941, best val: 0.6347, lr: 0.05782
iteration: 6, epoch: 71, best train: 0.941, best val: 0.6347, lr: 0.05685
iteration: 6, epoch: 72, best train: 0.941, best val: 0.6347, lr: 0.05588
iteration: 6, epoch: 73, best train: 0.941, best val: 0.6347, lr: 0.0549
iteration: 6, epoch: 74, best train: 0.941, best val: 0.6347, lr: 0.05392
iteration: 6, epoch: 75, best train: 0.941, best val: 0.6347, lr: 0.05294
iteration: 6, epoch: 76, best train: 0.941, best val: 0.6347, lr: 0.05196
iteration: 6, epoch: 77, best train: 0.941, best val: 0.6347, lr: 0.05098
iteration: 6, epoch: 78, best train: 0.941, best val: 0.6402, lr: 0.05
iteration: 6, epoch: 79, best train: 0.941, best val: 0.6402, lr: 0.04902
iteration: 6, epoch: 80, best train: 0.944, best val: 0.6402, lr: 0.04804
iteration: 6, epoch: 81, best train: 0.944, best val: 0.6402, lr: 0.04706
iteration: 6, epoch: 82, best train: 0.944, best val: 0.6402, lr: 0.04608
iteration: 6, epoch: 83, best train: 0.944, best val: 0.6402, lr: 0.0451
iteration: 6, epoch: 84, best train: 0.944, best val: 0.6402, lr: 0.04412
iteration: 6, epoch: 85, best train: 0.944, best val: 0.6402, lr: 0.04315
iteration: 6, epoch: 86, best train: 0.944, best val: 0.6402, lr: 0.04218
iteration: 6, epoch: 87, best train: 0.944, best val: 0.6402, lr: 0.04121
iteration: 6, epoch: 88, best train: 0.948, best val: 0.6402, lr: 0.04025
iteration: 6, epoch: 89, best train: 0.948, best val: 0.6414, lr: 0.03928
iteration: 6, epoch: 90, best train: 0.948, best val: 0.6414, lr: 0.03833
iteration: 6, epoch: 91, best train: 0.948, best val: 0.6443, lr: 0.03738
iteration: 6, epoch: 92, best train: 0.948, best val: 0.6443, lr: 0.03643
iteration: 6, epoch: 93, best train: 0.948, best val: 0.6443, lr: 0.03549
iteration: 6, epoch: 94, best train: 0.948, best val: 0.6443, lr: 0.03455
iteration: 6, epoch: 95, best train: 0.949, best val: 0.6443, lr: 0.03362
iteration: 6, epoch: 96, best train: 0.95, best val: 0.6443, lr: 0.03269
iteration: 6, epoch: 97, best train: 0.95, best val: 0.6443, lr: 0.03178
iteration: 6, epoch: 98, best train: 0.953, best val: 0.6443, lr: 0.03087
iteration: 6, epoch: 99, best train: 0.953, best val: 0.6443, lr: 0.02996
iteration: 6, epoch: 100, best train: 0.953, best val: 0.6443, lr: 0.02907
iteration: 6, epoch: 101, best train: 0.953, best val: 0.6443, lr: 0.02818
iteration: 6, epoch: 102, best train: 0.956, best val: 0.6574, lr: 0.0273
iteration: 6, epoch: 103, best train: 0.956, best val: 0.6574, lr: 0.02643
iteration: 6, epoch: 104, best train: 0.956, best val: 0.6574, lr: 0.02557
iteration: 6, epoch: 105, best train: 0.956, best val: 0.6574, lr: 0.02472
iteration: 6, epoch: 106, best train: 0.957, best val: 0.658, lr: 0.02388
iteration: 6, epoch: 107, best train: 0.957, best val: 0.658, lr: 0.02304
iteration: 6, epoch: 108, best train: 0.957, best val: 0.658, lr: 0.02222
iteration: 6, epoch: 109, best train: 0.957, best val: 0.658, lr: 0.02141
iteration: 6, epoch: 110, best train: 0.957, best val: 0.658, lr: 0.02061
iteration: 6, epoch: 111, best train: 0.958, best val: 0.658, lr: 0.01982
iteration: 6, epoch: 112, best train: 0.958, best val: 0.658, lr: 0.01905
iteration: 6, epoch: 113, best train: 0.958, best val: 0.658, lr: 0.01828
iteration: 6, epoch: 114, best train: 0.958, best val: 0.658, lr: 0.01753
iteration: 6, epoch: 115, best train: 0.958, best val: 0.658, lr: 0.01679
iteration: 6, epoch: 116, best train: 0.958, best val: 0.658, lr: 0.01606
iteration: 6, epoch: 117, best train: 0.958, best val: 0.658, lr: 0.01535
iteration: 6, epoch: 118, best train: 0.959, best val: 0.658, lr: 0.01464
iteration: 6, epoch: 119, best train: 0.961, best val: 0.658, lr: 0.01396
iteration: 6, epoch: 120, best train: 0.961, best val: 0.658, lr: 0.01328
iteration: 6, epoch: 121, best train: 0.961, best val: 0.658, lr: 0.01262
iteration: 6, epoch: 122, best train: 0.961, best val: 0.658, lr: 0.01198
iteration: 6, epoch: 123, best train: 0.961, best val: 0.6584, lr: 0.01135
iteration: 6, epoch: 124, best train: 0.972, best val: 0.6588, lr: 0.01073
iteration: 6, epoch: 125, best train: 0.972, best val: 0.6609, lr: 0.01013
iteration: 6, epoch: 126, best train: 0.972, best val: 0.6613, lr: 0.00955
iteration: 6, epoch: 127, best train: 0.972, best val: 0.6613, lr: 0.00898
iteration: 6, epoch: 128, best train: 0.972, best val: 0.6613, lr: 0.00843
iteration: 6, epoch: 129, best train: 0.972, best val: 0.6613, lr: 0.00789
iteration: 6, epoch: 130, best train: 0.972, best val: 0.6613, lr: 0.00737
iteration: 6, epoch: 131, best train: 0.972, best val: 0.6613, lr: 0.00686
iteration: 6, epoch: 132, best train: 0.972, best val: 0.6613, lr: 0.00638
iteration: 6, epoch: 133, best train: 0.972, best val: 0.6613, lr: 0.0059
iteration: 6, epoch: 134, best train: 0.972, best val: 0.6613, lr: 0.00545
iteration: 6, epoch: 135, best train: 0.972, best val: 0.6613, lr: 0.00501
iteration: 6, epoch: 136, best train: 0.972, best val: 0.6613, lr: 0.00459
iteration: 6, epoch: 137, best train: 0.972, best val: 0.6613, lr: 0.00419
iteration: 6, epoch: 138, best train: 0.972, best val: 0.6613, lr: 0.00381
iteration: 6, epoch: 139, best train: 0.972, best val: 0.6613, lr: 0.00344
iteration: 6, epoch: 140, best train: 0.972, best val: 0.6613, lr: 0.00309
iteration: 6, epoch: 141, best train: 0.972, best val: 0.6613, lr: 0.00276
iteration: 6, epoch: 142, best train: 0.972, best val: 0.6613, lr: 0.00245
iteration: 6, epoch: 143, best train: 0.972, best val: 0.6613, lr: 0.00215
iteration: 6, epoch: 144, best train: 0.972, best val: 0.6613, lr: 0.00188
iteration: 6, epoch: 145, best train: 0.972, best val: 0.6613, lr: 0.00162
iteration: 6, epoch: 146, best train: 0.972, best val: 0.6613, lr: 0.00138
iteration: 6, epoch: 147, best train: 0.972, best val: 0.6613, lr: 0.00116
iteration: 6, epoch: 148, best train: 0.972, best val: 0.6613, lr: 0.00096
iteration: 6, epoch: 149, best train: 0.972, best val: 0.6613, lr: 0.00078
iteration: 6, epoch: 150, best train: 0.972, best val: 0.6613, lr: 0.00062
iteration: 6, epoch: 151, best train: 0.972, best val: 0.6613, lr: 0.00047
iteration: 6, epoch: 152, best train: 0.972, best val: 0.6613, lr: 0.00035
iteration: 6, epoch: 153, best train: 0.972, best val: 0.6613, lr: 0.00024
iteration: 6, epoch: 154, best train: 0.972, best val: 0.6613, lr: 0.00015
iteration: 6, epoch: 155, best train: 0.972, best val: 0.6613, lr: 9e-05
iteration: 6, epoch: 156, best train: 0.972, best val: 0.6613, lr: 4e-05
iteration: 6, epoch: 157, best train: 0.972, best val: 0.6613, lr: 1e-05
iteration: 6, epoch: 158, best train: 0.972, best val: 0.6613, lr: 0.0
iteration: 6, epoch: 159, best train: 0.972, best val: 0.6613, lr: 1e-05
------------------------ Checkpoint 22  ------------------------
pre_conv.0.weight_mask 	|	active =  984 	|	total =  1728 	|	layerwise sparsity =  0.5694444444444444
layer1.0.conv1.weight_mask 	|	active =  7730 	|	total =  36864 	|	layerwise sparsity =  0.2096896701388889
layer1.0.conv2.weight_mask 	|	active =  7730 	|	total =  36864 	|	layerwise sparsity =  0.2096896701388889
layer1.1.conv1.weight_mask 	|	active =  7730 	|	total =  36864 	|	layerwise sparsity =  0.2096896701388889
layer1.1.conv2.weight_mask 	|	active =  7730 	|	total =  36864 	|	layerwise sparsity =  0.2096896701388889
layer2.0.conv1.weight_mask 	|	active =  15462 	|	total =  73728 	|	layerwise sparsity =  0.209716796875
layer2.0.conv2.weight_mask 	|	active =  30923 	|	total =  147456 	|	layerwise sparsity =  0.2097100151909722
layer2.0.shortcut.0.weight_mask 	|	active =  4664 	|	total =  8192 	|	layerwise sparsity =  0.5693359375
layer2.1.conv1.weight_mask 	|	active =  30923 	|	total =  147456 	|	layerwise sparsity =  0.2097100151909722
layer2.1.conv2.weight_mask 	|	active =  30923 	|	total =  147456 	|	layerwise sparsity =  0.2097100151909722
layer3.0.conv1.weight_mask 	|	active =  61848 	|	total =  294912 	|	layerwise sparsity =  0.209716796875
layer3.0.conv2.weight_mask 	|	active =  93298 	|	total =  589824 	|	layerwise sparsity =  0.1581793891059028
layer3.0.shortcut.0.weight_mask 	|	active =  6872 	|	total =  32768 	|	layerwise sparsity =  0.209716796875
layer3.1.conv1.weight_mask 	|	active =  95969 	|	total =  589824 	|	layerwise sparsity =  0.1627078586154514
layer3.1.conv2.weight_mask 	|	active =  100668 	|	total =  589824 	|	layerwise sparsity =  0.17067464192708334
layer4.0.conv1.weight_mask 	|	active =  226386 	|	total =  1179648 	|	layerwise sparsity =  0.1919097900390625
layer4.0.conv2.weight_mask 	|	active =  520729 	|	total =  2359296 	|	layerwise sparsity =  0.22071372138129342
layer4.0.shortcut.0.weight_mask 	|	active =  27488 	|	total =  131072 	|	layerwise sparsity =  0.209716796875
layer4.1.conv1.weight_mask 	|	active =  541995 	|	total =  2359296 	|	layerwise sparsity =  0.22972742716471353
layer4.1.conv2.weight_mask 	|	active =  558966 	|	total =  2359296 	|	layerwise sparsity =  0.2369206746419271
------------------------ Checkpoint 23  ------------------------
best_val =  0.6613000000000001
------------------------ Checkpoint 24  ------------------------
pruning state: 7
remaining weight at start of iteration =  21.3188326938628
iteration: 7, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 7, epoch: 1, best train: 0.581, best val: 0.1, lr: 0.09991
iteration: 7, epoch: 2, best train: 0.581, best val: 0.2895, lr: 0.09985
iteration: 7, epoch: 3, best train: 0.581, best val: 0.4344, lr: 0.09976
iteration: 7, epoch: 4, best train: 0.625, best val: 0.4587, lr: 0.09965
iteration: 7, epoch: 5, best train: 0.704, best val: 0.4994, lr: 0.09953
iteration: 7, epoch: 6, best train: 0.704, best val: 0.4994, lr: 0.09938
iteration: 7, epoch: 7, best train: 0.704, best val: 0.4994, lr: 0.09922
iteration: 7, epoch: 8, best train: 0.749, best val: 0.5619, lr: 0.09904
iteration: 7, epoch: 9, best train: 0.749, best val: 0.5619, lr: 0.09884
iteration: 7, epoch: 10, best train: 0.774, best val: 0.5619, lr: 0.09862
iteration: 7, epoch: 11, best train: 0.808, best val: 0.5619, lr: 0.09838
iteration: 7, epoch: 12, best train: 0.808, best val: 0.5765, lr: 0.09812
iteration: 7, epoch: 13, best train: 0.808, best val: 0.5765, lr: 0.09785
iteration: 7, epoch: 14, best train: 0.815, best val: 0.5765, lr: 0.09755
iteration: 7, epoch: 15, best train: 0.83, best val: 0.5765, lr: 0.09724
iteration: 7, epoch: 16, best train: 0.831, best val: 0.5765, lr: 0.09691
iteration: 7, epoch: 17, best train: 0.839, best val: 0.5765, lr: 0.09656
iteration: 7, epoch: 18, best train: 0.841, best val: 0.5765, lr: 0.09619
iteration: 7, epoch: 19, best train: 0.863, best val: 0.5765, lr: 0.09581
iteration: 7, epoch: 20, best train: 0.863, best val: 0.586, lr: 0.09541
iteration: 7, epoch: 21, best train: 0.863, best val: 0.5935, lr: 0.09499
iteration: 7, epoch: 22, best train: 0.863, best val: 0.5935, lr: 0.09455
iteration: 7, epoch: 23, best train: 0.863, best val: 0.5987, lr: 0.0941
iteration: 7, epoch: 24, best train: 0.863, best val: 0.5987, lr: 0.09362
iteration: 7, epoch: 25, best train: 0.863, best val: 0.607, lr: 0.09314
iteration: 7, epoch: 26, best train: 0.863, best val: 0.607, lr: 0.09263
iteration: 7, epoch: 27, best train: 0.863, best val: 0.607, lr: 0.09211
iteration: 7, epoch: 28, best train: 0.877, best val: 0.607, lr: 0.09157
iteration: 7, epoch: 29, best train: 0.879, best val: 0.607, lr: 0.09102
iteration: 7, epoch: 30, best train: 0.881, best val: 0.607, lr: 0.09045
iteration: 7, epoch: 31, best train: 0.881, best val: 0.6157, lr: 0.08987
iteration: 7, epoch: 32, best train: 0.883, best val: 0.6157, lr: 0.08927
iteration: 7, epoch: 33, best train: 0.883, best val: 0.6157, lr: 0.08865
iteration: 7, epoch: 34, best train: 0.883, best val: 0.6157, lr: 0.08802
iteration: 7, epoch: 35, best train: 0.889, best val: 0.6157, lr: 0.08738
iteration: 7, epoch: 36, best train: 0.889, best val: 0.6157, lr: 0.08672
iteration: 7, epoch: 37, best train: 0.889, best val: 0.6157, lr: 0.08604
iteration: 7, epoch: 38, best train: 0.889, best val: 0.6175, lr: 0.08536
iteration: 7, epoch: 39, best train: 0.889, best val: 0.6175, lr: 0.08465
iteration: 7, epoch: 40, best train: 0.9, best val: 0.6175, lr: 0.08394
iteration: 7, epoch: 41, best train: 0.9, best val: 0.6239, lr: 0.08321
iteration: 7, epoch: 42, best train: 0.9, best val: 0.6239, lr: 0.08247
iteration: 7, epoch: 43, best train: 0.9, best val: 0.6239, lr: 0.08172
iteration: 7, epoch: 44, best train: 0.9, best val: 0.6239, lr: 0.08095
iteration: 7, epoch: 45, best train: 0.9, best val: 0.6239, lr: 0.08018
iteration: 7, epoch: 46, best train: 0.904, best val: 0.6239, lr: 0.07939
iteration: 7, epoch: 47, best train: 0.904, best val: 0.6239, lr: 0.07859
iteration: 7, epoch: 48, best train: 0.909, best val: 0.6239, lr: 0.07778
iteration: 7, epoch: 49, best train: 0.918, best val: 0.6268, lr: 0.07696
iteration: 7, epoch: 50, best train: 0.918, best val: 0.6286, lr: 0.07612
iteration: 7, epoch: 51, best train: 0.918, best val: 0.6286, lr: 0.07528
iteration: 7, epoch: 52, best train: 0.918, best val: 0.6286, lr: 0.07443
iteration: 7, epoch: 53, best train: 0.918, best val: 0.6287, lr: 0.07357
iteration: 7, epoch: 54, best train: 0.918, best val: 0.6287, lr: 0.0727
iteration: 7, epoch: 55, best train: 0.923, best val: 0.6432, lr: 0.07182
iteration: 7, epoch: 56, best train: 0.923, best val: 0.6474, lr: 0.07093
iteration: 7, epoch: 57, best train: 0.923, best val: 0.6474, lr: 0.07004
iteration: 7, epoch: 58, best train: 0.923, best val: 0.6474, lr: 0.06913
iteration: 7, epoch: 59, best train: 0.923, best val: 0.6474, lr: 0.06822
iteration: 7, epoch: 60, best train: 0.923, best val: 0.6474, lr: 0.06731
iteration: 7, epoch: 61, best train: 0.923, best val: 0.6474, lr: 0.06638
iteration: 7, epoch: 62, best train: 0.928, best val: 0.6474, lr: 0.06545
iteration: 7, epoch: 63, best train: 0.928, best val: 0.6474, lr: 0.06451
iteration: 7, epoch: 64, best train: 0.928, best val: 0.6474, lr: 0.06357
iteration: 7, epoch: 65, best train: 0.948, best val: 0.6474, lr: 0.06262
iteration: 7, epoch: 66, best train: 0.948, best val: 0.6474, lr: 0.06167
iteration: 7, epoch: 67, best train: 0.948, best val: 0.6474, lr: 0.06072
iteration: 7, epoch: 68, best train: 0.948, best val: 0.6474, lr: 0.05975
iteration: 7, epoch: 69, best train: 0.948, best val: 0.6474, lr: 0.05879
iteration: 7, epoch: 70, best train: 0.948, best val: 0.6474, lr: 0.05782
iteration: 7, epoch: 71, best train: 0.948, best val: 0.6474, lr: 0.05685
iteration: 7, epoch: 72, best train: 0.948, best val: 0.6474, lr: 0.05588
iteration: 7, epoch: 73, best train: 0.948, best val: 0.6474, lr: 0.0549
iteration: 7, epoch: 74, best train: 0.948, best val: 0.6474, lr: 0.05392
iteration: 7, epoch: 75, best train: 0.948, best val: 0.6474, lr: 0.05294
iteration: 7, epoch: 76, best train: 0.948, best val: 0.6474, lr: 0.05196
iteration: 7, epoch: 77, best train: 0.948, best val: 0.6474, lr: 0.05098
iteration: 7, epoch: 78, best train: 0.948, best val: 0.6474, lr: 0.05
iteration: 7, epoch: 79, best train: 0.948, best val: 0.6474, lr: 0.04902
iteration: 7, epoch: 80, best train: 0.948, best val: 0.6474, lr: 0.04804
iteration: 7, epoch: 81, best train: 0.951, best val: 0.6514, lr: 0.04706
iteration: 7, epoch: 82, best train: 0.951, best val: 0.6514, lr: 0.04608
iteration: 7, epoch: 83, best train: 0.951, best val: 0.6514, lr: 0.0451
iteration: 7, epoch: 84, best train: 0.951, best val: 0.6514, lr: 0.04412
iteration: 7, epoch: 85, best train: 0.951, best val: 0.6514, lr: 0.04315
iteration: 7, epoch: 86, best train: 0.951, best val: 0.6532, lr: 0.04218
iteration: 7, epoch: 87, best train: 0.951, best val: 0.6532, lr: 0.04121
iteration: 7, epoch: 88, best train: 0.951, best val: 0.6532, lr: 0.04025
iteration: 7, epoch: 89, best train: 0.955, best val: 0.6532, lr: 0.03928
iteration: 7, epoch: 90, best train: 0.955, best val: 0.6532, lr: 0.03833
iteration: 7, epoch: 91, best train: 0.955, best val: 0.6532, lr: 0.03738
iteration: 7, epoch: 92, best train: 0.955, best val: 0.6532, lr: 0.03643
iteration: 7, epoch: 93, best train: 0.955, best val: 0.6532, lr: 0.03549
iteration: 7, epoch: 94, best train: 0.955, best val: 0.6532, lr: 0.03455
iteration: 7, epoch: 95, best train: 0.955, best val: 0.6532, lr: 0.03362
iteration: 7, epoch: 96, best train: 0.955, best val: 0.6532, lr: 0.03269
iteration: 7, epoch: 97, best train: 0.956, best val: 0.6585, lr: 0.03178
iteration: 7, epoch: 98, best train: 0.956, best val: 0.6589, lr: 0.03087
iteration: 7, epoch: 99, best train: 0.956, best val: 0.6589, lr: 0.02996
iteration: 7, epoch: 100, best train: 0.956, best val: 0.6609, lr: 0.02907
iteration: 7, epoch: 101, best train: 0.956, best val: 0.6683, lr: 0.02818
iteration: 7, epoch: 102, best train: 0.956, best val: 0.6683, lr: 0.0273
iteration: 7, epoch: 103, best train: 0.959, best val: 0.6683, lr: 0.02643
iteration: 7, epoch: 104, best train: 0.959, best val: 0.6683, lr: 0.02557
iteration: 7, epoch: 105, best train: 0.959, best val: 0.6683, lr: 0.02472
iteration: 7, epoch: 106, best train: 0.959, best val: 0.6683, lr: 0.02388
iteration: 7, epoch: 107, best train: 0.959, best val: 0.6683, lr: 0.02304
iteration: 7, epoch: 108, best train: 0.959, best val: 0.6683, lr: 0.02222
iteration: 7, epoch: 109, best train: 0.959, best val: 0.6683, lr: 0.02141
iteration: 7, epoch: 110, best train: 0.959, best val: 0.6683, lr: 0.02061
iteration: 7, epoch: 111, best train: 0.959, best val: 0.6683, lr: 0.01982
iteration: 7, epoch: 112, best train: 0.959, best val: 0.6683, lr: 0.01905
iteration: 7, epoch: 113, best train: 0.959, best val: 0.6683, lr: 0.01828
iteration: 7, epoch: 114, best train: 0.959, best val: 0.6683, lr: 0.01753
iteration: 7, epoch: 115, best train: 0.959, best val: 0.6703, lr: 0.01679
iteration: 7, epoch: 116, best train: 0.959, best val: 0.6764, lr: 0.01606
iteration: 7, epoch: 117, best train: 0.959, best val: 0.6764, lr: 0.01535
iteration: 7, epoch: 118, best train: 0.959, best val: 0.6764, lr: 0.01464
iteration: 7, epoch: 119, best train: 0.959, best val: 0.6764, lr: 0.01396
iteration: 7, epoch: 120, best train: 0.959, best val: 0.6764, lr: 0.01328
iteration: 7, epoch: 121, best train: 0.96, best val: 0.6764, lr: 0.01262
iteration: 7, epoch: 122, best train: 0.971, best val: 0.6764, lr: 0.01198
iteration: 7, epoch: 123, best train: 0.971, best val: 0.6764, lr: 0.01135
iteration: 7, epoch: 124, best train: 0.971, best val: 0.6764, lr: 0.01073
iteration: 7, epoch: 125, best train: 0.971, best val: 0.6764, lr: 0.01013
iteration: 7, epoch: 126, best train: 0.971, best val: 0.6764, lr: 0.00955
iteration: 7, epoch: 127, best train: 0.971, best val: 0.6764, lr: 0.00898
iteration: 7, epoch: 128, best train: 0.971, best val: 0.6764, lr: 0.00843
iteration: 7, epoch: 129, best train: 0.971, best val: 0.6764, lr: 0.00789
iteration: 7, epoch: 130, best train: 0.971, best val: 0.6764, lr: 0.00737
iteration: 7, epoch: 131, best train: 0.971, best val: 0.6764, lr: 0.00686
iteration: 7, epoch: 132, best train: 0.971, best val: 0.6764, lr: 0.00638
iteration: 7, epoch: 133, best train: 0.971, best val: 0.6764, lr: 0.0059
iteration: 7, epoch: 134, best train: 0.971, best val: 0.6764, lr: 0.00545
iteration: 7, epoch: 135, best train: 0.971, best val: 0.6764, lr: 0.00501
iteration: 7, epoch: 136, best train: 0.971, best val: 0.6764, lr: 0.00459
iteration: 7, epoch: 137, best train: 0.971, best val: 0.6764, lr: 0.00419
iteration: 7, epoch: 138, best train: 0.971, best val: 0.6764, lr: 0.00381
iteration: 7, epoch: 139, best train: 0.971, best val: 0.6764, lr: 0.00344
iteration: 7, epoch: 140, best train: 0.971, best val: 0.6764, lr: 0.00309
iteration: 7, epoch: 141, best train: 0.971, best val: 0.6764, lr: 0.00276
iteration: 7, epoch: 142, best train: 0.971, best val: 0.6764, lr: 0.00245
iteration: 7, epoch: 143, best train: 0.971, best val: 0.6764, lr: 0.00215
iteration: 7, epoch: 144, best train: 0.971, best val: 0.6764, lr: 0.00188
iteration: 7, epoch: 145, best train: 0.971, best val: 0.6767, lr: 0.00162
iteration: 7, epoch: 146, best train: 0.971, best val: 0.6767, lr: 0.00138
iteration: 7, epoch: 147, best train: 0.971, best val: 0.6773, lr: 0.00116
iteration: 7, epoch: 148, best train: 0.971, best val: 0.6773, lr: 0.00096
iteration: 7, epoch: 149, best train: 0.971, best val: 0.6773, lr: 0.00078
iteration: 7, epoch: 150, best train: 0.971, best val: 0.6773, lr: 0.00062
iteration: 7, epoch: 151, best train: 0.971, best val: 0.6773, lr: 0.00047
iteration: 7, epoch: 152, best train: 0.971, best val: 0.6773, lr: 0.00035
iteration: 7, epoch: 153, best train: 0.971, best val: 0.6779, lr: 0.00024
iteration: 7, epoch: 154, best train: 0.971, best val: 0.678, lr: 0.00015
iteration: 7, epoch: 155, best train: 0.971, best val: 0.678, lr: 9e-05
iteration: 7, epoch: 156, best train: 0.971, best val: 0.6782, lr: 4e-05
iteration: 7, epoch: 157, best train: 0.971, best val: 0.6782, lr: 1e-05
iteration: 7, epoch: 158, best train: 0.971, best val: 0.6782, lr: 0.0
iteration: 7, epoch: 159, best train: 0.971, best val: 0.6782, lr: 1e-05
------------------------ Checkpoint 25  ------------------------
pre_conv.0.weight_mask 	|	active =  908 	|	total =  1728 	|	layerwise sparsity =  0.5254629629629629
layer1.0.conv1.weight_mask 	|	active =  6184 	|	total =  36864 	|	layerwise sparsity =  0.1677517361111111
layer1.0.conv2.weight_mask 	|	active =  6184 	|	total =  36864 	|	layerwise sparsity =  0.1677517361111111
layer1.1.conv1.weight_mask 	|	active =  6184 	|	total =  36864 	|	layerwise sparsity =  0.1677517361111111
layer1.1.conv2.weight_mask 	|	active =  6184 	|	total =  36864 	|	layerwise sparsity =  0.1677517361111111
layer2.0.conv1.weight_mask 	|	active =  12370 	|	total =  73728 	|	layerwise sparsity =  0.1677788628472222
layer2.0.conv2.weight_mask 	|	active =  24738 	|	total =  147456 	|	layerwise sparsity =  0.16776529947916666
layer2.0.shortcut.0.weight_mask 	|	active =  4303 	|	total =  8192 	|	layerwise sparsity =  0.5252685546875
layer2.1.conv1.weight_mask 	|	active =  24738 	|	total =  147456 	|	layerwise sparsity =  0.16776529947916666
layer2.1.conv2.weight_mask 	|	active =  24738 	|	total =  147456 	|	layerwise sparsity =  0.16776529947916666
layer3.0.conv1.weight_mask 	|	active =  49478 	|	total =  294912 	|	layerwise sparsity =  0.16777208116319445
layer3.0.conv2.weight_mask 	|	active =  71691 	|	total =  589824 	|	layerwise sparsity =  0.12154642740885417
layer3.0.shortcut.0.weight_mask 	|	active =  5498 	|	total =  32768 	|	layerwise sparsity =  0.16778564453125
layer3.1.conv1.weight_mask 	|	active =  74041 	|	total =  589824 	|	layerwise sparsity =  0.1255306667751736
layer3.1.conv2.weight_mask 	|	active =  78199 	|	total =  589824 	|	layerwise sparsity =  0.1325802273220486
layer4.0.conv1.weight_mask 	|	active =  178828 	|	total =  1179648 	|	layerwise sparsity =  0.15159437391493055
layer4.0.conv2.weight_mask 	|	active =  419636 	|	total =  2359296 	|	layerwise sparsity =  0.1778649224175347
layer4.0.shortcut.0.weight_mask 	|	active =  21990 	|	total =  131072 	|	layerwise sparsity =  0.1677703857421875
layer4.1.conv1.weight_mask 	|	active =  439279 	|	total =  2359296 	|	layerwise sparsity =  0.18619071112738717
layer4.1.conv2.weight_mask 	|	active =  455033 	|	total =  2359296 	|	layerwise sparsity =  0.19286812676323783
------------------------ Checkpoint 26  ------------------------
best_val =  0.6781999999999998
------------------------ Checkpoint 27  ------------------------
pruning state: 8
remaining weight at start of iteration =  17.11770128983787
iteration: 8, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 8, epoch: 1, best train: 0.589, best val: 0.1, lr: 0.09991
iteration: 8, epoch: 2, best train: 0.614, best val: 0.1415, lr: 0.09985
iteration: 8, epoch: 3, best train: 0.614, best val: 0.2916, lr: 0.09976
iteration: 8, epoch: 4, best train: 0.631, best val: 0.5116, lr: 0.09965
iteration: 8, epoch: 5, best train: 0.691, best val: 0.5116, lr: 0.09953
iteration: 8, epoch: 6, best train: 0.732, best val: 0.5116, lr: 0.09938
iteration: 8, epoch: 7, best train: 0.763, best val: 0.5116, lr: 0.09922
iteration: 8, epoch: 8, best train: 0.768, best val: 0.5372, lr: 0.09904
iteration: 8, epoch: 9, best train: 0.787, best val: 0.5372, lr: 0.09884
iteration: 8, epoch: 10, best train: 0.787, best val: 0.5372, lr: 0.09862
iteration: 8, epoch: 11, best train: 0.811, best val: 0.5372, lr: 0.09838
iteration: 8, epoch: 12, best train: 0.811, best val: 0.5372, lr: 0.09812
iteration: 8, epoch: 13, best train: 0.811, best val: 0.5489, lr: 0.09785
iteration: 8, epoch: 14, best train: 0.82, best val: 0.5781, lr: 0.09755
iteration: 8, epoch: 15, best train: 0.874, best val: 0.6001, lr: 0.09724
iteration: 8, epoch: 16, best train: 0.874, best val: 0.6001, lr: 0.09691
iteration: 8, epoch: 17, best train: 0.874, best val: 0.6001, lr: 0.09656
iteration: 8, epoch: 18, best train: 0.874, best val: 0.6001, lr: 0.09619
iteration: 8, epoch: 19, best train: 0.874, best val: 0.6001, lr: 0.09581
iteration: 8, epoch: 20, best train: 0.874, best val: 0.604, lr: 0.09541
iteration: 8, epoch: 21, best train: 0.874, best val: 0.6084, lr: 0.09499
iteration: 8, epoch: 22, best train: 0.874, best val: 0.6084, lr: 0.09455
iteration: 8, epoch: 23, best train: 0.874, best val: 0.6084, lr: 0.0941
iteration: 8, epoch: 24, best train: 0.876, best val: 0.6113, lr: 0.09362
iteration: 8, epoch: 25, best train: 0.876, best val: 0.6113, lr: 0.09314
iteration: 8, epoch: 26, best train: 0.876, best val: 0.6113, lr: 0.09263
iteration: 8, epoch: 27, best train: 0.876, best val: 0.6236, lr: 0.09211
iteration: 8, epoch: 28, best train: 0.876, best val: 0.6236, lr: 0.09157
iteration: 8, epoch: 29, best train: 0.876, best val: 0.6236, lr: 0.09102
iteration: 8, epoch: 30, best train: 0.884, best val: 0.6236, lr: 0.09045
iteration: 8, epoch: 31, best train: 0.886, best val: 0.6236, lr: 0.08987
iteration: 8, epoch: 32, best train: 0.897, best val: 0.6236, lr: 0.08927
iteration: 8, epoch: 33, best train: 0.897, best val: 0.6236, lr: 0.08865
iteration: 8, epoch: 34, best train: 0.899, best val: 0.6236, lr: 0.08802
iteration: 8, epoch: 35, best train: 0.899, best val: 0.6307, lr: 0.08738
iteration: 8, epoch: 36, best train: 0.901, best val: 0.6307, lr: 0.08672
iteration: 8, epoch: 37, best train: 0.901, best val: 0.6307, lr: 0.08604
iteration: 8, epoch: 38, best train: 0.911, best val: 0.6307, lr: 0.08536
iteration: 8, epoch: 39, best train: 0.911, best val: 0.6307, lr: 0.08465
iteration: 8, epoch: 40, best train: 0.911, best val: 0.6307, lr: 0.08394
iteration: 8, epoch: 41, best train: 0.911, best val: 0.6307, lr: 0.08321
iteration: 8, epoch: 42, best train: 0.911, best val: 0.6307, lr: 0.08247
iteration: 8, epoch: 43, best train: 0.911, best val: 0.6307, lr: 0.08172
iteration: 8, epoch: 44, best train: 0.912, best val: 0.639, lr: 0.08095
iteration: 8, epoch: 45, best train: 0.912, best val: 0.639, lr: 0.08018
iteration: 8, epoch: 46, best train: 0.912, best val: 0.639, lr: 0.07939
iteration: 8, epoch: 47, best train: 0.912, best val: 0.639, lr: 0.07859
iteration: 8, epoch: 48, best train: 0.928, best val: 0.639, lr: 0.07778
iteration: 8, epoch: 49, best train: 0.928, best val: 0.639, lr: 0.07696
iteration: 8, epoch: 50, best train: 0.928, best val: 0.639, lr: 0.07612
iteration: 8, epoch: 51, best train: 0.93, best val: 0.639, lr: 0.07528
iteration: 8, epoch: 52, best train: 0.93, best val: 0.639, lr: 0.07443
iteration: 8, epoch: 53, best train: 0.93, best val: 0.639, lr: 0.07357
iteration: 8, epoch: 54, best train: 0.93, best val: 0.639, lr: 0.0727
iteration: 8, epoch: 55, best train: 0.93, best val: 0.6432, lr: 0.07182
iteration: 8, epoch: 56, best train: 0.93, best val: 0.6432, lr: 0.07093
iteration: 8, epoch: 57, best train: 0.93, best val: 0.6432, lr: 0.07004
iteration: 8, epoch: 58, best train: 0.93, best val: 0.6432, lr: 0.06913
iteration: 8, epoch: 59, best train: 0.93, best val: 0.6432, lr: 0.06822
iteration: 8, epoch: 60, best train: 0.93, best val: 0.6436, lr: 0.06731
iteration: 8, epoch: 61, best train: 0.93, best val: 0.6436, lr: 0.06638
iteration: 8, epoch: 62, best train: 0.93, best val: 0.6436, lr: 0.06545
iteration: 8, epoch: 63, best train: 0.93, best val: 0.6436, lr: 0.06451
iteration: 8, epoch: 64, best train: 0.931, best val: 0.6436, lr: 0.06357
iteration: 8, epoch: 65, best train: 0.932, best val: 0.6436, lr: 0.06262
iteration: 8, epoch: 66, best train: 0.938, best val: 0.6436, lr: 0.06167
iteration: 8, epoch: 67, best train: 0.938, best val: 0.6448, lr: 0.06072
iteration: 8, epoch: 68, best train: 0.938, best val: 0.6529, lr: 0.05975
iteration: 8, epoch: 69, best train: 0.938, best val: 0.6529, lr: 0.05879
iteration: 8, epoch: 70, best train: 0.938, best val: 0.6529, lr: 0.05782
iteration: 8, epoch: 71, best train: 0.938, best val: 0.6529, lr: 0.05685
iteration: 8, epoch: 72, best train: 0.938, best val: 0.6529, lr: 0.05588
iteration: 8, epoch: 73, best train: 0.938, best val: 0.6529, lr: 0.0549
iteration: 8, epoch: 74, best train: 0.938, best val: 0.6529, lr: 0.05392
iteration: 8, epoch: 75, best train: 0.948, best val: 0.6529, lr: 0.05294
iteration: 8, epoch: 76, best train: 0.948, best val: 0.6529, lr: 0.05196
iteration: 8, epoch: 77, best train: 0.948, best val: 0.6529, lr: 0.05098
iteration: 8, epoch: 78, best train: 0.948, best val: 0.6529, lr: 0.05
iteration: 8, epoch: 79, best train: 0.948, best val: 0.6609, lr: 0.04902
iteration: 8, epoch: 80, best train: 0.948, best val: 0.6672, lr: 0.04804
iteration: 8, epoch: 81, best train: 0.948, best val: 0.6672, lr: 0.04706
iteration: 8, epoch: 82, best train: 0.948, best val: 0.6672, lr: 0.04608
iteration: 8, epoch: 83, best train: 0.948, best val: 0.6672, lr: 0.0451
iteration: 8, epoch: 84, best train: 0.953, best val: 0.6672, lr: 0.04412
iteration: 8, epoch: 85, best train: 0.953, best val: 0.6672, lr: 0.04315
iteration: 8, epoch: 86, best train: 0.955, best val: 0.6672, lr: 0.04218
iteration: 8, epoch: 87, best train: 0.955, best val: 0.6672, lr: 0.04121
iteration: 8, epoch: 88, best train: 0.955, best val: 0.6672, lr: 0.04025
iteration: 8, epoch: 89, best train: 0.96, best val: 0.6672, lr: 0.03928
iteration: 8, epoch: 90, best train: 0.967, best val: 0.6672, lr: 0.03833
iteration: 8, epoch: 91, best train: 0.967, best val: 0.6672, lr: 0.03738
iteration: 8, epoch: 92, best train: 0.967, best val: 0.6672, lr: 0.03643
iteration: 8, epoch: 93, best train: 0.967, best val: 0.6672, lr: 0.03549
iteration: 8, epoch: 94, best train: 0.967, best val: 0.6672, lr: 0.03455
iteration: 8, epoch: 95, best train: 0.967, best val: 0.6672, lr: 0.03362
iteration: 8, epoch: 96, best train: 0.967, best val: 0.6672, lr: 0.03269
iteration: 8, epoch: 97, best train: 0.967, best val: 0.6672, lr: 0.03178
iteration: 8, epoch: 98, best train: 0.967, best val: 0.6672, lr: 0.03087
iteration: 8, epoch: 99, best train: 0.967, best val: 0.6672, lr: 0.02996
iteration: 8, epoch: 100, best train: 0.967, best val: 0.6672, lr: 0.02907
iteration: 8, epoch: 101, best train: 0.967, best val: 0.6672, lr: 0.02818
iteration: 8, epoch: 102, best train: 0.967, best val: 0.6672, lr: 0.0273
iteration: 8, epoch: 103, best train: 0.967, best val: 0.6674, lr: 0.02643
iteration: 8, epoch: 104, best train: 0.967, best val: 0.6674, lr: 0.02557
iteration: 8, epoch: 105, best train: 0.967, best val: 0.6674, lr: 0.02472
iteration: 8, epoch: 106, best train: 0.967, best val: 0.6674, lr: 0.02388
iteration: 8, epoch: 107, best train: 0.967, best val: 0.6681, lr: 0.02304
iteration: 8, epoch: 108, best train: 0.967, best val: 0.6692, lr: 0.02222
iteration: 8, epoch: 109, best train: 0.969, best val: 0.6728, lr: 0.02141
iteration: 8, epoch: 110, best train: 0.97, best val: 0.6746, lr: 0.02061
iteration: 8, epoch: 111, best train: 0.97, best val: 0.6746, lr: 0.01982
iteration: 8, epoch: 112, best train: 0.97, best val: 0.6746, lr: 0.01905
iteration: 8, epoch: 113, best train: 0.97, best val: 0.6746, lr: 0.01828
iteration: 8, epoch: 114, best train: 0.97, best val: 0.6746, lr: 0.01753
iteration: 8, epoch: 115, best train: 0.97, best val: 0.6746, lr: 0.01679
iteration: 8, epoch: 116, best train: 0.97, best val: 0.6746, lr: 0.01606
iteration: 8, epoch: 117, best train: 0.97, best val: 0.6746, lr: 0.01535
iteration: 8, epoch: 118, best train: 0.97, best val: 0.6746, lr: 0.01464
iteration: 8, epoch: 119, best train: 0.97, best val: 0.6746, lr: 0.01396
iteration: 8, epoch: 120, best train: 0.97, best val: 0.6746, lr: 0.01328
iteration: 8, epoch: 121, best train: 0.97, best val: 0.6746, lr: 0.01262
iteration: 8, epoch: 122, best train: 0.97, best val: 0.6746, lr: 0.01198
iteration: 8, epoch: 123, best train: 0.97, best val: 0.6746, lr: 0.01135
iteration: 8, epoch: 124, best train: 0.97, best val: 0.6746, lr: 0.01073
iteration: 8, epoch: 125, best train: 0.97, best val: 0.6746, lr: 0.01013
iteration: 8, epoch: 126, best train: 0.97, best val: 0.6746, lr: 0.00955
iteration: 8, epoch: 127, best train: 0.97, best val: 0.6746, lr: 0.00898
iteration: 8, epoch: 128, best train: 0.97, best val: 0.6746, lr: 0.00843
iteration: 8, epoch: 129, best train: 0.97, best val: 0.6746, lr: 0.00789
iteration: 8, epoch: 130, best train: 0.97, best val: 0.6746, lr: 0.00737
iteration: 8, epoch: 131, best train: 0.97, best val: 0.6766, lr: 0.00686
iteration: 8, epoch: 132, best train: 0.97, best val: 0.6769, lr: 0.00638
iteration: 8, epoch: 133, best train: 0.97, best val: 0.6773, lr: 0.0059
iteration: 8, epoch: 134, best train: 0.97, best val: 0.6773, lr: 0.00545
iteration: 8, epoch: 135, best train: 0.97, best val: 0.678, lr: 0.00501
iteration: 8, epoch: 136, best train: 0.974, best val: 0.6811, lr: 0.00459
iteration: 8, epoch: 137, best train: 0.974, best val: 0.6811, lr: 0.00419
iteration: 8, epoch: 138, best train: 0.974, best val: 0.6811, lr: 0.00381
iteration: 8, epoch: 139, best train: 0.974, best val: 0.6811, lr: 0.00344
iteration: 8, epoch: 140, best train: 0.974, best val: 0.6811, lr: 0.00309
iteration: 8, epoch: 141, best train: 0.974, best val: 0.6811, lr: 0.00276
iteration: 8, epoch: 142, best train: 0.974, best val: 0.6811, lr: 0.00245
iteration: 8, epoch: 143, best train: 0.974, best val: 0.6811, lr: 0.00215
iteration: 8, epoch: 144, best train: 0.974, best val: 0.6811, lr: 0.00188
iteration: 8, epoch: 145, best train: 0.974, best val: 0.6811, lr: 0.00162
iteration: 8, epoch: 146, best train: 0.974, best val: 0.6811, lr: 0.00138
iteration: 8, epoch: 147, best train: 0.974, best val: 0.6811, lr: 0.00116
iteration: 8, epoch: 148, best train: 0.974, best val: 0.6811, lr: 0.00096
iteration: 8, epoch: 149, best train: 0.976, best val: 0.6811, lr: 0.00078
iteration: 8, epoch: 150, best train: 0.976, best val: 0.6811, lr: 0.00062
iteration: 8, epoch: 151, best train: 0.976, best val: 0.6811, lr: 0.00047
iteration: 8, epoch: 152, best train: 0.976, best val: 0.6811, lr: 0.00035
iteration: 8, epoch: 153, best train: 0.976, best val: 0.6811, lr: 0.00024
iteration: 8, epoch: 154, best train: 0.976, best val: 0.6811, lr: 0.00015
iteration: 8, epoch: 155, best train: 0.976, best val: 0.6811, lr: 9e-05
iteration: 8, epoch: 156, best train: 0.976, best val: 0.6811, lr: 4e-05
iteration: 8, epoch: 157, best train: 0.976, best val: 0.6811, lr: 1e-05
iteration: 8, epoch: 158, best train: 0.976, best val: 0.6811, lr: 0.0
iteration: 8, epoch: 159, best train: 0.976, best val: 0.6811, lr: 1e-05
------------------------ Checkpoint 28  ------------------------
pre_conv.0.weight_mask 	|	active =  838 	|	total =  1728 	|	layerwise sparsity =  0.4849537037037037
layer1.0.conv1.weight_mask 	|	active =  4947 	|	total =  36864 	|	layerwise sparsity =  0.13419596354166666
layer1.0.conv2.weight_mask 	|	active =  4947 	|	total =  36864 	|	layerwise sparsity =  0.13419596354166666
layer1.1.conv1.weight_mask 	|	active =  4947 	|	total =  36864 	|	layerwise sparsity =  0.13419596354166666
layer1.1.conv2.weight_mask 	|	active =  4947 	|	total =  36864 	|	layerwise sparsity =  0.13419596354166666
layer2.0.conv1.weight_mask 	|	active =  9896 	|	total =  73728 	|	layerwise sparsity =  0.1342230902777778
layer2.0.conv2.weight_mask 	|	active =  19790 	|	total =  147456 	|	layerwise sparsity =  0.1342095269097222
layer2.0.shortcut.0.weight_mask 	|	active =  3970 	|	total =  8192 	|	layerwise sparsity =  0.484619140625
layer2.1.conv1.weight_mask 	|	active =  19790 	|	total =  147456 	|	layerwise sparsity =  0.1342095269097222
layer2.1.conv2.weight_mask 	|	active =  19790 	|	total =  147456 	|	layerwise sparsity =  0.1342095269097222
layer3.0.conv1.weight_mask 	|	active =  39582 	|	total =  294912 	|	layerwise sparsity =  0.13421630859375
layer3.0.conv2.weight_mask 	|	active =  55088 	|	total =  589824 	|	layerwise sparsity =  0.09339735243055555
layer3.0.shortcut.0.weight_mask 	|	active =  4398 	|	total =  32768 	|	layerwise sparsity =  0.13421630859375
layer3.1.conv1.weight_mask 	|	active =  57124 	|	total =  589824 	|	layerwise sparsity =  0.09684922960069445
layer3.1.conv2.weight_mask 	|	active =  60745 	|	total =  589824 	|	layerwise sparsity =  0.10298834906684028
layer4.0.conv1.weight_mask 	|	active =  141261 	|	total =  1179648 	|	layerwise sparsity =  0.11974843343098958
layer4.0.conv2.weight_mask 	|	active =  338169 	|	total =  2359296 	|	layerwise sparsity =  0.14333470662434897
layer4.0.shortcut.0.weight_mask 	|	active =  17592 	|	total =  131072 	|	layerwise sparsity =  0.13421630859375
layer4.1.conv1.weight_mask 	|	active =  356029 	|	total =  2359296 	|	layerwise sparsity =  0.15090476142035592
layer4.1.conv2.weight_mask 	|	active =  370425 	|	total =  2359296 	|	layerwise sparsity =  0.15700658162434897
------------------------ Checkpoint 29  ------------------------
best_val =  0.6811000000000001
------------------------ Checkpoint 30  ------------------------
pruning state: 9
remaining weight at start of iteration =  13.748930033894801
iteration: 9, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 9, epoch: 1, best train: 0.616, best val: 0.1, lr: 0.09991
iteration: 9, epoch: 2, best train: 0.616, best val: 0.1512, lr: 0.09985
iteration: 9, epoch: 3, best train: 0.616, best val: 0.4018, lr: 0.09976
iteration: 9, epoch: 4, best train: 0.626, best val: 0.4018, lr: 0.09965
iteration: 9, epoch: 5, best train: 0.682, best val: 0.4608, lr: 0.09953
iteration: 9, epoch: 6, best train: 0.706, best val: 0.5807, lr: 0.09938
iteration: 9, epoch: 7, best train: 0.733, best val: 0.5807, lr: 0.09922
iteration: 9, epoch: 8, best train: 0.733, best val: 0.5807, lr: 0.09904
iteration: 9, epoch: 9, best train: 0.785, best val: 0.5807, lr: 0.09884
iteration: 9, epoch: 10, best train: 0.786, best val: 0.5807, lr: 0.09862
iteration: 9, epoch: 11, best train: 0.82, best val: 0.6016, lr: 0.09838
iteration: 9, epoch: 12, best train: 0.824, best val: 0.6016, lr: 0.09812
iteration: 9, epoch: 13, best train: 0.824, best val: 0.6016, lr: 0.09785
iteration: 9, epoch: 14, best train: 0.824, best val: 0.6016, lr: 0.09755
iteration: 9, epoch: 15, best train: 0.824, best val: 0.6016, lr: 0.09724
iteration: 9, epoch: 16, best train: 0.824, best val: 0.6016, lr: 0.09691
iteration: 9, epoch: 17, best train: 0.824, best val: 0.6016, lr: 0.09656
iteration: 9, epoch: 18, best train: 0.845, best val: 0.6016, lr: 0.09619
iteration: 9, epoch: 19, best train: 0.845, best val: 0.6016, lr: 0.09581
iteration: 9, epoch: 20, best train: 0.858, best val: 0.6016, lr: 0.09541
iteration: 9, epoch: 21, best train: 0.863, best val: 0.6016, lr: 0.09499
iteration: 9, epoch: 22, best train: 0.863, best val: 0.6143, lr: 0.09455
iteration: 9, epoch: 23, best train: 0.867, best val: 0.6143, lr: 0.0941
iteration: 9, epoch: 24, best train: 0.872, best val: 0.6143, lr: 0.09362
iteration: 9, epoch: 25, best train: 0.885, best val: 0.6143, lr: 0.09314
iteration: 9, epoch: 26, best train: 0.892, best val: 0.6221, lr: 0.09263
iteration: 9, epoch: 27, best train: 0.892, best val: 0.6221, lr: 0.09211
iteration: 9, epoch: 28, best train: 0.892, best val: 0.6221, lr: 0.09157
iteration: 9, epoch: 29, best train: 0.892, best val: 0.6221, lr: 0.09102
iteration: 9, epoch: 30, best train: 0.905, best val: 0.6348, lr: 0.09045
iteration: 9, epoch: 31, best train: 0.905, best val: 0.6348, lr: 0.08987
iteration: 9, epoch: 32, best train: 0.905, best val: 0.6348, lr: 0.08927
iteration: 9, epoch: 33, best train: 0.905, best val: 0.6348, lr: 0.08865
iteration: 9, epoch: 34, best train: 0.905, best val: 0.6348, lr: 0.08802
iteration: 9, epoch: 35, best train: 0.905, best val: 0.6348, lr: 0.08738
iteration: 9, epoch: 36, best train: 0.905, best val: 0.6348, lr: 0.08672
iteration: 9, epoch: 37, best train: 0.905, best val: 0.6348, lr: 0.08604
iteration: 9, epoch: 38, best train: 0.905, best val: 0.6348, lr: 0.08536
iteration: 9, epoch: 39, best train: 0.912, best val: 0.6348, lr: 0.08465
iteration: 9, epoch: 40, best train: 0.912, best val: 0.6348, lr: 0.08394
iteration: 9, epoch: 41, best train: 0.912, best val: 0.6348, lr: 0.08321
iteration: 9, epoch: 42, best train: 0.912, best val: 0.6348, lr: 0.08247
iteration: 9, epoch: 43, best train: 0.912, best val: 0.6348, lr: 0.08172
iteration: 9, epoch: 44, best train: 0.912, best val: 0.6348, lr: 0.08095
iteration: 9, epoch: 45, best train: 0.92, best val: 0.6348, lr: 0.08018
iteration: 9, epoch: 46, best train: 0.931, best val: 0.6401, lr: 0.07939
iteration: 9, epoch: 47, best train: 0.931, best val: 0.6401, lr: 0.07859
iteration: 9, epoch: 48, best train: 0.941, best val: 0.6401, lr: 0.07778
iteration: 9, epoch: 49, best train: 0.941, best val: 0.6401, lr: 0.07696
iteration: 9, epoch: 50, best train: 0.941, best val: 0.6401, lr: 0.07612
iteration: 9, epoch: 51, best train: 0.941, best val: 0.6401, lr: 0.07528
iteration: 9, epoch: 52, best train: 0.941, best val: 0.6401, lr: 0.07443
iteration: 9, epoch: 53, best train: 0.941, best val: 0.6401, lr: 0.07357
iteration: 9, epoch: 54, best train: 0.941, best val: 0.6401, lr: 0.0727
iteration: 9, epoch: 55, best train: 0.941, best val: 0.6401, lr: 0.07182
iteration: 9, epoch: 56, best train: 0.941, best val: 0.6401, lr: 0.07093
iteration: 9, epoch: 57, best train: 0.941, best val: 0.6503, lr: 0.07004
iteration: 9, epoch: 58, best train: 0.941, best val: 0.6621, lr: 0.06913
iteration: 9, epoch: 59, best train: 0.941, best val: 0.6621, lr: 0.06822
iteration: 9, epoch: 60, best train: 0.941, best val: 0.6621, lr: 0.06731
iteration: 9, epoch: 61, best train: 0.941, best val: 0.6621, lr: 0.06638
iteration: 9, epoch: 62, best train: 0.941, best val: 0.6621, lr: 0.06545
iteration: 9, epoch: 63, best train: 0.941, best val: 0.6621, lr: 0.06451
iteration: 9, epoch: 64, best train: 0.941, best val: 0.6621, lr: 0.06357
iteration: 9, epoch: 65, best train: 0.941, best val: 0.6621, lr: 0.06262
iteration: 9, epoch: 66, best train: 0.941, best val: 0.6621, lr: 0.06167
iteration: 9, epoch: 67, best train: 0.941, best val: 0.6621, lr: 0.06072
iteration: 9, epoch: 68, best train: 0.941, best val: 0.6621, lr: 0.05975
iteration: 9, epoch: 69, best train: 0.941, best val: 0.6621, lr: 0.05879
iteration: 9, epoch: 70, best train: 0.941, best val: 0.6621, lr: 0.05782
iteration: 9, epoch: 71, best train: 0.941, best val: 0.6621, lr: 0.05685
iteration: 9, epoch: 72, best train: 0.941, best val: 0.6621, lr: 0.05588
iteration: 9, epoch: 73, best train: 0.944, best val: 0.6621, lr: 0.0549
iteration: 9, epoch: 74, best train: 0.944, best val: 0.6621, lr: 0.05392
iteration: 9, epoch: 75, best train: 0.944, best val: 0.6621, lr: 0.05294
iteration: 9, epoch: 76, best train: 0.944, best val: 0.6621, lr: 0.05196
iteration: 9, epoch: 77, best train: 0.944, best val: 0.6621, lr: 0.05098
iteration: 9, epoch: 78, best train: 0.944, best val: 0.6621, lr: 0.05
iteration: 9, epoch: 79, best train: 0.944, best val: 0.6621, lr: 0.04902
iteration: 9, epoch: 80, best train: 0.944, best val: 0.6621, lr: 0.04804
iteration: 9, epoch: 81, best train: 0.944, best val: 0.6621, lr: 0.04706
iteration: 9, epoch: 82, best train: 0.944, best val: 0.6621, lr: 0.04608
iteration: 9, epoch: 83, best train: 0.944, best val: 0.6621, lr: 0.0451
iteration: 9, epoch: 84, best train: 0.944, best val: 0.6621, lr: 0.04412
iteration: 9, epoch: 85, best train: 0.945, best val: 0.6621, lr: 0.04315
iteration: 9, epoch: 86, best train: 0.945, best val: 0.6621, lr: 0.04218
iteration: 9, epoch: 87, best train: 0.958, best val: 0.6621, lr: 0.04121
iteration: 9, epoch: 88, best train: 0.958, best val: 0.6621, lr: 0.04025
iteration: 9, epoch: 89, best train: 0.958, best val: 0.6621, lr: 0.03928
iteration: 9, epoch: 90, best train: 0.958, best val: 0.6621, lr: 0.03833
iteration: 9, epoch: 91, best train: 0.958, best val: 0.6621, lr: 0.03738
iteration: 9, epoch: 92, best train: 0.958, best val: 0.6621, lr: 0.03643
iteration: 9, epoch: 93, best train: 0.958, best val: 0.6621, lr: 0.03549
iteration: 9, epoch: 94, best train: 0.958, best val: 0.6621, lr: 0.03455
iteration: 9, epoch: 95, best train: 0.967, best val: 0.6645, lr: 0.03362
iteration: 9, epoch: 96, best train: 0.967, best val: 0.6645, lr: 0.03269
iteration: 9, epoch: 97, best train: 0.967, best val: 0.669, lr: 0.03178
iteration: 9, epoch: 98, best train: 0.967, best val: 0.6723, lr: 0.03087
iteration: 9, epoch: 99, best train: 0.967, best val: 0.6723, lr: 0.02996
iteration: 9, epoch: 100, best train: 0.967, best val: 0.6723, lr: 0.02907
iteration: 9, epoch: 101, best train: 0.967, best val: 0.6723, lr: 0.02818
iteration: 9, epoch: 102, best train: 0.967, best val: 0.6723, lr: 0.0273
iteration: 9, epoch: 103, best train: 0.967, best val: 0.6746, lr: 0.02643
iteration: 9, epoch: 104, best train: 0.967, best val: 0.6746, lr: 0.02557
iteration: 9, epoch: 105, best train: 0.967, best val: 0.6746, lr: 0.02472
iteration: 9, epoch: 106, best train: 0.967, best val: 0.6746, lr: 0.02388
iteration: 9, epoch: 107, best train: 0.967, best val: 0.6746, lr: 0.02304
iteration: 9, epoch: 108, best train: 0.967, best val: 0.6746, lr: 0.02222
iteration: 9, epoch: 109, best train: 0.967, best val: 0.6746, lr: 0.02141
iteration: 9, epoch: 110, best train: 0.967, best val: 0.6746, lr: 0.02061
iteration: 9, epoch: 111, best train: 0.967, best val: 0.6746, lr: 0.01982
iteration: 9, epoch: 112, best train: 0.967, best val: 0.6746, lr: 0.01905
iteration: 9, epoch: 113, best train: 0.967, best val: 0.6746, lr: 0.01828
iteration: 9, epoch: 114, best train: 0.969, best val: 0.6746, lr: 0.01753
iteration: 9, epoch: 115, best train: 0.969, best val: 0.6746, lr: 0.01679
iteration: 9, epoch: 116, best train: 0.97, best val: 0.6746, lr: 0.01606
iteration: 9, epoch: 117, best train: 0.97, best val: 0.6746, lr: 0.01535
iteration: 9, epoch: 118, best train: 0.97, best val: 0.6746, lr: 0.01464
iteration: 9, epoch: 119, best train: 0.97, best val: 0.6746, lr: 0.01396
iteration: 9, epoch: 120, best train: 0.97, best val: 0.6746, lr: 0.01328
iteration: 9, epoch: 121, best train: 0.97, best val: 0.6746, lr: 0.01262
iteration: 9, epoch: 122, best train: 0.97, best val: 0.6746, lr: 0.01198
iteration: 9, epoch: 123, best train: 0.973, best val: 0.6746, lr: 0.01135
iteration: 9, epoch: 124, best train: 0.973, best val: 0.6746, lr: 0.01073
iteration: 9, epoch: 125, best train: 0.973, best val: 0.6746, lr: 0.01013
iteration: 9, epoch: 126, best train: 0.973, best val: 0.6746, lr: 0.00955
iteration: 9, epoch: 127, best train: 0.973, best val: 0.6746, lr: 0.00898
iteration: 9, epoch: 128, best train: 0.973, best val: 0.6746, lr: 0.00843
iteration: 9, epoch: 129, best train: 0.973, best val: 0.6746, lr: 0.00789
iteration: 9, epoch: 130, best train: 0.973, best val: 0.6746, lr: 0.00737
iteration: 9, epoch: 131, best train: 0.973, best val: 0.6746, lr: 0.00686
iteration: 9, epoch: 132, best train: 0.973, best val: 0.6746, lr: 0.00638
iteration: 9, epoch: 133, best train: 0.973, best val: 0.6746, lr: 0.0059
iteration: 9, epoch: 134, best train: 0.973, best val: 0.6746, lr: 0.00545
iteration: 9, epoch: 135, best train: 0.973, best val: 0.6746, lr: 0.00501
iteration: 9, epoch: 136, best train: 0.973, best val: 0.6746, lr: 0.00459
iteration: 9, epoch: 137, best train: 0.973, best val: 0.6746, lr: 0.00419
iteration: 9, epoch: 138, best train: 0.973, best val: 0.6746, lr: 0.00381
iteration: 9, epoch: 139, best train: 0.973, best val: 0.6752, lr: 0.00344
iteration: 9, epoch: 140, best train: 0.973, best val: 0.6752, lr: 0.00309
iteration: 9, epoch: 141, best train: 0.973, best val: 0.6752, lr: 0.00276
iteration: 9, epoch: 142, best train: 0.973, best val: 0.6753, lr: 0.00245
iteration: 9, epoch: 143, best train: 0.973, best val: 0.6776, lr: 0.00215
iteration: 9, epoch: 144, best train: 0.973, best val: 0.6776, lr: 0.00188
iteration: 9, epoch: 145, best train: 0.973, best val: 0.6776, lr: 0.00162
iteration: 9, epoch: 146, best train: 0.973, best val: 0.6776, lr: 0.00138
iteration: 9, epoch: 147, best train: 0.973, best val: 0.6776, lr: 0.00116
iteration: 9, epoch: 148, best train: 0.973, best val: 0.6776, lr: 0.00096
iteration: 9, epoch: 149, best train: 0.973, best val: 0.6776, lr: 0.00078
iteration: 9, epoch: 150, best train: 0.973, best val: 0.6776, lr: 0.00062
iteration: 9, epoch: 151, best train: 0.973, best val: 0.6776, lr: 0.00047
iteration: 9, epoch: 152, best train: 0.973, best val: 0.6776, lr: 0.00035
iteration: 9, epoch: 153, best train: 0.973, best val: 0.6776, lr: 0.00024
iteration: 9, epoch: 154, best train: 0.973, best val: 0.6776, lr: 0.00015
iteration: 9, epoch: 155, best train: 0.973, best val: 0.6776, lr: 9e-05
iteration: 9, epoch: 156, best train: 0.973, best val: 0.6776, lr: 4e-05
iteration: 9, epoch: 157, best train: 0.973, best val: 0.6776, lr: 1e-05
iteration: 9, epoch: 158, best train: 0.973, best val: 0.6776, lr: 0.0
iteration: 9, epoch: 159, best train: 0.973, best val: 0.6776, lr: 1e-05
------------------------ Checkpoint 31  ------------------------
pre_conv.0.weight_mask 	|	active =  773 	|	total =  1728 	|	layerwise sparsity =  0.44733796296296297
layer1.0.conv1.weight_mask 	|	active =  3958 	|	total =  36864 	|	layerwise sparsity =  0.10736762152777778
layer1.0.conv2.weight_mask 	|	active =  3958 	|	total =  36864 	|	layerwise sparsity =  0.10736762152777778
layer1.1.conv1.weight_mask 	|	active =  3958 	|	total =  36864 	|	layerwise sparsity =  0.10736762152777778
layer1.1.conv2.weight_mask 	|	active =  3958 	|	total =  36864 	|	layerwise sparsity =  0.10736762152777778
layer2.0.conv1.weight_mask 	|	active =  7917 	|	total =  73728 	|	layerwise sparsity =  0.10738118489583333
layer2.0.conv2.weight_mask 	|	active =  15832 	|	total =  147456 	|	layerwise sparsity =  0.10736762152777778
layer2.0.shortcut.0.weight_mask 	|	active =  3663 	|	total =  8192 	|	layerwise sparsity =  0.4471435546875
layer2.1.conv1.weight_mask 	|	active =  15832 	|	total =  147456 	|	layerwise sparsity =  0.10736762152777778
layer2.1.conv2.weight_mask 	|	active =  15832 	|	total =  147456 	|	layerwise sparsity =  0.10736762152777778
layer3.0.conv1.weight_mask 	|	active =  31666 	|	total =  294912 	|	layerwise sparsity =  0.10737440321180555
layer3.0.conv2.weight_mask 	|	active =  42330 	|	total =  589824 	|	layerwise sparsity =  0.07176717122395833
layer3.0.shortcut.0.weight_mask 	|	active =  3518 	|	total =  32768 	|	layerwise sparsity =  0.10736083984375
layer3.1.conv1.weight_mask 	|	active =  44072 	|	total =  589824 	|	layerwise sparsity =  0.07472059461805555
layer3.1.conv2.weight_mask 	|	active =  47187 	|	total =  589824 	|	layerwise sparsity =  0.0800018310546875
layer4.0.conv1.weight_mask 	|	active =  111585 	|	total =  1179648 	|	layerwise sparsity =  0.09459177652994792
layer4.0.conv2.weight_mask 	|	active =  272518 	|	total =  2359296 	|	layerwise sparsity =  0.11550818549262153
layer4.0.shortcut.0.weight_mask 	|	active =  14074 	|	total =  131072 	|	layerwise sparsity =  0.1073760986328125
layer4.1.conv1.weight_mask 	|	active =  288556 	|	total =  2359296 	|	layerwise sparsity =  0.12230597601996528
layer4.1.conv2.weight_mask 	|	active =  301549 	|	total =  2359296 	|	layerwise sparsity =  0.12781312730577257
------------------------ Checkpoint 32  ------------------------
best_val =  0.6776000000000001
------------------------ Checkpoint 33  ------------------------
pruning state: 10
remaining weight at start of iteration =  11.046781714010423
iteration: 10, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 10, epoch: 1, best train: 0.69, best val: 0.101, lr: 0.09991
iteration: 10, epoch: 2, best train: 0.69, best val: 0.1139, lr: 0.09985
iteration: 10, epoch: 3, best train: 0.69, best val: 0.3677, lr: 0.09976
iteration: 10, epoch: 4, best train: 0.69, best val: 0.5232, lr: 0.09965
iteration: 10, epoch: 5, best train: 0.69, best val: 0.5232, lr: 0.09953
iteration: 10, epoch: 6, best train: 0.758, best val: 0.5755, lr: 0.09938
iteration: 10, epoch: 7, best train: 0.775, best val: 0.5892, lr: 0.09922
iteration: 10, epoch: 8, best train: 0.789, best val: 0.5892, lr: 0.09904
iteration: 10, epoch: 9, best train: 0.79, best val: 0.5892, lr: 0.09884
iteration: 10, epoch: 10, best train: 0.79, best val: 0.5892, lr: 0.09862
iteration: 10, epoch: 11, best train: 0.791, best val: 0.5892, lr: 0.09838
iteration: 10, epoch: 12, best train: 0.818, best val: 0.5892, lr: 0.09812
iteration: 10, epoch: 13, best train: 0.835, best val: 0.5921, lr: 0.09785
iteration: 10, epoch: 14, best train: 0.847, best val: 0.5921, lr: 0.09755
iteration: 10, epoch: 15, best train: 0.847, best val: 0.5921, lr: 0.09724
iteration: 10, epoch: 16, best train: 0.847, best val: 0.6042, lr: 0.09691
iteration: 10, epoch: 17, best train: 0.847, best val: 0.6118, lr: 0.09656
iteration: 10, epoch: 18, best train: 0.861, best val: 0.6118, lr: 0.09619
iteration: 10, epoch: 19, best train: 0.861, best val: 0.6118, lr: 0.09581
iteration: 10, epoch: 20, best train: 0.861, best val: 0.613, lr: 0.09541
iteration: 10, epoch: 21, best train: 0.865, best val: 0.613, lr: 0.09499
iteration: 10, epoch: 22, best train: 0.865, best val: 0.6166, lr: 0.09455
iteration: 10, epoch: 23, best train: 0.878, best val: 0.6166, lr: 0.0941
iteration: 10, epoch: 24, best train: 0.885, best val: 0.6166, lr: 0.09362
iteration: 10, epoch: 25, best train: 0.886, best val: 0.6212, lr: 0.09314
iteration: 10, epoch: 26, best train: 0.886, best val: 0.6212, lr: 0.09263
iteration: 10, epoch: 27, best train: 0.886, best val: 0.6212, lr: 0.09211
iteration: 10, epoch: 28, best train: 0.891, best val: 0.6212, lr: 0.09157
iteration: 10, epoch: 29, best train: 0.891, best val: 0.6257, lr: 0.09102
iteration: 10, epoch: 30, best train: 0.909, best val: 0.6257, lr: 0.09045
iteration: 10, epoch: 31, best train: 0.909, best val: 0.6257, lr: 0.08987
iteration: 10, epoch: 32, best train: 0.909, best val: 0.6257, lr: 0.08927
iteration: 10, epoch: 33, best train: 0.909, best val: 0.6257, lr: 0.08865
iteration: 10, epoch: 34, best train: 0.909, best val: 0.6257, lr: 0.08802
iteration: 10, epoch: 35, best train: 0.909, best val: 0.6257, lr: 0.08738
iteration: 10, epoch: 36, best train: 0.909, best val: 0.6257, lr: 0.08672
iteration: 10, epoch: 37, best train: 0.909, best val: 0.6294, lr: 0.08604
iteration: 10, epoch: 38, best train: 0.91, best val: 0.6294, lr: 0.08536
iteration: 10, epoch: 39, best train: 0.91, best val: 0.6294, lr: 0.08465
iteration: 10, epoch: 40, best train: 0.925, best val: 0.6294, lr: 0.08394
iteration: 10, epoch: 41, best train: 0.925, best val: 0.6294, lr: 0.08321
iteration: 10, epoch: 42, best train: 0.925, best val: 0.6294, lr: 0.08247
iteration: 10, epoch: 43, best train: 0.925, best val: 0.6294, lr: 0.08172
iteration: 10, epoch: 44, best train: 0.925, best val: 0.6405, lr: 0.08095
iteration: 10, epoch: 45, best train: 0.925, best val: 0.6405, lr: 0.08018
iteration: 10, epoch: 46, best train: 0.925, best val: 0.6405, lr: 0.07939
iteration: 10, epoch: 47, best train: 0.925, best val: 0.6405, lr: 0.07859
iteration: 10, epoch: 48, best train: 0.925, best val: 0.6405, lr: 0.07778
iteration: 10, epoch: 49, best train: 0.925, best val: 0.6405, lr: 0.07696
iteration: 10, epoch: 50, best train: 0.928, best val: 0.6405, lr: 0.07612
iteration: 10, epoch: 51, best train: 0.928, best val: 0.6405, lr: 0.07528
iteration: 10, epoch: 52, best train: 0.928, best val: 0.6405, lr: 0.07443
iteration: 10, epoch: 53, best train: 0.928, best val: 0.641, lr: 0.07357
iteration: 10, epoch: 54, best train: 0.928, best val: 0.6486, lr: 0.0727
iteration: 10, epoch: 55, best train: 0.928, best val: 0.6486, lr: 0.07182
iteration: 10, epoch: 56, best train: 0.928, best val: 0.6522, lr: 0.07093
iteration: 10, epoch: 57, best train: 0.938, best val: 0.6522, lr: 0.07004
iteration: 10, epoch: 58, best train: 0.941, best val: 0.6522, lr: 0.06913
iteration: 10, epoch: 59, best train: 0.941, best val: 0.6522, lr: 0.06822
iteration: 10, epoch: 60, best train: 0.941, best val: 0.6522, lr: 0.06731
iteration: 10, epoch: 61, best train: 0.941, best val: 0.6522, lr: 0.06638
iteration: 10, epoch: 62, best train: 0.941, best val: 0.6576, lr: 0.06545
iteration: 10, epoch: 63, best train: 0.945, best val: 0.6576, lr: 0.06451
iteration: 10, epoch: 64, best train: 0.95, best val: 0.6576, lr: 0.06357
iteration: 10, epoch: 65, best train: 0.95, best val: 0.6576, lr: 0.06262
iteration: 10, epoch: 66, best train: 0.95, best val: 0.6576, lr: 0.06167
iteration: 10, epoch: 67, best train: 0.95, best val: 0.6576, lr: 0.06072
iteration: 10, epoch: 68, best train: 0.95, best val: 0.6576, lr: 0.05975
iteration: 10, epoch: 69, best train: 0.95, best val: 0.6576, lr: 0.05879
iteration: 10, epoch: 70, best train: 0.95, best val: 0.6579, lr: 0.05782
iteration: 10, epoch: 71, best train: 0.95, best val: 0.6579, lr: 0.05685
iteration: 10, epoch: 72, best train: 0.95, best val: 0.6579, lr: 0.05588
iteration: 10, epoch: 73, best train: 0.95, best val: 0.6579, lr: 0.0549
iteration: 10, epoch: 74, best train: 0.95, best val: 0.6579, lr: 0.05392
iteration: 10, epoch: 75, best train: 0.95, best val: 0.6579, lr: 0.05294
iteration: 10, epoch: 76, best train: 0.95, best val: 0.6579, lr: 0.05196
iteration: 10, epoch: 77, best train: 0.95, best val: 0.6579, lr: 0.05098
iteration: 10, epoch: 78, best train: 0.957, best val: 0.6579, lr: 0.05
iteration: 10, epoch: 79, best train: 0.957, best val: 0.6579, lr: 0.04902
iteration: 10, epoch: 80, best train: 0.958, best val: 0.6579, lr: 0.04804
iteration: 10, epoch: 81, best train: 0.958, best val: 0.6579, lr: 0.04706
iteration: 10, epoch: 82, best train: 0.958, best val: 0.6614, lr: 0.04608
iteration: 10, epoch: 83, best train: 0.958, best val: 0.6614, lr: 0.0451
iteration: 10, epoch: 84, best train: 0.958, best val: 0.6614, lr: 0.04412
iteration: 10, epoch: 85, best train: 0.958, best val: 0.6614, lr: 0.04315
iteration: 10, epoch: 86, best train: 0.958, best val: 0.6614, lr: 0.04218
iteration: 10, epoch: 87, best train: 0.958, best val: 0.6614, lr: 0.04121
iteration: 10, epoch: 88, best train: 0.958, best val: 0.6614, lr: 0.04025
iteration: 10, epoch: 89, best train: 0.958, best val: 0.6614, lr: 0.03928
iteration: 10, epoch: 90, best train: 0.965, best val: 0.6614, lr: 0.03833
iteration: 10, epoch: 91, best train: 0.965, best val: 0.6647, lr: 0.03738
iteration: 10, epoch: 92, best train: 0.965, best val: 0.6647, lr: 0.03643
iteration: 10, epoch: 93, best train: 0.965, best val: 0.6647, lr: 0.03549
iteration: 10, epoch: 94, best train: 0.965, best val: 0.6678, lr: 0.03455
iteration: 10, epoch: 95, best train: 0.965, best val: 0.6695, lr: 0.03362
iteration: 10, epoch: 96, best train: 0.965, best val: 0.6716, lr: 0.03269
iteration: 10, epoch: 97, best train: 0.965, best val: 0.6716, lr: 0.03178
iteration: 10, epoch: 98, best train: 0.965, best val: 0.6716, lr: 0.03087
iteration: 10, epoch: 99, best train: 0.965, best val: 0.6716, lr: 0.02996
iteration: 10, epoch: 100, best train: 0.965, best val: 0.6759, lr: 0.02907
iteration: 10, epoch: 101, best train: 0.965, best val: 0.6759, lr: 0.02818
iteration: 10, epoch: 102, best train: 0.965, best val: 0.6759, lr: 0.0273
iteration: 10, epoch: 103, best train: 0.965, best val: 0.6759, lr: 0.02643
iteration: 10, epoch: 104, best train: 0.965, best val: 0.6759, lr: 0.02557
iteration: 10, epoch: 105, best train: 0.965, best val: 0.6759, lr: 0.02472
iteration: 10, epoch: 106, best train: 0.965, best val: 0.6781, lr: 0.02388
iteration: 10, epoch: 107, best train: 0.965, best val: 0.6781, lr: 0.02304
iteration: 10, epoch: 108, best train: 0.965, best val: 0.6781, lr: 0.02222
iteration: 10, epoch: 109, best train: 0.965, best val: 0.6781, lr: 0.02141
iteration: 10, epoch: 110, best train: 0.965, best val: 0.6781, lr: 0.02061
iteration: 10, epoch: 111, best train: 0.965, best val: 0.6781, lr: 0.01982
iteration: 10, epoch: 112, best train: 0.965, best val: 0.6781, lr: 0.01905
iteration: 10, epoch: 113, best train: 0.965, best val: 0.6781, lr: 0.01828
iteration: 10, epoch: 114, best train: 0.965, best val: 0.6781, lr: 0.01753
iteration: 10, epoch: 115, best train: 0.965, best val: 0.6781, lr: 0.01679
iteration: 10, epoch: 116, best train: 0.965, best val: 0.68, lr: 0.01606
iteration: 10, epoch: 117, best train: 0.965, best val: 0.68, lr: 0.01535
iteration: 10, epoch: 118, best train: 0.966, best val: 0.68, lr: 0.01464
iteration: 10, epoch: 119, best train: 0.97, best val: 0.68, lr: 0.01396
iteration: 10, epoch: 120, best train: 0.97, best val: 0.68, lr: 0.01328
iteration: 10, epoch: 121, best train: 0.97, best val: 0.68, lr: 0.01262
iteration: 10, epoch: 122, best train: 0.97, best val: 0.68, lr: 0.01198
iteration: 10, epoch: 123, best train: 0.97, best val: 0.6816, lr: 0.01135
iteration: 10, epoch: 124, best train: 0.97, best val: 0.6816, lr: 0.01073
iteration: 10, epoch: 125, best train: 0.97, best val: 0.6816, lr: 0.01013
iteration: 10, epoch: 126, best train: 0.97, best val: 0.6816, lr: 0.00955
iteration: 10, epoch: 127, best train: 0.97, best val: 0.6821, lr: 0.00898
iteration: 10, epoch: 128, best train: 0.97, best val: 0.6836, lr: 0.00843
iteration: 10, epoch: 129, best train: 0.97, best val: 0.6836, lr: 0.00789
iteration: 10, epoch: 130, best train: 0.97, best val: 0.6836, lr: 0.00737
iteration: 10, epoch: 131, best train: 0.97, best val: 0.6836, lr: 0.00686
iteration: 10, epoch: 132, best train: 0.97, best val: 0.6836, lr: 0.00638
iteration: 10, epoch: 133, best train: 0.97, best val: 0.6836, lr: 0.0059
iteration: 10, epoch: 134, best train: 0.97, best val: 0.684, lr: 0.00545
iteration: 10, epoch: 135, best train: 0.97, best val: 0.684, lr: 0.00501
iteration: 10, epoch: 136, best train: 0.97, best val: 0.684, lr: 0.00459
iteration: 10, epoch: 137, best train: 0.97, best val: 0.684, lr: 0.00419
iteration: 10, epoch: 138, best train: 0.97, best val: 0.684, lr: 0.00381
iteration: 10, epoch: 139, best train: 0.97, best val: 0.684, lr: 0.00344
iteration: 10, epoch: 140, best train: 0.972, best val: 0.684, lr: 0.00309
iteration: 10, epoch: 141, best train: 0.972, best val: 0.684, lr: 0.00276
iteration: 10, epoch: 142, best train: 0.972, best val: 0.684, lr: 0.00245
iteration: 10, epoch: 143, best train: 0.972, best val: 0.684, lr: 0.00215
iteration: 10, epoch: 144, best train: 0.972, best val: 0.684, lr: 0.00188
iteration: 10, epoch: 145, best train: 0.972, best val: 0.684, lr: 0.00162
iteration: 10, epoch: 146, best train: 0.972, best val: 0.684, lr: 0.00138
iteration: 10, epoch: 147, best train: 0.972, best val: 0.684, lr: 0.00116
iteration: 10, epoch: 148, best train: 0.972, best val: 0.684, lr: 0.00096
iteration: 10, epoch: 149, best train: 0.972, best val: 0.684, lr: 0.00078
iteration: 10, epoch: 150, best train: 0.973, best val: 0.684, lr: 0.00062
iteration: 10, epoch: 151, best train: 0.973, best val: 0.684, lr: 0.00047
iteration: 10, epoch: 152, best train: 0.973, best val: 0.684, lr: 0.00035
iteration: 10, epoch: 153, best train: 0.973, best val: 0.684, lr: 0.00024
iteration: 10, epoch: 154, best train: 0.973, best val: 0.684, lr: 0.00015
iteration: 10, epoch: 155, best train: 0.973, best val: 0.684, lr: 9e-05
iteration: 10, epoch: 156, best train: 0.973, best val: 0.684, lr: 4e-05
iteration: 10, epoch: 157, best train: 0.973, best val: 0.684, lr: 1e-05
iteration: 10, epoch: 158, best train: 0.973, best val: 0.684, lr: 0.0
iteration: 10, epoch: 159, best train: 0.976, best val: 0.684, lr: 1e-05
------------------------ Checkpoint 34  ------------------------
pre_conv.0.weight_mask 	|	active =  713 	|	total =  1728 	|	layerwise sparsity =  0.41261574074074076
layer1.0.conv1.weight_mask 	|	active =  3166 	|	total =  36864 	|	layerwise sparsity =  0.08588324652777778
layer1.0.conv2.weight_mask 	|	active =  3166 	|	total =  36864 	|	layerwise sparsity =  0.08588324652777778
layer1.1.conv1.weight_mask 	|	active =  3166 	|	total =  36864 	|	layerwise sparsity =  0.08588324652777778
layer1.1.conv2.weight_mask 	|	active =  3166 	|	total =  36864 	|	layerwise sparsity =  0.08588324652777778
layer2.0.conv1.weight_mask 	|	active =  6334 	|	total =  73728 	|	layerwise sparsity =  0.0859103732638889
layer2.0.conv2.weight_mask 	|	active =  12666 	|	total =  147456 	|	layerwise sparsity =  0.08589680989583333
layer2.0.shortcut.0.weight_mask 	|	active =  3380 	|	total =  8192 	|	layerwise sparsity =  0.41259765625
layer2.1.conv1.weight_mask 	|	active =  12666 	|	total =  147456 	|	layerwise sparsity =  0.08589680989583333
layer2.1.conv2.weight_mask 	|	active =  12666 	|	total =  147456 	|	layerwise sparsity =  0.08589680989583333
layer3.0.conv1.weight_mask 	|	active =  25333 	|	total =  294912 	|	layerwise sparsity =  0.08590020073784722
layer3.0.conv2.weight_mask 	|	active =  32527 	|	total =  589824 	|	layerwise sparsity =  0.05514695909288195
layer3.0.shortcut.0.weight_mask 	|	active =  2814 	|	total =  32768 	|	layerwise sparsity =  0.08587646484375
layer3.1.conv1.weight_mask 	|	active =  34002 	|	total =  589824 	|	layerwise sparsity =  0.057647705078125
layer3.1.conv2.weight_mask 	|	active =  36655 	|	total =  589824 	|	layerwise sparsity =  0.06214565700954861
layer4.0.conv1.weight_mask 	|	active =  88144 	|	total =  1179648 	|	layerwise sparsity =  0.07472059461805555
layer4.0.conv2.weight_mask 	|	active =  219612 	|	total =  2359296 	|	layerwise sparsity =  0.09308369954427083
layer4.0.shortcut.0.weight_mask 	|	active =  11259 	|	total =  131072 	|	layerwise sparsity =  0.08589935302734375
layer4.1.conv1.weight_mask 	|	active =  233870 	|	total =  2359296 	|	layerwise sparsity =  0.0991270277235243
layer4.1.conv2.weight_mask 	|	active =  245480 	|	total =  2359296 	|	layerwise sparsity =  0.10404798719618055
------------------------ Checkpoint 35  ------------------------
best_val =  0.684
------------------------ Checkpoint 36  ------------------------
pruning state: 11
remaining weight at start of iteration =  8.878612793425212
iteration: 11, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 11, epoch: 1, best train: 0.652, best val: 0.1, lr: 0.09991
iteration: 11, epoch: 2, best train: 0.652, best val: 0.1311, lr: 0.09985
iteration: 11, epoch: 3, best train: 0.652, best val: 0.2283, lr: 0.09976
iteration: 11, epoch: 4, best train: 0.652, best val: 0.4373, lr: 0.09965
iteration: 11, epoch: 5, best train: 0.657, best val: 0.5292, lr: 0.09953
iteration: 11, epoch: 6, best train: 0.707, best val: 0.5623, lr: 0.09938
iteration: 11, epoch: 7, best train: 0.738, best val: 0.5623, lr: 0.09922
iteration: 11, epoch: 8, best train: 0.738, best val: 0.5623, lr: 0.09904
iteration: 11, epoch: 9, best train: 0.779, best val: 0.5676, lr: 0.09884
iteration: 11, epoch: 10, best train: 0.793, best val: 0.577, lr: 0.09862
iteration: 11, epoch: 11, best train: 0.795, best val: 0.577, lr: 0.09838
iteration: 11, epoch: 12, best train: 0.814, best val: 0.577, lr: 0.09812
iteration: 11, epoch: 13, best train: 0.821, best val: 0.577, lr: 0.09785
iteration: 11, epoch: 14, best train: 0.831, best val: 0.5822, lr: 0.09755
iteration: 11, epoch: 15, best train: 0.849, best val: 0.5822, lr: 0.09724
iteration: 11, epoch: 16, best train: 0.849, best val: 0.5878, lr: 0.09691
iteration: 11, epoch: 17, best train: 0.849, best val: 0.5878, lr: 0.09656
iteration: 11, epoch: 18, best train: 0.868, best val: 0.5878, lr: 0.09619
iteration: 11, epoch: 19, best train: 0.868, best val: 0.6209, lr: 0.09581
iteration: 11, epoch: 20, best train: 0.878, best val: 0.6209, lr: 0.09541
iteration: 11, epoch: 21, best train: 0.878, best val: 0.6209, lr: 0.09499
iteration: 11, epoch: 22, best train: 0.878, best val: 0.6209, lr: 0.09455
iteration: 11, epoch: 23, best train: 0.889, best val: 0.6209, lr: 0.0941
iteration: 11, epoch: 24, best train: 0.901, best val: 0.6209, lr: 0.09362
iteration: 11, epoch: 25, best train: 0.904, best val: 0.6209, lr: 0.09314
iteration: 11, epoch: 26, best train: 0.904, best val: 0.6209, lr: 0.09263
iteration: 11, epoch: 27, best train: 0.904, best val: 0.6209, lr: 0.09211
iteration: 11, epoch: 28, best train: 0.904, best val: 0.6222, lr: 0.09157
iteration: 11, epoch: 29, best train: 0.91, best val: 0.6222, lr: 0.09102
iteration: 11, epoch: 30, best train: 0.91, best val: 0.6222, lr: 0.09045
iteration: 11, epoch: 31, best train: 0.91, best val: 0.6222, lr: 0.08987
iteration: 11, epoch: 32, best train: 0.91, best val: 0.6222, lr: 0.08927
iteration: 11, epoch: 33, best train: 0.91, best val: 0.6222, lr: 0.08865
iteration: 11, epoch: 34, best train: 0.91, best val: 0.6284, lr: 0.08802
iteration: 11, epoch: 35, best train: 0.91, best val: 0.6284, lr: 0.08738
iteration: 11, epoch: 36, best train: 0.91, best val: 0.6284, lr: 0.08672
iteration: 11, epoch: 37, best train: 0.91, best val: 0.63, lr: 0.08604
iteration: 11, epoch: 38, best train: 0.91, best val: 0.632, lr: 0.08536
iteration: 11, epoch: 39, best train: 0.91, best val: 0.632, lr: 0.08465
iteration: 11, epoch: 40, best train: 0.91, best val: 0.632, lr: 0.08394
iteration: 11, epoch: 41, best train: 0.91, best val: 0.632, lr: 0.08321
iteration: 11, epoch: 42, best train: 0.91, best val: 0.632, lr: 0.08247
iteration: 11, epoch: 43, best train: 0.924, best val: 0.632, lr: 0.08172
iteration: 11, epoch: 44, best train: 0.928, best val: 0.6425, lr: 0.08095
iteration: 11, epoch: 45, best train: 0.932, best val: 0.6425, lr: 0.08018
iteration: 11, epoch: 46, best train: 0.932, best val: 0.6425, lr: 0.07939
iteration: 11, epoch: 47, best train: 0.932, best val: 0.6425, lr: 0.07859
iteration: 11, epoch: 48, best train: 0.932, best val: 0.6425, lr: 0.07778
iteration: 11, epoch: 49, best train: 0.932, best val: 0.6425, lr: 0.07696
iteration: 11, epoch: 50, best train: 0.932, best val: 0.6425, lr: 0.07612
iteration: 11, epoch: 51, best train: 0.932, best val: 0.6456, lr: 0.07528
iteration: 11, epoch: 52, best train: 0.932, best val: 0.6456, lr: 0.07443
iteration: 11, epoch: 53, best train: 0.932, best val: 0.6456, lr: 0.07357
iteration: 11, epoch: 54, best train: 0.932, best val: 0.6456, lr: 0.0727
iteration: 11, epoch: 55, best train: 0.932, best val: 0.6456, lr: 0.07182
iteration: 11, epoch: 56, best train: 0.932, best val: 0.6513, lr: 0.07093
iteration: 11, epoch: 57, best train: 0.932, best val: 0.6513, lr: 0.07004
iteration: 11, epoch: 58, best train: 0.932, best val: 0.6513, lr: 0.06913
iteration: 11, epoch: 59, best train: 0.932, best val: 0.6513, lr: 0.06822
iteration: 11, epoch: 60, best train: 0.936, best val: 0.6513, lr: 0.06731
iteration: 11, epoch: 61, best train: 0.94, best val: 0.6519, lr: 0.06638
iteration: 11, epoch: 62, best train: 0.948, best val: 0.6576, lr: 0.06545
iteration: 11, epoch: 63, best train: 0.962, best val: 0.6576, lr: 0.06451
iteration: 11, epoch: 64, best train: 0.962, best val: 0.661, lr: 0.06357
iteration: 11, epoch: 65, best train: 0.962, best val: 0.661, lr: 0.06262
iteration: 11, epoch: 66, best train: 0.962, best val: 0.661, lr: 0.06167
iteration: 11, epoch: 67, best train: 0.962, best val: 0.661, lr: 0.06072
iteration: 11, epoch: 68, best train: 0.962, best val: 0.661, lr: 0.05975
iteration: 11, epoch: 69, best train: 0.962, best val: 0.661, lr: 0.05879
iteration: 11, epoch: 70, best train: 0.962, best val: 0.661, lr: 0.05782
iteration: 11, epoch: 71, best train: 0.962, best val: 0.661, lr: 0.05685
iteration: 11, epoch: 72, best train: 0.962, best val: 0.661, lr: 0.05588
iteration: 11, epoch: 73, best train: 0.962, best val: 0.661, lr: 0.0549
iteration: 11, epoch: 74, best train: 0.962, best val: 0.6634, lr: 0.05392
iteration: 11, epoch: 75, best train: 0.962, best val: 0.6637, lr: 0.05294
iteration: 11, epoch: 76, best train: 0.962, best val: 0.6637, lr: 0.05196
iteration: 11, epoch: 77, best train: 0.962, best val: 0.6637, lr: 0.05098
iteration: 11, epoch: 78, best train: 0.962, best val: 0.6637, lr: 0.05
iteration: 11, epoch: 79, best train: 0.962, best val: 0.6637, lr: 0.04902
iteration: 11, epoch: 80, best train: 0.962, best val: 0.6637, lr: 0.04804
iteration: 11, epoch: 81, best train: 0.962, best val: 0.6637, lr: 0.04706
iteration: 11, epoch: 82, best train: 0.962, best val: 0.6637, lr: 0.04608
iteration: 11, epoch: 83, best train: 0.962, best val: 0.6678, lr: 0.0451
iteration: 11, epoch: 84, best train: 0.962, best val: 0.6678, lr: 0.04412
iteration: 11, epoch: 85, best train: 0.962, best val: 0.6722, lr: 0.04315
iteration: 11, epoch: 86, best train: 0.962, best val: 0.6722, lr: 0.04218
iteration: 11, epoch: 87, best train: 0.962, best val: 0.6722, lr: 0.04121
iteration: 11, epoch: 88, best train: 0.962, best val: 0.6722, lr: 0.04025
iteration: 11, epoch: 89, best train: 0.962, best val: 0.6722, lr: 0.03928
iteration: 11, epoch: 90, best train: 0.965, best val: 0.6722, lr: 0.03833
iteration: 11, epoch: 91, best train: 0.965, best val: 0.6734, lr: 0.03738
iteration: 11, epoch: 92, best train: 0.965, best val: 0.6734, lr: 0.03643
iteration: 11, epoch: 93, best train: 0.965, best val: 0.6734, lr: 0.03549
iteration: 11, epoch: 94, best train: 0.965, best val: 0.6734, lr: 0.03455
iteration: 11, epoch: 95, best train: 0.965, best val: 0.6734, lr: 0.03362
iteration: 11, epoch: 96, best train: 0.966, best val: 0.6734, lr: 0.03269
iteration: 11, epoch: 97, best train: 0.966, best val: 0.6734, lr: 0.03178
iteration: 11, epoch: 98, best train: 0.966, best val: 0.6734, lr: 0.03087
iteration: 11, epoch: 99, best train: 0.966, best val: 0.6734, lr: 0.02996
iteration: 11, epoch: 100, best train: 0.966, best val: 0.6734, lr: 0.02907
iteration: 11, epoch: 101, best train: 0.968, best val: 0.6734, lr: 0.02818
iteration: 11, epoch: 102, best train: 0.968, best val: 0.6793, lr: 0.0273
iteration: 11, epoch: 103, best train: 0.968, best val: 0.6793, lr: 0.02643
iteration: 11, epoch: 104, best train: 0.968, best val: 0.6793, lr: 0.02557
iteration: 11, epoch: 105, best train: 0.968, best val: 0.6793, lr: 0.02472
iteration: 11, epoch: 106, best train: 0.968, best val: 0.6793, lr: 0.02388
iteration: 11, epoch: 107, best train: 0.968, best val: 0.6793, lr: 0.02304
iteration: 11, epoch: 108, best train: 0.968, best val: 0.6808, lr: 0.02222
iteration: 11, epoch: 109, best train: 0.968, best val: 0.6808, lr: 0.02141
iteration: 11, epoch: 110, best train: 0.968, best val: 0.6808, lr: 0.02061
iteration: 11, epoch: 111, best train: 0.968, best val: 0.6808, lr: 0.01982
iteration: 11, epoch: 112, best train: 0.968, best val: 0.6808, lr: 0.01905
iteration: 11, epoch: 113, best train: 0.968, best val: 0.6808, lr: 0.01828
iteration: 11, epoch: 114, best train: 0.968, best val: 0.6808, lr: 0.01753
iteration: 11, epoch: 115, best train: 0.968, best val: 0.6808, lr: 0.01679
iteration: 11, epoch: 116, best train: 0.968, best val: 0.6808, lr: 0.01606
iteration: 11, epoch: 117, best train: 0.968, best val: 0.6808, lr: 0.01535
iteration: 11, epoch: 118, best train: 0.968, best val: 0.6808, lr: 0.01464
iteration: 11, epoch: 119, best train: 0.968, best val: 0.6808, lr: 0.01396
iteration: 11, epoch: 120, best train: 0.972, best val: 0.6808, lr: 0.01328
iteration: 11, epoch: 121, best train: 0.972, best val: 0.6808, lr: 0.01262
iteration: 11, epoch: 122, best train: 0.972, best val: 0.6808, lr: 0.01198
iteration: 11, epoch: 123, best train: 0.972, best val: 0.6808, lr: 0.01135
iteration: 11, epoch: 124, best train: 0.972, best val: 0.6808, lr: 0.01073
iteration: 11, epoch: 125, best train: 0.972, best val: 0.6809, lr: 0.01013
iteration: 11, epoch: 126, best train: 0.972, best val: 0.6815, lr: 0.00955
iteration: 11, epoch: 127, best train: 0.972, best val: 0.6821, lr: 0.00898
iteration: 11, epoch: 128, best train: 0.972, best val: 0.6823, lr: 0.00843
iteration: 11, epoch: 129, best train: 0.972, best val: 0.6823, lr: 0.00789
iteration: 11, epoch: 130, best train: 0.972, best val: 0.6823, lr: 0.00737
iteration: 11, epoch: 131, best train: 0.972, best val: 0.6823, lr: 0.00686
iteration: 11, epoch: 132, best train: 0.972, best val: 0.6823, lr: 0.00638
iteration: 11, epoch: 133, best train: 0.972, best val: 0.6823, lr: 0.0059
iteration: 11, epoch: 134, best train: 0.972, best val: 0.6823, lr: 0.00545
iteration: 11, epoch: 135, best train: 0.972, best val: 0.6823, lr: 0.00501
iteration: 11, epoch: 136, best train: 0.972, best val: 0.6823, lr: 0.00459
iteration: 11, epoch: 137, best train: 0.972, best val: 0.6823, lr: 0.00419
iteration: 11, epoch: 138, best train: 0.972, best val: 0.6823, lr: 0.00381
iteration: 11, epoch: 139, best train: 0.972, best val: 0.6823, lr: 0.00344
iteration: 11, epoch: 140, best train: 0.972, best val: 0.6823, lr: 0.00309
iteration: 11, epoch: 141, best train: 0.972, best val: 0.6823, lr: 0.00276
iteration: 11, epoch: 142, best train: 0.972, best val: 0.6823, lr: 0.00245
iteration: 11, epoch: 143, best train: 0.973, best val: 0.6823, lr: 0.00215
iteration: 11, epoch: 144, best train: 0.973, best val: 0.6832, lr: 0.00188
iteration: 11, epoch: 145, best train: 0.976, best val: 0.6835, lr: 0.00162
iteration: 11, epoch: 146, best train: 0.976, best val: 0.6835, lr: 0.00138
iteration: 11, epoch: 147, best train: 0.976, best val: 0.6835, lr: 0.00116
iteration: 11, epoch: 148, best train: 0.976, best val: 0.6835, lr: 0.00096
iteration: 11, epoch: 149, best train: 0.976, best val: 0.6835, lr: 0.00078
iteration: 11, epoch: 150, best train: 0.976, best val: 0.6835, lr: 0.00062
iteration: 11, epoch: 151, best train: 0.976, best val: 0.6835, lr: 0.00047
iteration: 11, epoch: 152, best train: 0.976, best val: 0.6835, lr: 0.00035
iteration: 11, epoch: 153, best train: 0.976, best val: 0.6835, lr: 0.00024
iteration: 11, epoch: 154, best train: 0.976, best val: 0.6835, lr: 0.00015
iteration: 11, epoch: 155, best train: 0.976, best val: 0.6835, lr: 9e-05
iteration: 11, epoch: 156, best train: 0.976, best val: 0.6835, lr: 4e-05
iteration: 11, epoch: 157, best train: 0.976, best val: 0.6835, lr: 1e-05
iteration: 11, epoch: 158, best train: 0.976, best val: 0.6835, lr: 0.0
iteration: 11, epoch: 159, best train: 0.976, best val: 0.6835, lr: 1e-05
------------------------ Checkpoint 37  ------------------------
pre_conv.0.weight_mask 	|	active =  658 	|	total =  1728 	|	layerwise sparsity =  0.38078703703703703
layer1.0.conv1.weight_mask 	|	active =  2533 	|	total =  36864 	|	layerwise sparsity =  0.06871202256944445
layer1.0.conv2.weight_mask 	|	active =  2533 	|	total =  36864 	|	layerwise sparsity =  0.06871202256944445
layer1.1.conv1.weight_mask 	|	active =  2533 	|	total =  36864 	|	layerwise sparsity =  0.06871202256944445
layer1.1.conv2.weight_mask 	|	active =  2533 	|	total =  36864 	|	layerwise sparsity =  0.06871202256944445
layer2.0.conv1.weight_mask 	|	active =  5067 	|	total =  73728 	|	layerwise sparsity =  0.0687255859375
layer2.0.conv2.weight_mask 	|	active =  10133 	|	total =  147456 	|	layerwise sparsity =  0.06871880425347222
layer2.0.shortcut.0.weight_mask 	|	active =  3119 	|	total =  8192 	|	layerwise sparsity =  0.3807373046875
layer2.1.conv1.weight_mask 	|	active =  10133 	|	total =  147456 	|	layerwise sparsity =  0.06871880425347222
layer2.1.conv2.weight_mask 	|	active =  10133 	|	total =  147456 	|	layerwise sparsity =  0.06871880425347222
layer3.0.conv1.weight_mask 	|	active =  20266 	|	total =  294912 	|	layerwise sparsity =  0.06871880425347222
layer3.0.conv2.weight_mask 	|	active =  24994 	|	total =  589824 	|	layerwise sparsity =  0.04237535264756945
layer3.0.shortcut.0.weight_mask 	|	active =  2251 	|	total =  32768 	|	layerwise sparsity =  0.068695068359375
layer3.1.conv1.weight_mask 	|	active =  26233 	|	total =  589824 	|	layerwise sparsity =  0.04447597927517361
layer3.1.conv2.weight_mask 	|	active =  28474 	|	total =  589824 	|	layerwise sparsity =  0.04827541775173611
layer4.0.conv1.weight_mask 	|	active =  69627 	|	total =  1179648 	|	layerwise sparsity =  0.059023539225260414
layer4.0.conv2.weight_mask 	|	active =  176977 	|	total =  2359296 	|	layerwise sparsity =  0.07501263088650173
layer4.0.shortcut.0.weight_mask 	|	active =  9007 	|	total =  131072 	|	layerwise sparsity =  0.06871795654296875
layer4.1.conv1.weight_mask 	|	active =  189548 	|	total =  2359296 	|	layerwise sparsity =  0.0803409152560764
layer4.1.conv2.weight_mask 	|	active =  199836 	|	total =  2359296 	|	layerwise sparsity =  0.0847015380859375
------------------------ Checkpoint 38  ------------------------
best_val =  0.6836
------------------------ Checkpoint 39  ------------------------
pruning state: 12
remaining weight at start of iteration =  7.138376547776759
iteration: 12, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 12, epoch: 1, best train: 0.62, best val: 0.1, lr: 0.09991
iteration: 12, epoch: 2, best train: 0.62, best val: 0.1219, lr: 0.09985
iteration: 12, epoch: 3, best train: 0.62, best val: 0.2509, lr: 0.09976
iteration: 12, epoch: 4, best train: 0.62, best val: 0.4695, lr: 0.09965
iteration: 12, epoch: 5, best train: 0.658, best val: 0.4938, lr: 0.09953
iteration: 12, epoch: 6, best train: 0.693, best val: 0.5062, lr: 0.09938
iteration: 12, epoch: 7, best train: 0.741, best val: 0.5389, lr: 0.09922
iteration: 12, epoch: 8, best train: 0.764, best val: 0.5454, lr: 0.09904
iteration: 12, epoch: 9, best train: 0.772, best val: 0.5575, lr: 0.09884
iteration: 12, epoch: 10, best train: 0.8, best val: 0.5575, lr: 0.09862
iteration: 12, epoch: 11, best train: 0.813, best val: 0.5894, lr: 0.09838
iteration: 12, epoch: 12, best train: 0.822, best val: 0.5894, lr: 0.09812
iteration: 12, epoch: 13, best train: 0.823, best val: 0.5942, lr: 0.09785
iteration: 12, epoch: 14, best train: 0.823, best val: 0.6051, lr: 0.09755
iteration: 12, epoch: 15, best train: 0.837, best val: 0.6051, lr: 0.09724
iteration: 12, epoch: 16, best train: 0.862, best val: 0.6051, lr: 0.09691
iteration: 12, epoch: 17, best train: 0.862, best val: 0.6051, lr: 0.09656
iteration: 12, epoch: 18, best train: 0.862, best val: 0.6051, lr: 0.09619
iteration: 12, epoch: 19, best train: 0.862, best val: 0.6051, lr: 0.09581
iteration: 12, epoch: 20, best train: 0.867, best val: 0.6216, lr: 0.09541
iteration: 12, epoch: 21, best train: 0.867, best val: 0.6216, lr: 0.09499
iteration: 12, epoch: 22, best train: 0.873, best val: 0.6216, lr: 0.09455
iteration: 12, epoch: 23, best train: 0.873, best val: 0.6216, lr: 0.0941
iteration: 12, epoch: 24, best train: 0.888, best val: 0.6216, lr: 0.09362
iteration: 12, epoch: 25, best train: 0.888, best val: 0.6216, lr: 0.09314
iteration: 12, epoch: 26, best train: 0.888, best val: 0.6216, lr: 0.09263
iteration: 12, epoch: 27, best train: 0.896, best val: 0.6348, lr: 0.09211
iteration: 12, epoch: 28, best train: 0.896, best val: 0.6348, lr: 0.09157
iteration: 12, epoch: 29, best train: 0.896, best val: 0.6348, lr: 0.09102
iteration: 12, epoch: 30, best train: 0.896, best val: 0.6348, lr: 0.09045
iteration: 12, epoch: 31, best train: 0.896, best val: 0.6348, lr: 0.08987
iteration: 12, epoch: 32, best train: 0.896, best val: 0.6348, lr: 0.08927
iteration: 12, epoch: 33, best train: 0.896, best val: 0.6348, lr: 0.08865
iteration: 12, epoch: 34, best train: 0.896, best val: 0.6348, lr: 0.08802
iteration: 12, epoch: 35, best train: 0.907, best val: 0.6348, lr: 0.08738
iteration: 12, epoch: 36, best train: 0.907, best val: 0.6401, lr: 0.08672
iteration: 12, epoch: 37, best train: 0.92, best val: 0.6401, lr: 0.08604
iteration: 12, epoch: 38, best train: 0.92, best val: 0.6401, lr: 0.08536
iteration: 12, epoch: 39, best train: 0.92, best val: 0.6453, lr: 0.08465
iteration: 12, epoch: 40, best train: 0.92, best val: 0.6484, lr: 0.08394
iteration: 12, epoch: 41, best train: 0.92, best val: 0.6484, lr: 0.08321
iteration: 12, epoch: 42, best train: 0.92, best val: 0.6484, lr: 0.08247
iteration: 12, epoch: 43, best train: 0.92, best val: 0.6484, lr: 0.08172
iteration: 12, epoch: 44, best train: 0.92, best val: 0.6484, lr: 0.08095
iteration: 12, epoch: 45, best train: 0.92, best val: 0.6547, lr: 0.08018
iteration: 12, epoch: 46, best train: 0.929, best val: 0.6547, lr: 0.07939
iteration: 12, epoch: 47, best train: 0.929, best val: 0.6547, lr: 0.07859
iteration: 12, epoch: 48, best train: 0.929, best val: 0.6547, lr: 0.07778
iteration: 12, epoch: 49, best train: 0.931, best val: 0.6547, lr: 0.07696
iteration: 12, epoch: 50, best train: 0.943, best val: 0.6547, lr: 0.07612
iteration: 12, epoch: 51, best train: 0.943, best val: 0.6547, lr: 0.07528
iteration: 12, epoch: 52, best train: 0.943, best val: 0.6547, lr: 0.07443
iteration: 12, epoch: 53, best train: 0.943, best val: 0.6547, lr: 0.07357
iteration: 12, epoch: 54, best train: 0.943, best val: 0.6547, lr: 0.0727
iteration: 12, epoch: 55, best train: 0.943, best val: 0.6547, lr: 0.07182
iteration: 12, epoch: 56, best train: 0.943, best val: 0.6547, lr: 0.07093
iteration: 12, epoch: 57, best train: 0.943, best val: 0.6547, lr: 0.07004
iteration: 12, epoch: 58, best train: 0.943, best val: 0.6547, lr: 0.06913
iteration: 12, epoch: 59, best train: 0.943, best val: 0.6547, lr: 0.06822
iteration: 12, epoch: 60, best train: 0.943, best val: 0.6547, lr: 0.06731
iteration: 12, epoch: 61, best train: 0.943, best val: 0.6547, lr: 0.06638
iteration: 12, epoch: 62, best train: 0.943, best val: 0.6547, lr: 0.06545
iteration: 12, epoch: 63, best train: 0.943, best val: 0.6547, lr: 0.06451
iteration: 12, epoch: 64, best train: 0.943, best val: 0.6547, lr: 0.06357
iteration: 12, epoch: 65, best train: 0.943, best val: 0.6547, lr: 0.06262
iteration: 12, epoch: 66, best train: 0.943, best val: 0.6547, lr: 0.06167
iteration: 12, epoch: 67, best train: 0.943, best val: 0.6547, lr: 0.06072
iteration: 12, epoch: 68, best train: 0.943, best val: 0.6547, lr: 0.05975
iteration: 12, epoch: 69, best train: 0.943, best val: 0.6547, lr: 0.05879
iteration: 12, epoch: 70, best train: 0.944, best val: 0.6547, lr: 0.05782
iteration: 12, epoch: 71, best train: 0.944, best val: 0.655, lr: 0.05685
iteration: 12, epoch: 72, best train: 0.944, best val: 0.6603, lr: 0.05588
iteration: 12, epoch: 73, best train: 0.944, best val: 0.6655, lr: 0.0549
iteration: 12, epoch: 74, best train: 0.946, best val: 0.6694, lr: 0.05392
iteration: 12, epoch: 75, best train: 0.946, best val: 0.6694, lr: 0.05294
iteration: 12, epoch: 76, best train: 0.953, best val: 0.6694, lr: 0.05196
iteration: 12, epoch: 77, best train: 0.953, best val: 0.6694, lr: 0.05098
iteration: 12, epoch: 78, best train: 0.953, best val: 0.6694, lr: 0.05
iteration: 12, epoch: 79, best train: 0.953, best val: 0.6694, lr: 0.04902
iteration: 12, epoch: 80, best train: 0.953, best val: 0.6694, lr: 0.04804
iteration: 12, epoch: 81, best train: 0.953, best val: 0.6694, lr: 0.04706
iteration: 12, epoch: 82, best train: 0.953, best val: 0.6694, lr: 0.04608
iteration: 12, epoch: 83, best train: 0.953, best val: 0.6694, lr: 0.0451
iteration: 12, epoch: 84, best train: 0.953, best val: 0.6694, lr: 0.04412
iteration: 12, epoch: 85, best train: 0.953, best val: 0.6694, lr: 0.04315
iteration: 12, epoch: 86, best train: 0.953, best val: 0.6694, lr: 0.04218
iteration: 12, epoch: 87, best train: 0.953, best val: 0.6694, lr: 0.04121
iteration: 12, epoch: 88, best train: 0.957, best val: 0.6694, lr: 0.04025
iteration: 12, epoch: 89, best train: 0.957, best val: 0.6694, lr: 0.03928
iteration: 12, epoch: 90, best train: 0.957, best val: 0.6694, lr: 0.03833
iteration: 12, epoch: 91, best train: 0.957, best val: 0.6694, lr: 0.03738
iteration: 12, epoch: 92, best train: 0.957, best val: 0.6694, lr: 0.03643
iteration: 12, epoch: 93, best train: 0.963, best val: 0.6786, lr: 0.03549
iteration: 12, epoch: 94, best train: 0.963, best val: 0.6786, lr: 0.03455
iteration: 12, epoch: 95, best train: 0.963, best val: 0.6786, lr: 0.03362
iteration: 12, epoch: 96, best train: 0.963, best val: 0.6786, lr: 0.03269
iteration: 12, epoch: 97, best train: 0.967, best val: 0.6786, lr: 0.03178
iteration: 12, epoch: 98, best train: 0.967, best val: 0.6786, lr: 0.03087
iteration: 12, epoch: 99, best train: 0.967, best val: 0.6786, lr: 0.02996
iteration: 12, epoch: 100, best train: 0.967, best val: 0.6786, lr: 0.02907
iteration: 12, epoch: 101, best train: 0.967, best val: 0.6786, lr: 0.02818
iteration: 12, epoch: 102, best train: 0.967, best val: 0.6786, lr: 0.0273
iteration: 12, epoch: 103, best train: 0.967, best val: 0.6786, lr: 0.02643
iteration: 12, epoch: 104, best train: 0.967, best val: 0.6786, lr: 0.02557
iteration: 12, epoch: 105, best train: 0.967, best val: 0.6786, lr: 0.02472
iteration: 12, epoch: 106, best train: 0.967, best val: 0.6786, lr: 0.02388
iteration: 12, epoch: 107, best train: 0.967, best val: 0.6786, lr: 0.02304
iteration: 12, epoch: 108, best train: 0.968, best val: 0.6786, lr: 0.02222
iteration: 12, epoch: 109, best train: 0.968, best val: 0.6786, lr: 0.02141
iteration: 12, epoch: 110, best train: 0.968, best val: 0.6799, lr: 0.02061
iteration: 12, epoch: 111, best train: 0.968, best val: 0.6799, lr: 0.01982
iteration: 12, epoch: 112, best train: 0.968, best val: 0.6799, lr: 0.01905
iteration: 12, epoch: 113, best train: 0.968, best val: 0.6799, lr: 0.01828
iteration: 12, epoch: 114, best train: 0.968, best val: 0.6799, lr: 0.01753
iteration: 12, epoch: 115, best train: 0.968, best val: 0.6799, lr: 0.01679
iteration: 12, epoch: 116, best train: 0.968, best val: 0.6799, lr: 0.01606
iteration: 12, epoch: 117, best train: 0.968, best val: 0.6799, lr: 0.01535
iteration: 12, epoch: 118, best train: 0.968, best val: 0.6799, lr: 0.01464
iteration: 12, epoch: 119, best train: 0.968, best val: 0.6799, lr: 0.01396
iteration: 12, epoch: 120, best train: 0.968, best val: 0.6799, lr: 0.01328
iteration: 12, epoch: 121, best train: 0.968, best val: 0.6799, lr: 0.01262
iteration: 12, epoch: 122, best train: 0.968, best val: 0.6799, lr: 0.01198
iteration: 12, epoch: 123, best train: 0.968, best val: 0.6799, lr: 0.01135
iteration: 12, epoch: 124, best train: 0.968, best val: 0.6799, lr: 0.01073
iteration: 12, epoch: 125, best train: 0.968, best val: 0.6799, lr: 0.01013
iteration: 12, epoch: 126, best train: 0.968, best val: 0.6799, lr: 0.00955
iteration: 12, epoch: 127, best train: 0.968, best val: 0.6799, lr: 0.00898
iteration: 12, epoch: 128, best train: 0.968, best val: 0.6799, lr: 0.00843
iteration: 12, epoch: 129, best train: 0.977, best val: 0.6799, lr: 0.00789
iteration: 12, epoch: 130, best train: 0.977, best val: 0.6799, lr: 0.00737
iteration: 12, epoch: 131, best train: 0.977, best val: 0.6799, lr: 0.00686
iteration: 12, epoch: 132, best train: 0.977, best val: 0.6799, lr: 0.00638
iteration: 12, epoch: 133, best train: 0.977, best val: 0.6799, lr: 0.0059
iteration: 12, epoch: 134, best train: 0.977, best val: 0.6818, lr: 0.00545
iteration: 12, epoch: 135, best train: 0.977, best val: 0.682, lr: 0.00501
iteration: 12, epoch: 136, best train: 0.977, best val: 0.682, lr: 0.00459
iteration: 12, epoch: 137, best train: 0.977, best val: 0.682, lr: 0.00419
iteration: 12, epoch: 138, best train: 0.977, best val: 0.682, lr: 0.00381
iteration: 12, epoch: 139, best train: 0.977, best val: 0.682, lr: 0.00344
iteration: 12, epoch: 140, best train: 0.977, best val: 0.682, lr: 0.00309
iteration: 12, epoch: 141, best train: 0.977, best val: 0.682, lr: 0.00276
iteration: 12, epoch: 142, best train: 0.977, best val: 0.682, lr: 0.00245
iteration: 12, epoch: 143, best train: 0.977, best val: 0.682, lr: 0.00215
iteration: 12, epoch: 144, best train: 0.977, best val: 0.682, lr: 0.00188
iteration: 12, epoch: 145, best train: 0.977, best val: 0.682, lr: 0.00162
iteration: 12, epoch: 146, best train: 0.977, best val: 0.682, lr: 0.00138
iteration: 12, epoch: 147, best train: 0.977, best val: 0.682, lr: 0.00116
iteration: 12, epoch: 148, best train: 0.977, best val: 0.682, lr: 0.00096
iteration: 12, epoch: 149, best train: 0.977, best val: 0.682, lr: 0.00078
iteration: 12, epoch: 150, best train: 0.977, best val: 0.682, lr: 0.00062
iteration: 12, epoch: 151, best train: 0.977, best val: 0.682, lr: 0.00047
iteration: 12, epoch: 152, best train: 0.977, best val: 0.682, lr: 0.00035
iteration: 12, epoch: 153, best train: 0.977, best val: 0.682, lr: 0.00024
iteration: 12, epoch: 154, best train: 0.977, best val: 0.682, lr: 0.00015
iteration: 12, epoch: 155, best train: 0.977, best val: 0.682, lr: 9e-05
iteration: 12, epoch: 156, best train: 0.977, best val: 0.682, lr: 4e-05
iteration: 12, epoch: 157, best train: 0.977, best val: 0.682, lr: 1e-05
iteration: 12, epoch: 158, best train: 0.977, best val: 0.682, lr: 0.0
iteration: 12, epoch: 159, best train: 0.977, best val: 0.682, lr: 1e-05
------------------------ Checkpoint 40  ------------------------
pre_conv.0.weight_mask 	|	active =  607 	|	total =  1728 	|	layerwise sparsity =  0.35127314814814814
layer1.0.conv1.weight_mask 	|	active =  2026 	|	total =  36864 	|	layerwise sparsity =  0.05495876736111111
layer1.0.conv2.weight_mask 	|	active =  2026 	|	total =  36864 	|	layerwise sparsity =  0.05495876736111111
layer1.1.conv1.weight_mask 	|	active =  2026 	|	total =  36864 	|	layerwise sparsity =  0.05495876736111111
layer1.1.conv2.weight_mask 	|	active =  2026 	|	total =  36864 	|	layerwise sparsity =  0.05495876736111111
layer2.0.conv1.weight_mask 	|	active =  4054 	|	total =  73728 	|	layerwise sparsity =  0.054985894097222224
layer2.0.conv2.weight_mask 	|	active =  8106 	|	total =  147456 	|	layerwise sparsity =  0.054972330729166664
layer2.0.shortcut.0.weight_mask 	|	active =  2878 	|	total =  8192 	|	layerwise sparsity =  0.351318359375
layer2.1.conv1.weight_mask 	|	active =  8106 	|	total =  147456 	|	layerwise sparsity =  0.054972330729166664
layer2.1.conv2.weight_mask 	|	active =  8106 	|	total =  147456 	|	layerwise sparsity =  0.054972330729166664
layer3.0.conv1.weight_mask 	|	active =  16213 	|	total =  294912 	|	layerwise sparsity =  0.05497572157118055
layer3.0.conv2.weight_mask 	|	active =  19206 	|	total =  589824 	|	layerwise sparsity =  0.032562255859375
layer3.0.shortcut.0.weight_mask 	|	active =  1801 	|	total =  32768 	|	layerwise sparsity =  0.054962158203125
layer3.1.conv1.weight_mask 	|	active =  20239 	|	total =  589824 	|	layerwise sparsity =  0.03431362575954861
layer3.1.conv2.weight_mask 	|	active =  22119 	|	total =  589824 	|	layerwise sparsity =  0.037501017252604164
layer4.0.conv1.weight_mask 	|	active =  55000 	|	total =  1179648 	|	layerwise sparsity =  0.046624077690972224
layer4.0.conv2.weight_mask 	|	active =  142619 	|	total =  2359296 	|	layerwise sparsity =  0.06044981214735243
layer4.0.shortcut.0.weight_mask 	|	active =  7206 	|	total =  131072 	|	layerwise sparsity =  0.0549774169921875
layer4.1.conv1.weight_mask 	|	active =  153626 	|	total =  2359296 	|	layerwise sparsity =  0.0651151869032118
layer4.1.conv2.weight_mask 	|	active =  162679 	|	total =  2359296 	|	layerwise sparsity =  0.06895234849717882
------------------------ Checkpoint 41  ------------------------
best_val =  0.682
------------------------ Checkpoint 42  ------------------------
pruning state: 13
remaining weight at start of iteration =  5.74115673910176
iteration: 13, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 13, epoch: 1, best train: 0.614, best val: 0.1, lr: 0.09991
iteration: 13, epoch: 2, best train: 0.614, best val: 0.1, lr: 0.09985
iteration: 13, epoch: 3, best train: 0.614, best val: 0.1155, lr: 0.09976
iteration: 13, epoch: 4, best train: 0.614, best val: 0.4445, lr: 0.09965
iteration: 13, epoch: 5, best train: 0.614, best val: 0.5775, lr: 0.09953
iteration: 13, epoch: 6, best train: 0.691, best val: 0.5775, lr: 0.09938
iteration: 13, epoch: 7, best train: 0.733, best val: 0.5829, lr: 0.09922
iteration: 13, epoch: 8, best train: 0.769, best val: 0.5829, lr: 0.09904
iteration: 13, epoch: 9, best train: 0.785, best val: 0.5848, lr: 0.09884
iteration: 13, epoch: 10, best train: 0.83, best val: 0.5865, lr: 0.09862
iteration: 13, epoch: 11, best train: 0.83, best val: 0.5865, lr: 0.09838
iteration: 13, epoch: 12, best train: 0.83, best val: 0.5865, lr: 0.09812
iteration: 13, epoch: 13, best train: 0.83, best val: 0.5865, lr: 0.09785
iteration: 13, epoch: 14, best train: 0.83, best val: 0.5865, lr: 0.09755
iteration: 13, epoch: 15, best train: 0.87, best val: 0.6133, lr: 0.09724
iteration: 13, epoch: 16, best train: 0.87, best val: 0.6133, lr: 0.09691
iteration: 13, epoch: 17, best train: 0.87, best val: 0.6133, lr: 0.09656
iteration: 13, epoch: 18, best train: 0.87, best val: 0.6133, lr: 0.09619
iteration: 13, epoch: 19, best train: 0.87, best val: 0.6133, lr: 0.09581
iteration: 13, epoch: 20, best train: 0.87, best val: 0.6133, lr: 0.09541
iteration: 13, epoch: 21, best train: 0.875, best val: 0.6228, lr: 0.09499
iteration: 13, epoch: 22, best train: 0.875, best val: 0.6228, lr: 0.09455
iteration: 13, epoch: 23, best train: 0.888, best val: 0.6228, lr: 0.0941
iteration: 13, epoch: 24, best train: 0.901, best val: 0.6228, lr: 0.09362
iteration: 13, epoch: 25, best train: 0.901, best val: 0.6228, lr: 0.09314
iteration: 13, epoch: 26, best train: 0.903, best val: 0.6374, lr: 0.09263
iteration: 13, epoch: 27, best train: 0.903, best val: 0.6374, lr: 0.09211
iteration: 13, epoch: 28, best train: 0.903, best val: 0.6374, lr: 0.09157
iteration: 13, epoch: 29, best train: 0.903, best val: 0.6374, lr: 0.09102
iteration: 13, epoch: 30, best train: 0.907, best val: 0.6374, lr: 0.09045
iteration: 13, epoch: 31, best train: 0.907, best val: 0.6374, lr: 0.08987
iteration: 13, epoch: 32, best train: 0.907, best val: 0.6374, lr: 0.08927
iteration: 13, epoch: 33, best train: 0.907, best val: 0.6374, lr: 0.08865
iteration: 13, epoch: 34, best train: 0.907, best val: 0.6374, lr: 0.08802
iteration: 13, epoch: 35, best train: 0.907, best val: 0.6431, lr: 0.08738
iteration: 13, epoch: 36, best train: 0.913, best val: 0.6431, lr: 0.08672
iteration: 13, epoch: 37, best train: 0.915, best val: 0.6431, lr: 0.08604
iteration: 13, epoch: 38, best train: 0.915, best val: 0.6431, lr: 0.08536
iteration: 13, epoch: 39, best train: 0.915, best val: 0.6431, lr: 0.08465
iteration: 13, epoch: 40, best train: 0.915, best val: 0.6431, lr: 0.08394
iteration: 13, epoch: 41, best train: 0.923, best val: 0.6431, lr: 0.08321
iteration: 13, epoch: 42, best train: 0.923, best val: 0.6431, lr: 0.08247
iteration: 13, epoch: 43, best train: 0.923, best val: 0.6431, lr: 0.08172
iteration: 13, epoch: 44, best train: 0.925, best val: 0.6431, lr: 0.08095
iteration: 13, epoch: 45, best train: 0.925, best val: 0.6431, lr: 0.08018
iteration: 13, epoch: 46, best train: 0.928, best val: 0.6431, lr: 0.07939
iteration: 13, epoch: 47, best train: 0.928, best val: 0.6431, lr: 0.07859
iteration: 13, epoch: 48, best train: 0.928, best val: 0.6431, lr: 0.07778
iteration: 13, epoch: 49, best train: 0.928, best val: 0.6484, lr: 0.07696
iteration: 13, epoch: 50, best train: 0.936, best val: 0.6484, lr: 0.07612
iteration: 13, epoch: 51, best train: 0.936, best val: 0.6484, lr: 0.07528
iteration: 13, epoch: 52, best train: 0.936, best val: 0.6484, lr: 0.07443
iteration: 13, epoch: 53, best train: 0.936, best val: 0.6484, lr: 0.07357
iteration: 13, epoch: 54, best train: 0.936, best val: 0.6484, lr: 0.0727
iteration: 13, epoch: 55, best train: 0.936, best val: 0.6484, lr: 0.07182
iteration: 13, epoch: 56, best train: 0.936, best val: 0.6484, lr: 0.07093
iteration: 13, epoch: 57, best train: 0.936, best val: 0.6484, lr: 0.07004
iteration: 13, epoch: 58, best train: 0.936, best val: 0.6484, lr: 0.06913
iteration: 13, epoch: 59, best train: 0.936, best val: 0.6582, lr: 0.06822
iteration: 13, epoch: 60, best train: 0.936, best val: 0.6582, lr: 0.06731
iteration: 13, epoch: 61, best train: 0.936, best val: 0.6582, lr: 0.06638
iteration: 13, epoch: 62, best train: 0.938, best val: 0.6582, lr: 0.06545
iteration: 13, epoch: 63, best train: 0.94, best val: 0.6582, lr: 0.06451
iteration: 13, epoch: 64, best train: 0.94, best val: 0.6696, lr: 0.06357
iteration: 13, epoch: 65, best train: 0.94, best val: 0.6696, lr: 0.06262
iteration: 13, epoch: 66, best train: 0.94, best val: 0.6696, lr: 0.06167
iteration: 13, epoch: 67, best train: 0.94, best val: 0.6696, lr: 0.06072
iteration: 13, epoch: 68, best train: 0.941, best val: 0.6696, lr: 0.05975
iteration: 13, epoch: 69, best train: 0.941, best val: 0.6696, lr: 0.05879
iteration: 13, epoch: 70, best train: 0.947, best val: 0.6696, lr: 0.05782
iteration: 13, epoch: 71, best train: 0.947, best val: 0.6696, lr: 0.05685
iteration: 13, epoch: 72, best train: 0.947, best val: 0.6696, lr: 0.05588
iteration: 13, epoch: 73, best train: 0.955, best val: 0.6696, lr: 0.0549
iteration: 13, epoch: 74, best train: 0.959, best val: 0.6696, lr: 0.05392
iteration: 13, epoch: 75, best train: 0.959, best val: 0.6696, lr: 0.05294
iteration: 13, epoch: 76, best train: 0.959, best val: 0.6696, lr: 0.05196
iteration: 13, epoch: 77, best train: 0.959, best val: 0.6717, lr: 0.05098
iteration: 13, epoch: 78, best train: 0.959, best val: 0.6717, lr: 0.05
iteration: 13, epoch: 79, best train: 0.959, best val: 0.6717, lr: 0.04902
iteration: 13, epoch: 80, best train: 0.959, best val: 0.6717, lr: 0.04804
iteration: 13, epoch: 81, best train: 0.959, best val: 0.6717, lr: 0.04706
iteration: 13, epoch: 82, best train: 0.959, best val: 0.6717, lr: 0.04608
iteration: 13, epoch: 83, best train: 0.959, best val: 0.6717, lr: 0.0451
iteration: 13, epoch: 84, best train: 0.959, best val: 0.6717, lr: 0.04412
iteration: 13, epoch: 85, best train: 0.959, best val: 0.6717, lr: 0.04315
iteration: 13, epoch: 86, best train: 0.959, best val: 0.6717, lr: 0.04218
iteration: 13, epoch: 87, best train: 0.959, best val: 0.6779, lr: 0.04121
iteration: 13, epoch: 88, best train: 0.959, best val: 0.6779, lr: 0.04025
iteration: 13, epoch: 89, best train: 0.959, best val: 0.6779, lr: 0.03928
iteration: 13, epoch: 90, best train: 0.959, best val: 0.6779, lr: 0.03833
iteration: 13, epoch: 91, best train: 0.959, best val: 0.6779, lr: 0.03738
iteration: 13, epoch: 92, best train: 0.959, best val: 0.6779, lr: 0.03643
iteration: 13, epoch: 93, best train: 0.959, best val: 0.68, lr: 0.03549
iteration: 13, epoch: 94, best train: 0.964, best val: 0.6826, lr: 0.03455
iteration: 13, epoch: 95, best train: 0.964, best val: 0.6826, lr: 0.03362
iteration: 13, epoch: 96, best train: 0.964, best val: 0.683, lr: 0.03269
iteration: 13, epoch: 97, best train: 0.964, best val: 0.683, lr: 0.03178
iteration: 13, epoch: 98, best train: 0.964, best val: 0.683, lr: 0.03087
iteration: 13, epoch: 99, best train: 0.964, best val: 0.683, lr: 0.02996
iteration: 13, epoch: 100, best train: 0.964, best val: 0.683, lr: 0.02907
iteration: 13, epoch: 101, best train: 0.964, best val: 0.683, lr: 0.02818
iteration: 13, epoch: 102, best train: 0.964, best val: 0.683, lr: 0.0273
iteration: 13, epoch: 103, best train: 0.964, best val: 0.683, lr: 0.02643
iteration: 13, epoch: 104, best train: 0.964, best val: 0.683, lr: 0.02557
iteration: 13, epoch: 105, best train: 0.964, best val: 0.683, lr: 0.02472
iteration: 13, epoch: 106, best train: 0.964, best val: 0.683, lr: 0.02388
iteration: 13, epoch: 107, best train: 0.964, best val: 0.683, lr: 0.02304
iteration: 13, epoch: 108, best train: 0.964, best val: 0.683, lr: 0.02222
iteration: 13, epoch: 109, best train: 0.964, best val: 0.683, lr: 0.02141
iteration: 13, epoch: 110, best train: 0.964, best val: 0.6842, lr: 0.02061
iteration: 13, epoch: 111, best train: 0.964, best val: 0.6842, lr: 0.01982
iteration: 13, epoch: 112, best train: 0.968, best val: 0.6842, lr: 0.01905
iteration: 13, epoch: 113, best train: 0.968, best val: 0.6842, lr: 0.01828
iteration: 13, epoch: 114, best train: 0.968, best val: 0.6842, lr: 0.01753
iteration: 13, epoch: 115, best train: 0.968, best val: 0.6842, lr: 0.01679
iteration: 13, epoch: 116, best train: 0.968, best val: 0.6842, lr: 0.01606
iteration: 13, epoch: 117, best train: 0.968, best val: 0.6842, lr: 0.01535
iteration: 13, epoch: 118, best train: 0.968, best val: 0.6842, lr: 0.01464
iteration: 13, epoch: 119, best train: 0.968, best val: 0.6875, lr: 0.01396
iteration: 13, epoch: 120, best train: 0.968, best val: 0.6878, lr: 0.01328
iteration: 13, epoch: 121, best train: 0.968, best val: 0.6878, lr: 0.01262
iteration: 13, epoch: 122, best train: 0.968, best val: 0.6881, lr: 0.01198
iteration: 13, epoch: 123, best train: 0.968, best val: 0.6881, lr: 0.01135
iteration: 13, epoch: 124, best train: 0.968, best val: 0.6881, lr: 0.01073
iteration: 13, epoch: 125, best train: 0.968, best val: 0.6881, lr: 0.01013
iteration: 13, epoch: 126, best train: 0.968, best val: 0.6881, lr: 0.00955
iteration: 13, epoch: 127, best train: 0.968, best val: 0.6881, lr: 0.00898
iteration: 13, epoch: 128, best train: 0.969, best val: 0.6881, lr: 0.00843
iteration: 13, epoch: 129, best train: 0.969, best val: 0.6881, lr: 0.00789
iteration: 13, epoch: 130, best train: 0.97, best val: 0.6881, lr: 0.00737
iteration: 13, epoch: 131, best train: 0.97, best val: 0.6881, lr: 0.00686
iteration: 13, epoch: 132, best train: 0.97, best val: 0.6881, lr: 0.00638
iteration: 13, epoch: 133, best train: 0.97, best val: 0.6881, lr: 0.0059
iteration: 13, epoch: 134, best train: 0.97, best val: 0.6881, lr: 0.00545
iteration: 13, epoch: 135, best train: 0.97, best val: 0.6881, lr: 0.00501
iteration: 13, epoch: 136, best train: 0.97, best val: 0.6881, lr: 0.00459
iteration: 13, epoch: 137, best train: 0.97, best val: 0.6881, lr: 0.00419
iteration: 13, epoch: 138, best train: 0.97, best val: 0.6881, lr: 0.00381
iteration: 13, epoch: 139, best train: 0.97, best val: 0.6882, lr: 0.00344
iteration: 13, epoch: 140, best train: 0.97, best val: 0.6894, lr: 0.00309
iteration: 13, epoch: 141, best train: 0.97, best val: 0.6894, lr: 0.00276
iteration: 13, epoch: 142, best train: 0.97, best val: 0.69, lr: 0.00245
iteration: 13, epoch: 143, best train: 0.978, best val: 0.6901, lr: 0.00215
iteration: 13, epoch: 144, best train: 0.978, best val: 0.6901, lr: 0.00188
iteration: 13, epoch: 145, best train: 0.978, best val: 0.6901, lr: 0.00162
iteration: 13, epoch: 146, best train: 0.978, best val: 0.6901, lr: 0.00138
iteration: 13, epoch: 147, best train: 0.978, best val: 0.6901, lr: 0.00116
iteration: 13, epoch: 148, best train: 0.978, best val: 0.6903, lr: 0.00096
iteration: 13, epoch: 149, best train: 0.978, best val: 0.6909, lr: 0.00078
iteration: 13, epoch: 150, best train: 0.978, best val: 0.6909, lr: 0.00062
iteration: 13, epoch: 151, best train: 0.978, best val: 0.6909, lr: 0.00047
iteration: 13, epoch: 152, best train: 0.978, best val: 0.6909, lr: 0.00035
iteration: 13, epoch: 153, best train: 0.978, best val: 0.6909, lr: 0.00024
iteration: 13, epoch: 154, best train: 0.978, best val: 0.6909, lr: 0.00015
iteration: 13, epoch: 155, best train: 0.978, best val: 0.6909, lr: 9e-05
iteration: 13, epoch: 156, best train: 0.978, best val: 0.6909, lr: 4e-05
iteration: 13, epoch: 157, best train: 0.978, best val: 0.6909, lr: 1e-05
iteration: 13, epoch: 158, best train: 0.978, best val: 0.6909, lr: 0.0
iteration: 13, epoch: 159, best train: 0.978, best val: 0.6909, lr: 1e-05
------------------------ Checkpoint 43  ------------------------
pre_conv.0.weight_mask 	|	active =  560 	|	total =  1728 	|	layerwise sparsity =  0.32407407407407407
layer1.0.conv1.weight_mask 	|	active =  1621 	|	total =  36864 	|	layerwise sparsity =  0.04397243923611111
layer1.0.conv2.weight_mask 	|	active =  1621 	|	total =  36864 	|	layerwise sparsity =  0.04397243923611111
layer1.1.conv1.weight_mask 	|	active =  1621 	|	total =  36864 	|	layerwise sparsity =  0.04397243923611111
layer1.1.conv2.weight_mask 	|	active =  1621 	|	total =  36864 	|	layerwise sparsity =  0.04397243923611111
layer2.0.conv1.weight_mask 	|	active =  3243 	|	total =  73728 	|	layerwise sparsity =  0.043986002604166664
layer2.0.conv2.weight_mask 	|	active =  6485 	|	total =  147456 	|	layerwise sparsity =  0.04397922092013889
layer2.0.shortcut.0.weight_mask 	|	active =  2655 	|	total =  8192 	|	layerwise sparsity =  0.3240966796875
layer2.1.conv1.weight_mask 	|	active =  6485 	|	total =  147456 	|	layerwise sparsity =  0.04397922092013889
layer2.1.conv2.weight_mask 	|	active =  6485 	|	total =  147456 	|	layerwise sparsity =  0.04397922092013889
layer3.0.conv1.weight_mask 	|	active =  12970 	|	total =  294912 	|	layerwise sparsity =  0.04397922092013889
layer3.0.conv2.weight_mask 	|	active =  14758 	|	total =  589824 	|	layerwise sparsity =  0.025021023220486112
layer3.0.shortcut.0.weight_mask 	|	active =  1441 	|	total =  32768 	|	layerwise sparsity =  0.043975830078125
layer3.1.conv1.weight_mask 	|	active =  15615 	|	total =  589824 	|	layerwise sparsity =  0.0264739990234375
layer3.1.conv2.weight_mask 	|	active =  17182 	|	total =  589824 	|	layerwise sparsity =  0.029130723741319444
layer4.0.conv1.weight_mask 	|	active =  43446 	|	total =  1179648 	|	layerwise sparsity =  0.036829630533854164
layer4.0.conv2.weight_mask 	|	active =  114931 	|	total =  2359296 	|	layerwise sparsity =  0.04871410793728299
layer4.0.shortcut.0.weight_mask 	|	active =  5765 	|	total =  131072 	|	layerwise sparsity =  0.04398345947265625
layer4.1.conv1.weight_mask 	|	active =  124511 	|	total =  2359296 	|	layerwise sparsity =  0.05277464124891493
layer4.1.conv2.weight_mask 	|	active =  132431 	|	total =  2359296 	|	layerwise sparsity =  0.05613157484266493
------------------------ Checkpoint 44  ------------------------
best_val =  0.6909000000000001
------------------------ Checkpoint 45  ------------------------
pruning state: 14
remaining weight at start of iteration =  4.619018584791501
iteration: 14, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 14, epoch: 1, best train: 0.584, best val: 0.1, lr: 0.09991
iteration: 14, epoch: 2, best train: 0.584, best val: 0.1, lr: 0.09985
iteration: 14, epoch: 3, best train: 0.584, best val: 0.1088, lr: 0.09976
iteration: 14, epoch: 4, best train: 0.584, best val: 0.3856, lr: 0.09965
iteration: 14, epoch: 5, best train: 0.584, best val: 0.5123, lr: 0.09953
iteration: 14, epoch: 6, best train: 0.661, best val: 0.5123, lr: 0.09938
iteration: 14, epoch: 7, best train: 0.67, best val: 0.5171, lr: 0.09922
iteration: 14, epoch: 8, best train: 0.688, best val: 0.533, lr: 0.09904
iteration: 14, epoch: 9, best train: 0.712, best val: 0.5998, lr: 0.09884
iteration: 14, epoch: 10, best train: 0.73, best val: 0.5998, lr: 0.09862
iteration: 14, epoch: 11, best train: 0.75, best val: 0.5998, lr: 0.09838
iteration: 14, epoch: 12, best train: 0.753, best val: 0.5998, lr: 0.09812
iteration: 14, epoch: 13, best train: 0.797, best val: 0.5998, lr: 0.09785
iteration: 14, epoch: 14, best train: 0.797, best val: 0.5998, lr: 0.09755
iteration: 14, epoch: 15, best train: 0.797, best val: 0.5998, lr: 0.09724
iteration: 14, epoch: 16, best train: 0.797, best val: 0.5998, lr: 0.09691
iteration: 14, epoch: 17, best train: 0.807, best val: 0.5998, lr: 0.09656
iteration: 14, epoch: 18, best train: 0.823, best val: 0.5998, lr: 0.09619
iteration: 14, epoch: 19, best train: 0.833, best val: 0.5998, lr: 0.09581
iteration: 14, epoch: 20, best train: 0.833, best val: 0.6009, lr: 0.09541
iteration: 14, epoch: 21, best train: 0.844, best val: 0.6032, lr: 0.09499
iteration: 14, epoch: 22, best train: 0.855, best val: 0.6032, lr: 0.09455
iteration: 14, epoch: 23, best train: 0.877, best val: 0.6354, lr: 0.0941
iteration: 14, epoch: 24, best train: 0.879, best val: 0.6354, lr: 0.09362
iteration: 14, epoch: 25, best train: 0.88, best val: 0.6354, lr: 0.09314
iteration: 14, epoch: 26, best train: 0.88, best val: 0.6354, lr: 0.09263
iteration: 14, epoch: 27, best train: 0.882, best val: 0.6354, lr: 0.09211
iteration: 14, epoch: 28, best train: 0.882, best val: 0.6354, lr: 0.09157
iteration: 14, epoch: 29, best train: 0.912, best val: 0.6354, lr: 0.09102
iteration: 14, epoch: 30, best train: 0.912, best val: 0.6354, lr: 0.09045
iteration: 14, epoch: 31, best train: 0.912, best val: 0.644, lr: 0.08987
iteration: 14, epoch: 32, best train: 0.912, best val: 0.644, lr: 0.08927
iteration: 14, epoch: 33, best train: 0.912, best val: 0.644, lr: 0.08865
iteration: 14, epoch: 34, best train: 0.912, best val: 0.644, lr: 0.08802
iteration: 14, epoch: 35, best train: 0.912, best val: 0.644, lr: 0.08738
iteration: 14, epoch: 36, best train: 0.912, best val: 0.644, lr: 0.08672
iteration: 14, epoch: 37, best train: 0.918, best val: 0.644, lr: 0.08604
iteration: 14, epoch: 38, best train: 0.918, best val: 0.6444, lr: 0.08536
iteration: 14, epoch: 39, best train: 0.918, best val: 0.6444, lr: 0.08465
iteration: 14, epoch: 40, best train: 0.923, best val: 0.6444, lr: 0.08394
iteration: 14, epoch: 41, best train: 0.923, best val: 0.6444, lr: 0.08321
iteration: 14, epoch: 42, best train: 0.923, best val: 0.6444, lr: 0.08247
iteration: 14, epoch: 43, best train: 0.923, best val: 0.65, lr: 0.08172
iteration: 14, epoch: 44, best train: 0.923, best val: 0.65, lr: 0.08095
iteration: 14, epoch: 45, best train: 0.923, best val: 0.65, lr: 0.08018
iteration: 14, epoch: 46, best train: 0.923, best val: 0.65, lr: 0.07939
iteration: 14, epoch: 47, best train: 0.923, best val: 0.65, lr: 0.07859
iteration: 14, epoch: 48, best train: 0.923, best val: 0.65, lr: 0.07778
iteration: 14, epoch: 49, best train: 0.926, best val: 0.65, lr: 0.07696
iteration: 14, epoch: 50, best train: 0.931, best val: 0.65, lr: 0.07612
iteration: 14, epoch: 51, best train: 0.931, best val: 0.6535, lr: 0.07528
iteration: 14, epoch: 52, best train: 0.931, best val: 0.657, lr: 0.07443
iteration: 14, epoch: 53, best train: 0.94, best val: 0.657, lr: 0.07357
iteration: 14, epoch: 54, best train: 0.94, best val: 0.657, lr: 0.0727
iteration: 14, epoch: 55, best train: 0.94, best val: 0.657, lr: 0.07182
iteration: 14, epoch: 56, best train: 0.94, best val: 0.657, lr: 0.07093
iteration: 14, epoch: 57, best train: 0.94, best val: 0.657, lr: 0.07004
iteration: 14, epoch: 58, best train: 0.94, best val: 0.657, lr: 0.06913
iteration: 14, epoch: 59, best train: 0.943, best val: 0.6592, lr: 0.06822
iteration: 14, epoch: 60, best train: 0.943, best val: 0.6592, lr: 0.06731
iteration: 14, epoch: 61, best train: 0.943, best val: 0.6592, lr: 0.06638
iteration: 14, epoch: 62, best train: 0.943, best val: 0.6592, lr: 0.06545
iteration: 14, epoch: 63, best train: 0.943, best val: 0.6592, lr: 0.06451
iteration: 14, epoch: 64, best train: 0.943, best val: 0.6592, lr: 0.06357
iteration: 14, epoch: 65, best train: 0.943, best val: 0.6592, lr: 0.06262
iteration: 14, epoch: 66, best train: 0.943, best val: 0.6592, lr: 0.06167
iteration: 14, epoch: 67, best train: 0.943, best val: 0.6592, lr: 0.06072
iteration: 14, epoch: 68, best train: 0.943, best val: 0.6656, lr: 0.05975
iteration: 14, epoch: 69, best train: 0.943, best val: 0.6656, lr: 0.05879
iteration: 14, epoch: 70, best train: 0.943, best val: 0.6656, lr: 0.05782
iteration: 14, epoch: 71, best train: 0.943, best val: 0.6656, lr: 0.05685
iteration: 14, epoch: 72, best train: 0.943, best val: 0.6656, lr: 0.05588
iteration: 14, epoch: 73, best train: 0.943, best val: 0.6656, lr: 0.0549
iteration: 14, epoch: 74, best train: 0.943, best val: 0.6656, lr: 0.05392
iteration: 14, epoch: 75, best train: 0.949, best val: 0.6656, lr: 0.05294
iteration: 14, epoch: 76, best train: 0.949, best val: 0.6656, lr: 0.05196
iteration: 14, epoch: 77, best train: 0.949, best val: 0.6656, lr: 0.05098
iteration: 14, epoch: 78, best train: 0.949, best val: 0.6656, lr: 0.05
iteration: 14, epoch: 79, best train: 0.949, best val: 0.6656, lr: 0.04902
iteration: 14, epoch: 80, best train: 0.949, best val: 0.6656, lr: 0.04804
iteration: 14, epoch: 81, best train: 0.949, best val: 0.6656, lr: 0.04706
iteration: 14, epoch: 82, best train: 0.949, best val: 0.6656, lr: 0.04608
iteration: 14, epoch: 83, best train: 0.952, best val: 0.6656, lr: 0.0451
iteration: 14, epoch: 84, best train: 0.952, best val: 0.6656, lr: 0.04412
iteration: 14, epoch: 85, best train: 0.952, best val: 0.6656, lr: 0.04315
iteration: 14, epoch: 86, best train: 0.952, best val: 0.669, lr: 0.04218
iteration: 14, epoch: 87, best train: 0.952, best val: 0.6751, lr: 0.04121
iteration: 14, epoch: 88, best train: 0.955, best val: 0.6751, lr: 0.04025
iteration: 14, epoch: 89, best train: 0.955, best val: 0.6751, lr: 0.03928
iteration: 14, epoch: 90, best train: 0.955, best val: 0.6751, lr: 0.03833
iteration: 14, epoch: 91, best train: 0.955, best val: 0.6751, lr: 0.03738
iteration: 14, epoch: 92, best train: 0.955, best val: 0.6751, lr: 0.03643
iteration: 14, epoch: 93, best train: 0.955, best val: 0.6751, lr: 0.03549
iteration: 14, epoch: 94, best train: 0.958, best val: 0.6751, lr: 0.03455
iteration: 14, epoch: 95, best train: 0.958, best val: 0.6751, lr: 0.03362
iteration: 14, epoch: 96, best train: 0.958, best val: 0.6751, lr: 0.03269
iteration: 14, epoch: 97, best train: 0.958, best val: 0.6751, lr: 0.03178
iteration: 14, epoch: 98, best train: 0.958, best val: 0.676, lr: 0.03087
iteration: 14, epoch: 99, best train: 0.958, best val: 0.676, lr: 0.02996
iteration: 14, epoch: 100, best train: 0.958, best val: 0.6788, lr: 0.02907
iteration: 14, epoch: 101, best train: 0.965, best val: 0.6802, lr: 0.02818
iteration: 14, epoch: 102, best train: 0.965, best val: 0.6819, lr: 0.0273
iteration: 14, epoch: 103, best train: 0.965, best val: 0.6819, lr: 0.02643
iteration: 14, epoch: 104, best train: 0.965, best val: 0.6819, lr: 0.02557
iteration: 14, epoch: 105, best train: 0.965, best val: 0.6819, lr: 0.02472
iteration: 14, epoch: 106, best train: 0.97, best val: 0.6819, lr: 0.02388
iteration: 14, epoch: 107, best train: 0.97, best val: 0.6819, lr: 0.02304
iteration: 14, epoch: 108, best train: 0.97, best val: 0.6819, lr: 0.02222
iteration: 14, epoch: 109, best train: 0.97, best val: 0.6819, lr: 0.02141
iteration: 14, epoch: 110, best train: 0.97, best val: 0.6846, lr: 0.02061
iteration: 14, epoch: 111, best train: 0.97, best val: 0.6846, lr: 0.01982
iteration: 14, epoch: 112, best train: 0.97, best val: 0.6846, lr: 0.01905
iteration: 14, epoch: 113, best train: 0.97, best val: 0.6846, lr: 0.01828
iteration: 14, epoch: 114, best train: 0.97, best val: 0.6846, lr: 0.01753
iteration: 14, epoch: 115, best train: 0.97, best val: 0.6846, lr: 0.01679
iteration: 14, epoch: 116, best train: 0.97, best val: 0.6846, lr: 0.01606
iteration: 14, epoch: 117, best train: 0.97, best val: 0.6846, lr: 0.01535
iteration: 14, epoch: 118, best train: 0.97, best val: 0.6846, lr: 0.01464
iteration: 14, epoch: 119, best train: 0.97, best val: 0.6846, lr: 0.01396
iteration: 14, epoch: 120, best train: 0.97, best val: 0.6846, lr: 0.01328
iteration: 14, epoch: 121, best train: 0.97, best val: 0.6846, lr: 0.01262
iteration: 14, epoch: 122, best train: 0.97, best val: 0.6854, lr: 0.01198
iteration: 14, epoch: 123, best train: 0.97, best val: 0.6854, lr: 0.01135
iteration: 14, epoch: 124, best train: 0.97, best val: 0.6854, lr: 0.01073
iteration: 14, epoch: 125, best train: 0.97, best val: 0.6854, lr: 0.01013
iteration: 14, epoch: 126, best train: 0.97, best val: 0.6854, lr: 0.00955
iteration: 14, epoch: 127, best train: 0.971, best val: 0.6865, lr: 0.00898
iteration: 14, epoch: 128, best train: 0.971, best val: 0.6865, lr: 0.00843
iteration: 14, epoch: 129, best train: 0.971, best val: 0.6865, lr: 0.00789
iteration: 14, epoch: 130, best train: 0.973, best val: 0.6865, lr: 0.00737
iteration: 14, epoch: 131, best train: 0.973, best val: 0.6867, lr: 0.00686
iteration: 14, epoch: 132, best train: 0.973, best val: 0.6889, lr: 0.00638
iteration: 14, epoch: 133, best train: 0.973, best val: 0.6889, lr: 0.0059
iteration: 14, epoch: 134, best train: 0.973, best val: 0.6889, lr: 0.00545
iteration: 14, epoch: 135, best train: 0.973, best val: 0.6889, lr: 0.00501
iteration: 14, epoch: 136, best train: 0.973, best val: 0.6889, lr: 0.00459
iteration: 14, epoch: 137, best train: 0.973, best val: 0.6889, lr: 0.00419
iteration: 14, epoch: 138, best train: 0.973, best val: 0.6889, lr: 0.00381
iteration: 14, epoch: 139, best train: 0.973, best val: 0.6889, lr: 0.00344
iteration: 14, epoch: 140, best train: 0.973, best val: 0.6889, lr: 0.00309
iteration: 14, epoch: 141, best train: 0.973, best val: 0.689, lr: 0.00276
iteration: 14, epoch: 142, best train: 0.973, best val: 0.6896, lr: 0.00245
iteration: 14, epoch: 143, best train: 0.973, best val: 0.6896, lr: 0.00215
iteration: 14, epoch: 144, best train: 0.975, best val: 0.6896, lr: 0.00188
iteration: 14, epoch: 145, best train: 0.975, best val: 0.6896, lr: 0.00162
iteration: 14, epoch: 146, best train: 0.975, best val: 0.6896, lr: 0.00138
iteration: 14, epoch: 147, best train: 0.975, best val: 0.6896, lr: 0.00116
iteration: 14, epoch: 148, best train: 0.975, best val: 0.6896, lr: 0.00096
iteration: 14, epoch: 149, best train: 0.975, best val: 0.6896, lr: 0.00078
iteration: 14, epoch: 150, best train: 0.975, best val: 0.6896, lr: 0.00062
iteration: 14, epoch: 151, best train: 0.975, best val: 0.6896, lr: 0.00047
iteration: 14, epoch: 152, best train: 0.975, best val: 0.6896, lr: 0.00035
iteration: 14, epoch: 153, best train: 0.975, best val: 0.6896, lr: 0.00024
iteration: 14, epoch: 154, best train: 0.975, best val: 0.6896, lr: 0.00015
iteration: 14, epoch: 155, best train: 0.975, best val: 0.6896, lr: 9e-05
iteration: 14, epoch: 156, best train: 0.975, best val: 0.6896, lr: 4e-05
iteration: 14, epoch: 157, best train: 0.975, best val: 0.6899, lr: 1e-05
iteration: 14, epoch: 158, best train: 0.975, best val: 0.6903, lr: 0.0
iteration: 14, epoch: 159, best train: 0.975, best val: 0.6903, lr: 1e-05
------------------------ Checkpoint 46  ------------------------
pre_conv.0.weight_mask 	|	active =  517 	|	total =  1728 	|	layerwise sparsity =  0.2991898148148148
layer1.0.conv1.weight_mask 	|	active =  1297 	|	total =  36864 	|	layerwise sparsity =  0.03518337673611111
layer1.0.conv2.weight_mask 	|	active =  1297 	|	total =  36864 	|	layerwise sparsity =  0.03518337673611111
layer1.1.conv1.weight_mask 	|	active =  1297 	|	total =  36864 	|	layerwise sparsity =  0.03518337673611111
layer1.1.conv2.weight_mask 	|	active =  1297 	|	total =  36864 	|	layerwise sparsity =  0.03518337673611111
layer2.0.conv1.weight_mask 	|	active =  2594 	|	total =  73728 	|	layerwise sparsity =  0.03518337673611111
layer2.0.conv2.weight_mask 	|	active =  5188 	|	total =  147456 	|	layerwise sparsity =  0.03518337673611111
layer2.0.shortcut.0.weight_mask 	|	active =  2450 	|	total =  8192 	|	layerwise sparsity =  0.299072265625
layer2.1.conv1.weight_mask 	|	active =  5188 	|	total =  147456 	|	layerwise sparsity =  0.03518337673611111
layer2.1.conv2.weight_mask 	|	active =  5188 	|	total =  147456 	|	layerwise sparsity =  0.03518337673611111
layer3.0.conv1.weight_mask 	|	active =  10376 	|	total =  294912 	|	layerwise sparsity =  0.03518337673611111
layer3.0.conv2.weight_mask 	|	active =  11340 	|	total =  589824 	|	layerwise sparsity =  0.01922607421875
layer3.0.shortcut.0.weight_mask 	|	active =  1153 	|	total =  32768 	|	layerwise sparsity =  0.035186767578125
layer3.1.conv1.weight_mask 	|	active =  12047 	|	total =  589824 	|	layerwise sparsity =  0.020424736870659724
layer3.1.conv2.weight_mask 	|	active =  13347 	|	total =  589824 	|	layerwise sparsity =  0.0226287841796875
layer4.0.conv1.weight_mask 	|	active =  34319 	|	total =  1179648 	|	layerwise sparsity =  0.029092576768663194
layer4.0.conv2.weight_mask 	|	active =  92619 	|	total =  2359296 	|	layerwise sparsity =  0.039257049560546875
layer4.0.shortcut.0.weight_mask 	|	active =  4612 	|	total =  131072 	|	layerwise sparsity =  0.035186767578125
layer4.1.conv1.weight_mask 	|	active =  100914 	|	total =  2359296 	|	layerwise sparsity =  0.042772928873697914
layer4.1.conv2.weight_mask 	|	active =  107807 	|	total =  2359296 	|	layerwise sparsity =  0.04569456312391493
------------------------ Checkpoint 47  ------------------------
best_val =  0.6902999999999999
------------------------ Checkpoint 48  ------------------------
pruning state: 15
remaining weight at start of iteration =  3.7175228546193817
iteration: 15, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 15, epoch: 1, best train: 0.507, best val: 0.1, lr: 0.09991
iteration: 15, epoch: 2, best train: 0.507, best val: 0.1, lr: 0.09985
iteration: 15, epoch: 3, best train: 0.507, best val: 0.1063, lr: 0.09976
iteration: 15, epoch: 4, best train: 0.524, best val: 0.2152, lr: 0.09965
iteration: 15, epoch: 5, best train: 0.551, best val: 0.556, lr: 0.09953
iteration: 15, epoch: 6, best train: 0.604, best val: 0.556, lr: 0.09938
iteration: 15, epoch: 7, best train: 0.652, best val: 0.556, lr: 0.09922
iteration: 15, epoch: 8, best train: 0.679, best val: 0.556, lr: 0.09904
iteration: 15, epoch: 9, best train: 0.687, best val: 0.556, lr: 0.09884
iteration: 15, epoch: 10, best train: 0.687, best val: 0.556, lr: 0.09862
iteration: 15, epoch: 11, best train: 0.715, best val: 0.556, lr: 0.09838
iteration: 15, epoch: 12, best train: 0.724, best val: 0.5767, lr: 0.09812
iteration: 15, epoch: 13, best train: 0.768, best val: 0.5767, lr: 0.09785
iteration: 15, epoch: 14, best train: 0.768, best val: 0.5767, lr: 0.09755
iteration: 15, epoch: 15, best train: 0.783, best val: 0.5953, lr: 0.09724
iteration: 15, epoch: 16, best train: 0.783, best val: 0.5953, lr: 0.09691
iteration: 15, epoch: 17, best train: 0.8, best val: 0.6079, lr: 0.09656
iteration: 15, epoch: 18, best train: 0.8, best val: 0.6079, lr: 0.09619
iteration: 15, epoch: 19, best train: 0.8, best val: 0.6079, lr: 0.09581
iteration: 15, epoch: 20, best train: 0.8, best val: 0.6079, lr: 0.09541
iteration: 15, epoch: 21, best train: 0.819, best val: 0.6079, lr: 0.09499
iteration: 15, epoch: 22, best train: 0.835, best val: 0.6096, lr: 0.09455
iteration: 15, epoch: 23, best train: 0.854, best val: 0.6225, lr: 0.0941
iteration: 15, epoch: 24, best train: 0.854, best val: 0.6225, lr: 0.09362
iteration: 15, epoch: 25, best train: 0.858, best val: 0.6225, lr: 0.09314
iteration: 15, epoch: 26, best train: 0.858, best val: 0.6225, lr: 0.09263
iteration: 15, epoch: 27, best train: 0.858, best val: 0.6225, lr: 0.09211
iteration: 15, epoch: 28, best train: 0.871, best val: 0.624, lr: 0.09157
iteration: 15, epoch: 29, best train: 0.871, best val: 0.6359, lr: 0.09102
iteration: 15, epoch: 30, best train: 0.878, best val: 0.6359, lr: 0.09045
iteration: 15, epoch: 31, best train: 0.881, best val: 0.6359, lr: 0.08987
iteration: 15, epoch: 32, best train: 0.884, best val: 0.6359, lr: 0.08927
iteration: 15, epoch: 33, best train: 0.884, best val: 0.6359, lr: 0.08865
iteration: 15, epoch: 34, best train: 0.884, best val: 0.6359, lr: 0.08802
iteration: 15, epoch: 35, best train: 0.884, best val: 0.6359, lr: 0.08738
iteration: 15, epoch: 36, best train: 0.884, best val: 0.6359, lr: 0.08672
iteration: 15, epoch: 37, best train: 0.884, best val: 0.6359, lr: 0.08604
iteration: 15, epoch: 38, best train: 0.889, best val: 0.6359, lr: 0.08536
iteration: 15, epoch: 39, best train: 0.9, best val: 0.6408, lr: 0.08465
iteration: 15, epoch: 40, best train: 0.9, best val: 0.6408, lr: 0.08394
iteration: 15, epoch: 41, best train: 0.901, best val: 0.6408, lr: 0.08321
iteration: 15, epoch: 42, best train: 0.901, best val: 0.6408, lr: 0.08247
iteration: 15, epoch: 43, best train: 0.901, best val: 0.6408, lr: 0.08172
iteration: 15, epoch: 44, best train: 0.901, best val: 0.6408, lr: 0.08095
iteration: 15, epoch: 45, best train: 0.901, best val: 0.6408, lr: 0.08018
iteration: 15, epoch: 46, best train: 0.901, best val: 0.6408, lr: 0.07939
iteration: 15, epoch: 47, best train: 0.905, best val: 0.6491, lr: 0.07859
iteration: 15, epoch: 48, best train: 0.908, best val: 0.6491, lr: 0.07778
iteration: 15, epoch: 49, best train: 0.91, best val: 0.6491, lr: 0.07696
iteration: 15, epoch: 50, best train: 0.912, best val: 0.6491, lr: 0.07612
iteration: 15, epoch: 51, best train: 0.912, best val: 0.6491, lr: 0.07528
iteration: 15, epoch: 52, best train: 0.912, best val: 0.6542, lr: 0.07443
iteration: 15, epoch: 53, best train: 0.927, best val: 0.6542, lr: 0.07357
iteration: 15, epoch: 54, best train: 0.927, best val: 0.6583, lr: 0.0727
iteration: 15, epoch: 55, best train: 0.927, best val: 0.6583, lr: 0.07182
iteration: 15, epoch: 56, best train: 0.928, best val: 0.659, lr: 0.07093
iteration: 15, epoch: 57, best train: 0.928, best val: 0.659, lr: 0.07004
iteration: 15, epoch: 58, best train: 0.931, best val: 0.6743, lr: 0.06913
iteration: 15, epoch: 59, best train: 0.931, best val: 0.6743, lr: 0.06822
iteration: 15, epoch: 60, best train: 0.931, best val: 0.6743, lr: 0.06731
iteration: 15, epoch: 61, best train: 0.931, best val: 0.6743, lr: 0.06638
iteration: 15, epoch: 62, best train: 0.931, best val: 0.6743, lr: 0.06545
iteration: 15, epoch: 63, best train: 0.931, best val: 0.6743, lr: 0.06451
iteration: 15, epoch: 64, best train: 0.938, best val: 0.6743, lr: 0.06357
iteration: 15, epoch: 65, best train: 0.938, best val: 0.6743, lr: 0.06262
iteration: 15, epoch: 66, best train: 0.938, best val: 0.6743, lr: 0.06167
iteration: 15, epoch: 67, best train: 0.938, best val: 0.6743, lr: 0.06072
iteration: 15, epoch: 68, best train: 0.938, best val: 0.6743, lr: 0.05975
iteration: 15, epoch: 69, best train: 0.938, best val: 0.6743, lr: 0.05879
iteration: 15, epoch: 70, best train: 0.938, best val: 0.6743, lr: 0.05782
iteration: 15, epoch: 71, best train: 0.938, best val: 0.6743, lr: 0.05685
iteration: 15, epoch: 72, best train: 0.938, best val: 0.6743, lr: 0.05588
iteration: 15, epoch: 73, best train: 0.938, best val: 0.6743, lr: 0.0549
iteration: 15, epoch: 74, best train: 0.938, best val: 0.6743, lr: 0.05392
iteration: 15, epoch: 75, best train: 0.938, best val: 0.6743, lr: 0.05294
iteration: 15, epoch: 76, best train: 0.94, best val: 0.6743, lr: 0.05196
iteration: 15, epoch: 77, best train: 0.94, best val: 0.6743, lr: 0.05098
iteration: 15, epoch: 78, best train: 0.94, best val: 0.6743, lr: 0.05
iteration: 15, epoch: 79, best train: 0.94, best val: 0.6743, lr: 0.04902
iteration: 15, epoch: 80, best train: 0.94, best val: 0.6743, lr: 0.04804
iteration: 15, epoch: 81, best train: 0.94, best val: 0.6743, lr: 0.04706
iteration: 15, epoch: 82, best train: 0.94, best val: 0.6743, lr: 0.04608
iteration: 15, epoch: 83, best train: 0.94, best val: 0.6743, lr: 0.0451
iteration: 15, epoch: 84, best train: 0.94, best val: 0.6743, lr: 0.04412
iteration: 15, epoch: 85, best train: 0.943, best val: 0.6743, lr: 0.04315
iteration: 15, epoch: 86, best train: 0.944, best val: 0.6743, lr: 0.04218
iteration: 15, epoch: 87, best train: 0.944, best val: 0.6759, lr: 0.04121
iteration: 15, epoch: 88, best train: 0.944, best val: 0.6759, lr: 0.04025
iteration: 15, epoch: 89, best train: 0.948, best val: 0.6759, lr: 0.03928
iteration: 15, epoch: 90, best train: 0.949, best val: 0.6759, lr: 0.03833
iteration: 15, epoch: 91, best train: 0.949, best val: 0.6759, lr: 0.03738
iteration: 15, epoch: 92, best train: 0.95, best val: 0.6759, lr: 0.03643
iteration: 15, epoch: 93, best train: 0.95, best val: 0.678, lr: 0.03549
iteration: 15, epoch: 94, best train: 0.95, best val: 0.678, lr: 0.03455
iteration: 15, epoch: 95, best train: 0.95, best val: 0.678, lr: 0.03362
iteration: 15, epoch: 96, best train: 0.951, best val: 0.678, lr: 0.03269
iteration: 15, epoch: 97, best train: 0.955, best val: 0.678, lr: 0.03178
iteration: 15, epoch: 98, best train: 0.955, best val: 0.678, lr: 0.03087
iteration: 15, epoch: 99, best train: 0.955, best val: 0.678, lr: 0.02996
iteration: 15, epoch: 100, best train: 0.955, best val: 0.6786, lr: 0.02907
iteration: 15, epoch: 101, best train: 0.955, best val: 0.6795, lr: 0.02818
iteration: 15, epoch: 102, best train: 0.955, best val: 0.6795, lr: 0.0273
iteration: 15, epoch: 103, best train: 0.955, best val: 0.6795, lr: 0.02643
iteration: 15, epoch: 104, best train: 0.955, best val: 0.6795, lr: 0.02557
iteration: 15, epoch: 105, best train: 0.955, best val: 0.6795, lr: 0.02472
iteration: 15, epoch: 106, best train: 0.955, best val: 0.6795, lr: 0.02388
iteration: 15, epoch: 107, best train: 0.955, best val: 0.6795, lr: 0.02304
iteration: 15, epoch: 108, best train: 0.955, best val: 0.6795, lr: 0.02222
iteration: 15, epoch: 109, best train: 0.957, best val: 0.6795, lr: 0.02141
iteration: 15, epoch: 110, best train: 0.957, best val: 0.6795, lr: 0.02061
iteration: 15, epoch: 111, best train: 0.962, best val: 0.6795, lr: 0.01982
iteration: 15, epoch: 112, best train: 0.962, best val: 0.6795, lr: 0.01905
iteration: 15, epoch: 113, best train: 0.962, best val: 0.6846, lr: 0.01828
iteration: 15, epoch: 114, best train: 0.962, best val: 0.6868, lr: 0.01753
iteration: 15, epoch: 115, best train: 0.962, best val: 0.6868, lr: 0.01679
iteration: 15, epoch: 116, best train: 0.962, best val: 0.6868, lr: 0.01606
iteration: 15, epoch: 117, best train: 0.962, best val: 0.6868, lr: 0.01535
iteration: 15, epoch: 118, best train: 0.962, best val: 0.6868, lr: 0.01464
iteration: 15, epoch: 119, best train: 0.962, best val: 0.6868, lr: 0.01396
iteration: 15, epoch: 120, best train: 0.962, best val: 0.6868, lr: 0.01328
iteration: 15, epoch: 121, best train: 0.962, best val: 0.6868, lr: 0.01262
iteration: 15, epoch: 122, best train: 0.969, best val: 0.6868, lr: 0.01198
iteration: 15, epoch: 123, best train: 0.969, best val: 0.6868, lr: 0.01135
iteration: 15, epoch: 124, best train: 0.969, best val: 0.6868, lr: 0.01073
iteration: 15, epoch: 125, best train: 0.969, best val: 0.6868, lr: 0.01013
iteration: 15, epoch: 126, best train: 0.969, best val: 0.6868, lr: 0.00955
iteration: 15, epoch: 127, best train: 0.969, best val: 0.6868, lr: 0.00898
iteration: 15, epoch: 128, best train: 0.969, best val: 0.6868, lr: 0.00843
iteration: 15, epoch: 129, best train: 0.969, best val: 0.6868, lr: 0.00789
iteration: 15, epoch: 130, best train: 0.971, best val: 0.6868, lr: 0.00737
iteration: 15, epoch: 131, best train: 0.971, best val: 0.6868, lr: 0.00686
iteration: 15, epoch: 132, best train: 0.973, best val: 0.6868, lr: 0.00638
iteration: 15, epoch: 133, best train: 0.973, best val: 0.6868, lr: 0.0059
iteration: 15, epoch: 134, best train: 0.973, best val: 0.6868, lr: 0.00545
iteration: 15, epoch: 135, best train: 0.973, best val: 0.6868, lr: 0.00501
iteration: 15, epoch: 136, best train: 0.973, best val: 0.6868, lr: 0.00459
iteration: 15, epoch: 137, best train: 0.973, best val: 0.6868, lr: 0.00419
iteration: 15, epoch: 138, best train: 0.973, best val: 0.6868, lr: 0.00381
iteration: 15, epoch: 139, best train: 0.973, best val: 0.6873, lr: 0.00344
iteration: 15, epoch: 140, best train: 0.973, best val: 0.6873, lr: 0.00309
iteration: 15, epoch: 141, best train: 0.973, best val: 0.6873, lr: 0.00276
iteration: 15, epoch: 142, best train: 0.973, best val: 0.6873, lr: 0.00245
iteration: 15, epoch: 143, best train: 0.973, best val: 0.6873, lr: 0.00215
iteration: 15, epoch: 144, best train: 0.973, best val: 0.6873, lr: 0.00188
iteration: 15, epoch: 145, best train: 0.973, best val: 0.6873, lr: 0.00162
iteration: 15, epoch: 146, best train: 0.973, best val: 0.6873, lr: 0.00138
iteration: 15, epoch: 147, best train: 0.973, best val: 0.6873, lr: 0.00116
iteration: 15, epoch: 148, best train: 0.973, best val: 0.6873, lr: 0.00096
iteration: 15, epoch: 149, best train: 0.973, best val: 0.6873, lr: 0.00078
iteration: 15, epoch: 150, best train: 0.973, best val: 0.6873, lr: 0.00062
iteration: 15, epoch: 151, best train: 0.973, best val: 0.6873, lr: 0.00047
iteration: 15, epoch: 152, best train: 0.973, best val: 0.6873, lr: 0.00035
iteration: 15, epoch: 153, best train: 0.973, best val: 0.6873, lr: 0.00024
iteration: 15, epoch: 154, best train: 0.973, best val: 0.6873, lr: 0.00015
iteration: 15, epoch: 155, best train: 0.973, best val: 0.6873, lr: 9e-05
iteration: 15, epoch: 156, best train: 0.973, best val: 0.6873, lr: 4e-05
iteration: 15, epoch: 157, best train: 0.973, best val: 0.6873, lr: 1e-05
iteration: 15, epoch: 158, best train: 0.973, best val: 0.6873, lr: 0.0
iteration: 15, epoch: 159, best train: 0.973, best val: 0.6873, lr: 1e-05
------------------------ Checkpoint 49  ------------------------
pre_conv.0.weight_mask 	|	active =  477 	|	total =  1728 	|	layerwise sparsity =  0.2760416666666667
layer1.0.conv1.weight_mask 	|	active =  1038 	|	total =  36864 	|	layerwise sparsity =  0.028157552083333332
layer1.0.conv2.weight_mask 	|	active =  1038 	|	total =  36864 	|	layerwise sparsity =  0.028157552083333332
layer1.1.conv1.weight_mask 	|	active =  1038 	|	total =  36864 	|	layerwise sparsity =  0.028157552083333332
layer1.1.conv2.weight_mask 	|	active =  1038 	|	total =  36864 	|	layerwise sparsity =  0.028157552083333332
layer2.0.conv1.weight_mask 	|	active =  2075 	|	total =  73728 	|	layerwise sparsity =  0.028143988715277776
layer2.0.conv2.weight_mask 	|	active =  4150 	|	total =  147456 	|	layerwise sparsity =  0.028143988715277776
layer2.0.shortcut.0.weight_mask 	|	active =  2261 	|	total =  8192 	|	layerwise sparsity =  0.2760009765625
layer2.1.conv1.weight_mask 	|	active =  4150 	|	total =  147456 	|	layerwise sparsity =  0.028143988715277776
layer2.1.conv2.weight_mask 	|	active =  4150 	|	total =  147456 	|	layerwise sparsity =  0.028143988715277776
layer3.0.conv1.weight_mask 	|	active =  8301 	|	total =  294912 	|	layerwise sparsity =  0.028147379557291668
layer3.0.conv2.weight_mask 	|	active =  8714 	|	total =  589824 	|	layerwise sparsity =  0.014773898654513888
layer3.0.shortcut.0.weight_mask 	|	active =  922 	|	total =  32768 	|	layerwise sparsity =  0.02813720703125
layer3.1.conv1.weight_mask 	|	active =  9294 	|	total =  589824 	|	layerwise sparsity =  0.015757242838541668
layer3.1.conv2.weight_mask 	|	active =  10368 	|	total =  589824 	|	layerwise sparsity =  0.017578125
layer4.0.conv1.weight_mask 	|	active =  27109 	|	total =  1179648 	|	layerwise sparsity =  0.022980584038628474
layer4.0.conv2.weight_mask 	|	active =  74638 	|	total =  2359296 	|	layerwise sparsity =  0.03163570827907986
layer4.0.shortcut.0.weight_mask 	|	active =  3690 	|	total =  131072 	|	layerwise sparsity =  0.0281524658203125
layer4.1.conv1.weight_mask 	|	active =  81789 	|	total =  2359296 	|	layerwise sparsity =  0.03466669718424479
layer4.1.conv2.weight_mask 	|	active =  87762 	|	total =  2359296 	|	layerwise sparsity =  0.037198384602864586
------------------------ Checkpoint 50  ------------------------
best_val =  0.6873000000000001
------------------------ Checkpoint 51  ------------------------
pruning state: 16
remaining weight at start of iteration =  2.993055436073022
iteration: 16, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 16, epoch: 1, best train: 0.418, best val: 0.1, lr: 0.09991
iteration: 16, epoch: 2, best train: 0.418, best val: 0.1, lr: 0.09985
iteration: 16, epoch: 3, best train: 0.418, best val: 0.1165, lr: 0.09976
iteration: 16, epoch: 4, best train: 0.45, best val: 0.2004, lr: 0.09965
iteration: 16, epoch: 5, best train: 0.484, best val: 0.3373, lr: 0.09953
iteration: 16, epoch: 6, best train: 0.514, best val: 0.3976, lr: 0.09938
iteration: 16, epoch: 7, best train: 0.57, best val: 0.5168, lr: 0.09922
iteration: 16, epoch: 8, best train: 0.602, best val: 0.5168, lr: 0.09904
iteration: 16, epoch: 9, best train: 0.606, best val: 0.5168, lr: 0.09884
iteration: 16, epoch: 10, best train: 0.627, best val: 0.5929, lr: 0.09862
iteration: 16, epoch: 11, best train: 0.631, best val: 0.5929, lr: 0.09838
iteration: 16, epoch: 12, best train: 0.647, best val: 0.5929, lr: 0.09812
iteration: 16, epoch: 13, best train: 0.665, best val: 0.5929, lr: 0.09785
iteration: 16, epoch: 14, best train: 0.703, best val: 0.5929, lr: 0.09755
iteration: 16, epoch: 15, best train: 0.722, best val: 0.6107, lr: 0.09724
iteration: 16, epoch: 16, best train: 0.722, best val: 0.6107, lr: 0.09691
iteration: 16, epoch: 17, best train: 0.741, best val: 0.6107, lr: 0.09656
iteration: 16, epoch: 18, best train: 0.741, best val: 0.6107, lr: 0.09619
iteration: 16, epoch: 19, best train: 0.746, best val: 0.6107, lr: 0.09581
iteration: 16, epoch: 20, best train: 0.755, best val: 0.6107, lr: 0.09541
iteration: 16, epoch: 21, best train: 0.774, best val: 0.6255, lr: 0.09499
iteration: 16, epoch: 22, best train: 0.825, best val: 0.6327, lr: 0.09455
iteration: 16, epoch: 23, best train: 0.825, best val: 0.6327, lr: 0.0941
iteration: 16, epoch: 24, best train: 0.825, best val: 0.6327, lr: 0.09362
iteration: 16, epoch: 25, best train: 0.825, best val: 0.6327, lr: 0.09314
iteration: 16, epoch: 26, best train: 0.825, best val: 0.6327, lr: 0.09263
iteration: 16, epoch: 27, best train: 0.825, best val: 0.6327, lr: 0.09211
iteration: 16, epoch: 28, best train: 0.825, best val: 0.6327, lr: 0.09157
iteration: 16, epoch: 29, best train: 0.835, best val: 0.6327, lr: 0.09102
iteration: 16, epoch: 30, best train: 0.835, best val: 0.6327, lr: 0.09045
iteration: 16, epoch: 31, best train: 0.835, best val: 0.6327, lr: 0.08987
iteration: 16, epoch: 32, best train: 0.835, best val: 0.6327, lr: 0.08927
iteration: 16, epoch: 33, best train: 0.835, best val: 0.6327, lr: 0.08865
iteration: 16, epoch: 34, best train: 0.854, best val: 0.6327, lr: 0.08802
iteration: 16, epoch: 35, best train: 0.863, best val: 0.6327, lr: 0.08738
iteration: 16, epoch: 36, best train: 0.875, best val: 0.6327, lr: 0.08672
iteration: 16, epoch: 37, best train: 0.875, best val: 0.6327, lr: 0.08604
iteration: 16, epoch: 38, best train: 0.875, best val: 0.6327, lr: 0.08536
iteration: 16, epoch: 39, best train: 0.875, best val: 0.6327, lr: 0.08465
iteration: 16, epoch: 40, best train: 0.875, best val: 0.6327, lr: 0.08394
iteration: 16, epoch: 41, best train: 0.875, best val: 0.6327, lr: 0.08321
iteration: 16, epoch: 42, best train: 0.875, best val: 0.6327, lr: 0.08247
iteration: 16, epoch: 43, best train: 0.875, best val: 0.6566, lr: 0.08172
iteration: 16, epoch: 44, best train: 0.881, best val: 0.6566, lr: 0.08095
iteration: 16, epoch: 45, best train: 0.894, best val: 0.6566, lr: 0.08018
iteration: 16, epoch: 46, best train: 0.901, best val: 0.6566, lr: 0.07939
iteration: 16, epoch: 47, best train: 0.901, best val: 0.6566, lr: 0.07859
iteration: 16, epoch: 48, best train: 0.901, best val: 0.6566, lr: 0.07778
iteration: 16, epoch: 49, best train: 0.901, best val: 0.6566, lr: 0.07696
iteration: 16, epoch: 50, best train: 0.901, best val: 0.6566, lr: 0.07612
iteration: 16, epoch: 51, best train: 0.901, best val: 0.6566, lr: 0.07528
iteration: 16, epoch: 52, best train: 0.901, best val: 0.6568, lr: 0.07443
iteration: 16, epoch: 53, best train: 0.901, best val: 0.6568, lr: 0.07357
iteration: 16, epoch: 54, best train: 0.902, best val: 0.6568, lr: 0.0727
iteration: 16, epoch: 55, best train: 0.902, best val: 0.6568, lr: 0.07182
iteration: 16, epoch: 56, best train: 0.902, best val: 0.6568, lr: 0.07093
iteration: 16, epoch: 57, best train: 0.902, best val: 0.6568, lr: 0.07004
iteration: 16, epoch: 58, best train: 0.902, best val: 0.6568, lr: 0.06913
iteration: 16, epoch: 59, best train: 0.904, best val: 0.6575, lr: 0.06822
iteration: 16, epoch: 60, best train: 0.904, best val: 0.6575, lr: 0.06731
iteration: 16, epoch: 61, best train: 0.906, best val: 0.6575, lr: 0.06638
iteration: 16, epoch: 62, best train: 0.913, best val: 0.6575, lr: 0.06545
iteration: 16, epoch: 63, best train: 0.913, best val: 0.6595, lr: 0.06451
iteration: 16, epoch: 64, best train: 0.913, best val: 0.6595, lr: 0.06357
iteration: 16, epoch: 65, best train: 0.917, best val: 0.6624, lr: 0.06262
iteration: 16, epoch: 66, best train: 0.917, best val: 0.6624, lr: 0.06167
iteration: 16, epoch: 67, best train: 0.917, best val: 0.6624, lr: 0.06072
iteration: 16, epoch: 68, best train: 0.932, best val: 0.667, lr: 0.05975
iteration: 16, epoch: 69, best train: 0.932, best val: 0.667, lr: 0.05879
iteration: 16, epoch: 70, best train: 0.932, best val: 0.667, lr: 0.05782
iteration: 16, epoch: 71, best train: 0.932, best val: 0.667, lr: 0.05685
iteration: 16, epoch: 72, best train: 0.932, best val: 0.667, lr: 0.05588
iteration: 16, epoch: 73, best train: 0.932, best val: 0.667, lr: 0.0549
iteration: 16, epoch: 74, best train: 0.932, best val: 0.667, lr: 0.05392
iteration: 16, epoch: 75, best train: 0.932, best val: 0.667, lr: 0.05294
iteration: 16, epoch: 76, best train: 0.932, best val: 0.667, lr: 0.05196
iteration: 16, epoch: 77, best train: 0.932, best val: 0.667, lr: 0.05098
iteration: 16, epoch: 78, best train: 0.932, best val: 0.667, lr: 0.05
iteration: 16, epoch: 79, best train: 0.932, best val: 0.667, lr: 0.04902
iteration: 16, epoch: 80, best train: 0.932, best val: 0.667, lr: 0.04804
iteration: 16, epoch: 81, best train: 0.932, best val: 0.667, lr: 0.04706
iteration: 16, epoch: 82, best train: 0.932, best val: 0.6736, lr: 0.04608
iteration: 16, epoch: 83, best train: 0.932, best val: 0.6743, lr: 0.0451
iteration: 16, epoch: 84, best train: 0.932, best val: 0.6743, lr: 0.04412
iteration: 16, epoch: 85, best train: 0.937, best val: 0.6748, lr: 0.04315
iteration: 16, epoch: 86, best train: 0.937, best val: 0.6748, lr: 0.04218
iteration: 16, epoch: 87, best train: 0.937, best val: 0.6748, lr: 0.04121
iteration: 16, epoch: 88, best train: 0.938, best val: 0.6748, lr: 0.04025
iteration: 16, epoch: 89, best train: 0.938, best val: 0.6748, lr: 0.03928
iteration: 16, epoch: 90, best train: 0.938, best val: 0.6748, lr: 0.03833
iteration: 16, epoch: 91, best train: 0.938, best val: 0.6748, lr: 0.03738
iteration: 16, epoch: 92, best train: 0.95, best val: 0.6748, lr: 0.03643
iteration: 16, epoch: 93, best train: 0.95, best val: 0.6831, lr: 0.03549
iteration: 16, epoch: 94, best train: 0.95, best val: 0.6831, lr: 0.03455
iteration: 16, epoch: 95, best train: 0.95, best val: 0.6831, lr: 0.03362
iteration: 16, epoch: 96, best train: 0.95, best val: 0.6831, lr: 0.03269
iteration: 16, epoch: 97, best train: 0.95, best val: 0.6831, lr: 0.03178
iteration: 16, epoch: 98, best train: 0.95, best val: 0.6831, lr: 0.03087
iteration: 16, epoch: 99, best train: 0.95, best val: 0.6831, lr: 0.02996
iteration: 16, epoch: 100, best train: 0.95, best val: 0.6831, lr: 0.02907
iteration: 16, epoch: 101, best train: 0.95, best val: 0.6831, lr: 0.02818
iteration: 16, epoch: 102, best train: 0.95, best val: 0.6831, lr: 0.0273
iteration: 16, epoch: 103, best train: 0.95, best val: 0.6831, lr: 0.02643
iteration: 16, epoch: 104, best train: 0.952, best val: 0.6831, lr: 0.02557
iteration: 16, epoch: 105, best train: 0.952, best val: 0.6844, lr: 0.02472
iteration: 16, epoch: 106, best train: 0.952, best val: 0.6844, lr: 0.02388
iteration: 16, epoch: 107, best train: 0.952, best val: 0.6845, lr: 0.02304
iteration: 16, epoch: 108, best train: 0.952, best val: 0.6845, lr: 0.02222
iteration: 16, epoch: 109, best train: 0.953, best val: 0.6845, lr: 0.02141
iteration: 16, epoch: 110, best train: 0.959, best val: 0.6845, lr: 0.02061
iteration: 16, epoch: 111, best train: 0.959, best val: 0.6845, lr: 0.01982
iteration: 16, epoch: 112, best train: 0.959, best val: 0.6845, lr: 0.01905
iteration: 16, epoch: 113, best train: 0.959, best val: 0.685, lr: 0.01828
iteration: 16, epoch: 114, best train: 0.959, best val: 0.685, lr: 0.01753
iteration: 16, epoch: 115, best train: 0.959, best val: 0.6871, lr: 0.01679
iteration: 16, epoch: 116, best train: 0.959, best val: 0.6871, lr: 0.01606
iteration: 16, epoch: 117, best train: 0.959, best val: 0.6871, lr: 0.01535
iteration: 16, epoch: 118, best train: 0.959, best val: 0.6871, lr: 0.01464
iteration: 16, epoch: 119, best train: 0.959, best val: 0.6871, lr: 0.01396
iteration: 16, epoch: 120, best train: 0.959, best val: 0.6871, lr: 0.01328
iteration: 16, epoch: 121, best train: 0.959, best val: 0.6871, lr: 0.01262
iteration: 16, epoch: 122, best train: 0.959, best val: 0.6871, lr: 0.01198
iteration: 16, epoch: 123, best train: 0.959, best val: 0.6871, lr: 0.01135
iteration: 16, epoch: 124, best train: 0.959, best val: 0.6871, lr: 0.01073
iteration: 16, epoch: 125, best train: 0.959, best val: 0.6871, lr: 0.01013
iteration: 16, epoch: 126, best train: 0.959, best val: 0.6871, lr: 0.00955
iteration: 16, epoch: 127, best train: 0.959, best val: 0.6871, lr: 0.00898
iteration: 16, epoch: 128, best train: 0.959, best val: 0.6871, lr: 0.00843
iteration: 16, epoch: 129, best train: 0.959, best val: 0.6871, lr: 0.00789
iteration: 16, epoch: 130, best train: 0.959, best val: 0.6871, lr: 0.00737
iteration: 16, epoch: 131, best train: 0.959, best val: 0.6891, lr: 0.00686
iteration: 16, epoch: 132, best train: 0.959, best val: 0.6901, lr: 0.00638
iteration: 16, epoch: 133, best train: 0.96, best val: 0.6903, lr: 0.0059
iteration: 16, epoch: 134, best train: 0.965, best val: 0.6903, lr: 0.00545
iteration: 16, epoch: 135, best train: 0.965, best val: 0.6903, lr: 0.00501
iteration: 16, epoch: 136, best train: 0.965, best val: 0.6904, lr: 0.00459
iteration: 16, epoch: 137, best train: 0.965, best val: 0.6904, lr: 0.00419
iteration: 16, epoch: 138, best train: 0.965, best val: 0.6904, lr: 0.00381
iteration: 16, epoch: 139, best train: 0.965, best val: 0.6904, lr: 0.00344
iteration: 16, epoch: 140, best train: 0.965, best val: 0.6917, lr: 0.00309
iteration: 16, epoch: 141, best train: 0.965, best val: 0.6917, lr: 0.00276
iteration: 16, epoch: 142, best train: 0.965, best val: 0.6917, lr: 0.00245
iteration: 16, epoch: 143, best train: 0.965, best val: 0.6917, lr: 0.00215
iteration: 16, epoch: 144, best train: 0.965, best val: 0.6917, lr: 0.00188
iteration: 16, epoch: 145, best train: 0.965, best val: 0.6917, lr: 0.00162
iteration: 16, epoch: 146, best train: 0.965, best val: 0.6917, lr: 0.00138
iteration: 16, epoch: 147, best train: 0.965, best val: 0.6917, lr: 0.00116
iteration: 16, epoch: 148, best train: 0.965, best val: 0.6917, lr: 0.00096
iteration: 16, epoch: 149, best train: 0.968, best val: 0.6917, lr: 0.00078
iteration: 16, epoch: 150, best train: 0.968, best val: 0.6917, lr: 0.00062
iteration: 16, epoch: 151, best train: 0.968, best val: 0.6917, lr: 0.00047
iteration: 16, epoch: 152, best train: 0.968, best val: 0.6917, lr: 0.00035
iteration: 16, epoch: 153, best train: 0.968, best val: 0.6917, lr: 0.00024
iteration: 16, epoch: 154, best train: 0.968, best val: 0.6917, lr: 0.00015
iteration: 16, epoch: 155, best train: 0.968, best val: 0.6917, lr: 9e-05
iteration: 16, epoch: 156, best train: 0.968, best val: 0.6917, lr: 4e-05
iteration: 16, epoch: 157, best train: 0.968, best val: 0.6917, lr: 1e-05
iteration: 16, epoch: 158, best train: 0.968, best val: 0.6917, lr: 0.0
iteration: 16, epoch: 159, best train: 0.968, best val: 0.6917, lr: 1e-05
------------------------ Checkpoint 52  ------------------------
pre_conv.0.weight_mask 	|	active =  440 	|	total =  1728 	|	layerwise sparsity =  0.25462962962962965
layer1.0.conv1.weight_mask 	|	active =  830 	|	total =  36864 	|	layerwise sparsity =  0.022515190972222224
layer1.0.conv2.weight_mask 	|	active =  830 	|	total =  36864 	|	layerwise sparsity =  0.022515190972222224
layer1.1.conv1.weight_mask 	|	active =  830 	|	total =  36864 	|	layerwise sparsity =  0.022515190972222224
layer1.1.conv2.weight_mask 	|	active =  830 	|	total =  36864 	|	layerwise sparsity =  0.022515190972222224
layer2.0.conv1.weight_mask 	|	active =  1660 	|	total =  73728 	|	layerwise sparsity =  0.022515190972222224
layer2.0.conv2.weight_mask 	|	active =  3320 	|	total =  147456 	|	layerwise sparsity =  0.022515190972222224
layer2.0.shortcut.0.weight_mask 	|	active =  2086 	|	total =  8192 	|	layerwise sparsity =  0.254638671875
layer2.1.conv1.weight_mask 	|	active =  3320 	|	total =  147456 	|	layerwise sparsity =  0.022515190972222224
layer2.1.conv2.weight_mask 	|	active =  3320 	|	total =  147456 	|	layerwise sparsity =  0.022515190972222224
layer3.0.conv1.weight_mask 	|	active =  6641 	|	total =  294912 	|	layerwise sparsity =  0.022518581814236112
layer3.0.conv2.weight_mask 	|	active =  6696 	|	total =  589824 	|	layerwise sparsity =  0.0113525390625
layer3.0.shortcut.0.weight_mask 	|	active =  738 	|	total =  32768 	|	layerwise sparsity =  0.02252197265625
layer3.1.conv1.weight_mask 	|	active =  7170 	|	total =  589824 	|	layerwise sparsity =  0.012156168619791666
layer3.1.conv2.weight_mask 	|	active =  8054 	|	total =  589824 	|	layerwise sparsity =  0.013654920789930556
layer4.0.conv1.weight_mask 	|	active =  21414 	|	total =  1179648 	|	layerwise sparsity =  0.018152872721354168
layer4.0.conv2.weight_mask 	|	active =  60148 	|	total =  2359296 	|	layerwise sparsity =  0.025494045681423612
layer4.0.shortcut.0.weight_mask 	|	active =  2952 	|	total =  131072 	|	layerwise sparsity =  0.02252197265625
layer4.1.conv1.weight_mask 	|	active =  66289 	|	total =  2359296 	|	layerwise sparsity =  0.02809694078233507
layer4.1.conv2.weight_mask 	|	active =  71444 	|	total =  2359296 	|	layerwise sparsity =  0.030281914605034724
------------------------ Checkpoint 53  ------------------------
best_val =  0.6917
------------------------ Checkpoint 54  ------------------------
pruning state: 17
remaining weight at start of iteration =  2.4106676875254474
iteration: 17, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 17, epoch: 1, best train: 0.367, best val: 0.1, lr: 0.09991
iteration: 17, epoch: 2, best train: 0.367, best val: 0.1011, lr: 0.09985
iteration: 17, epoch: 3, best train: 0.367, best val: 0.1012, lr: 0.09976
iteration: 17, epoch: 4, best train: 0.399, best val: 0.228, lr: 0.09965
iteration: 17, epoch: 5, best train: 0.461, best val: 0.4101, lr: 0.09953
iteration: 17, epoch: 6, best train: 0.461, best val: 0.4476, lr: 0.09938
iteration: 17, epoch: 7, best train: 0.526, best val: 0.5198, lr: 0.09922
iteration: 17, epoch: 8, best train: 0.562, best val: 0.5583, lr: 0.09904
iteration: 17, epoch: 9, best train: 0.588, best val: 0.5583, lr: 0.09884
iteration: 17, epoch: 10, best train: 0.588, best val: 0.5583, lr: 0.09862
iteration: 17, epoch: 11, best train: 0.592, best val: 0.5583, lr: 0.09838
iteration: 17, epoch: 12, best train: 0.618, best val: 0.5583, lr: 0.09812
iteration: 17, epoch: 13, best train: 0.662, best val: 0.5583, lr: 0.09785
iteration: 17, epoch: 14, best train: 0.662, best val: 0.5583, lr: 0.09755
iteration: 17, epoch: 15, best train: 0.69, best val: 0.5765, lr: 0.09724
iteration: 17, epoch: 16, best train: 0.69, best val: 0.5765, lr: 0.09691
iteration: 17, epoch: 17, best train: 0.718, best val: 0.612, lr: 0.09656
iteration: 17, epoch: 18, best train: 0.725, best val: 0.612, lr: 0.09619
iteration: 17, epoch: 19, best train: 0.725, best val: 0.612, lr: 0.09581
iteration: 17, epoch: 20, best train: 0.725, best val: 0.612, lr: 0.09541
iteration: 17, epoch: 21, best train: 0.732, best val: 0.612, lr: 0.09499
iteration: 17, epoch: 22, best train: 0.733, best val: 0.612, lr: 0.09455
iteration: 17, epoch: 23, best train: 0.733, best val: 0.612, lr: 0.0941
iteration: 17, epoch: 24, best train: 0.733, best val: 0.612, lr: 0.09362
iteration: 17, epoch: 25, best train: 0.754, best val: 0.612, lr: 0.09314
iteration: 17, epoch: 26, best train: 0.802, best val: 0.6244, lr: 0.09263
iteration: 17, epoch: 27, best train: 0.807, best val: 0.6244, lr: 0.09211
iteration: 17, epoch: 28, best train: 0.807, best val: 0.6244, lr: 0.09157
iteration: 17, epoch: 29, best train: 0.807, best val: 0.6244, lr: 0.09102
iteration: 17, epoch: 30, best train: 0.807, best val: 0.6244, lr: 0.09045
iteration: 17, epoch: 31, best train: 0.807, best val: 0.6244, lr: 0.08987
iteration: 17, epoch: 32, best train: 0.812, best val: 0.6244, lr: 0.08927
iteration: 17, epoch: 33, best train: 0.812, best val: 0.6302, lr: 0.08865
iteration: 17, epoch: 34, best train: 0.812, best val: 0.6302, lr: 0.08802
iteration: 17, epoch: 35, best train: 0.83, best val: 0.6302, lr: 0.08738
iteration: 17, epoch: 36, best train: 0.83, best val: 0.6302, lr: 0.08672
iteration: 17, epoch: 37, best train: 0.83, best val: 0.6302, lr: 0.08604
iteration: 17, epoch: 38, best train: 0.83, best val: 0.6314, lr: 0.08536
iteration: 17, epoch: 39, best train: 0.83, best val: 0.6314, lr: 0.08465
iteration: 17, epoch: 40, best train: 0.84, best val: 0.6314, lr: 0.08394
iteration: 17, epoch: 41, best train: 0.86, best val: 0.6314, lr: 0.08321
iteration: 17, epoch: 42, best train: 0.86, best val: 0.632, lr: 0.08247
iteration: 17, epoch: 43, best train: 0.86, best val: 0.632, lr: 0.08172
iteration: 17, epoch: 44, best train: 0.872, best val: 0.632, lr: 0.08095
iteration: 17, epoch: 45, best train: 0.872, best val: 0.632, lr: 0.08018
iteration: 17, epoch: 46, best train: 0.872, best val: 0.6362, lr: 0.07939
iteration: 17, epoch: 47, best train: 0.872, best val: 0.6421, lr: 0.07859
iteration: 17, epoch: 48, best train: 0.872, best val: 0.6421, lr: 0.07778
iteration: 17, epoch: 49, best train: 0.872, best val: 0.6467, lr: 0.07696
iteration: 17, epoch: 50, best train: 0.874, best val: 0.6467, lr: 0.07612
iteration: 17, epoch: 51, best train: 0.877, best val: 0.657, lr: 0.07528
iteration: 17, epoch: 52, best train: 0.877, best val: 0.657, lr: 0.07443
iteration: 17, epoch: 53, best train: 0.877, best val: 0.657, lr: 0.07357
iteration: 17, epoch: 54, best train: 0.877, best val: 0.657, lr: 0.0727
iteration: 17, epoch: 55, best train: 0.877, best val: 0.657, lr: 0.07182
iteration: 17, epoch: 56, best train: 0.877, best val: 0.657, lr: 0.07093
iteration: 17, epoch: 57, best train: 0.877, best val: 0.657, lr: 0.07004
iteration: 17, epoch: 58, best train: 0.884, best val: 0.657, lr: 0.06913
iteration: 17, epoch: 59, best train: 0.887, best val: 0.657, lr: 0.06822
iteration: 17, epoch: 60, best train: 0.887, best val: 0.657, lr: 0.06731
iteration: 17, epoch: 61, best train: 0.894, best val: 0.657, lr: 0.06638
iteration: 17, epoch: 62, best train: 0.894, best val: 0.657, lr: 0.06545
iteration: 17, epoch: 63, best train: 0.894, best val: 0.657, lr: 0.06451
iteration: 17, epoch: 64, best train: 0.915, best val: 0.6577, lr: 0.06357
iteration: 17, epoch: 65, best train: 0.915, best val: 0.6577, lr: 0.06262
iteration: 17, epoch: 66, best train: 0.915, best val: 0.6577, lr: 0.06167
iteration: 17, epoch: 67, best train: 0.915, best val: 0.6577, lr: 0.06072
iteration: 17, epoch: 68, best train: 0.915, best val: 0.6577, lr: 0.05975
iteration: 17, epoch: 69, best train: 0.915, best val: 0.6644, lr: 0.05879
iteration: 17, epoch: 70, best train: 0.915, best val: 0.6644, lr: 0.05782
iteration: 17, epoch: 71, best train: 0.915, best val: 0.6644, lr: 0.05685
iteration: 17, epoch: 72, best train: 0.915, best val: 0.6644, lr: 0.05588
iteration: 17, epoch: 73, best train: 0.915, best val: 0.6644, lr: 0.0549
iteration: 17, epoch: 74, best train: 0.915, best val: 0.6644, lr: 0.05392
iteration: 17, epoch: 75, best train: 0.915, best val: 0.6644, lr: 0.05294
iteration: 17, epoch: 76, best train: 0.915, best val: 0.6644, lr: 0.05196
iteration: 17, epoch: 77, best train: 0.918, best val: 0.6644, lr: 0.05098
iteration: 17, epoch: 78, best train: 0.918, best val: 0.6644, lr: 0.05
iteration: 17, epoch: 79, best train: 0.918, best val: 0.6664, lr: 0.04902
iteration: 17, epoch: 80, best train: 0.918, best val: 0.6732, lr: 0.04804
iteration: 17, epoch: 81, best train: 0.918, best val: 0.6732, lr: 0.04706
iteration: 17, epoch: 82, best train: 0.919, best val: 0.6732, lr: 0.04608
iteration: 17, epoch: 83, best train: 0.919, best val: 0.6732, lr: 0.0451
iteration: 17, epoch: 84, best train: 0.936, best val: 0.6732, lr: 0.04412
iteration: 17, epoch: 85, best train: 0.936, best val: 0.6732, lr: 0.04315
iteration: 17, epoch: 86, best train: 0.936, best val: 0.6732, lr: 0.04218
iteration: 17, epoch: 87, best train: 0.936, best val: 0.6732, lr: 0.04121
iteration: 17, epoch: 88, best train: 0.936, best val: 0.6732, lr: 0.04025
iteration: 17, epoch: 89, best train: 0.936, best val: 0.6732, lr: 0.03928
iteration: 17, epoch: 90, best train: 0.936, best val: 0.6732, lr: 0.03833
iteration: 17, epoch: 91, best train: 0.936, best val: 0.681, lr: 0.03738
iteration: 17, epoch: 92, best train: 0.936, best val: 0.681, lr: 0.03643
iteration: 17, epoch: 93, best train: 0.936, best val: 0.681, lr: 0.03549
iteration: 17, epoch: 94, best train: 0.936, best val: 0.681, lr: 0.03455
iteration: 17, epoch: 95, best train: 0.936, best val: 0.681, lr: 0.03362
iteration: 17, epoch: 96, best train: 0.94, best val: 0.681, lr: 0.03269
iteration: 17, epoch: 97, best train: 0.94, best val: 0.6818, lr: 0.03178
iteration: 17, epoch: 98, best train: 0.94, best val: 0.6818, lr: 0.03087
iteration: 17, epoch: 99, best train: 0.94, best val: 0.6818, lr: 0.02996
iteration: 17, epoch: 100, best train: 0.94, best val: 0.6818, lr: 0.02907
iteration: 17, epoch: 101, best train: 0.94, best val: 0.6818, lr: 0.02818
iteration: 17, epoch: 102, best train: 0.94, best val: 0.6818, lr: 0.0273
iteration: 17, epoch: 103, best train: 0.94, best val: 0.6818, lr: 0.02643
iteration: 17, epoch: 104, best train: 0.941, best val: 0.6818, lr: 0.02557
iteration: 17, epoch: 105, best train: 0.941, best val: 0.6818, lr: 0.02472
iteration: 17, epoch: 106, best train: 0.948, best val: 0.6818, lr: 0.02388
iteration: 17, epoch: 107, best train: 0.948, best val: 0.6818, lr: 0.02304
iteration: 17, epoch: 108, best train: 0.948, best val: 0.6818, lr: 0.02222
iteration: 17, epoch: 109, best train: 0.948, best val: 0.6818, lr: 0.02141
iteration: 17, epoch: 110, best train: 0.948, best val: 0.6892, lr: 0.02061
iteration: 17, epoch: 111, best train: 0.948, best val: 0.6892, lr: 0.01982
iteration: 17, epoch: 112, best train: 0.948, best val: 0.6892, lr: 0.01905
iteration: 17, epoch: 113, best train: 0.948, best val: 0.6892, lr: 0.01828
iteration: 17, epoch: 114, best train: 0.948, best val: 0.6892, lr: 0.01753
iteration: 17, epoch: 115, best train: 0.948, best val: 0.6892, lr: 0.01679
iteration: 17, epoch: 116, best train: 0.948, best val: 0.6892, lr: 0.01606
iteration: 17, epoch: 117, best train: 0.948, best val: 0.6892, lr: 0.01535
iteration: 17, epoch: 118, best train: 0.954, best val: 0.6892, lr: 0.01464
iteration: 17, epoch: 119, best train: 0.954, best val: 0.6892, lr: 0.01396
iteration: 17, epoch: 120, best train: 0.954, best val: 0.6892, lr: 0.01328
iteration: 17, epoch: 121, best train: 0.954, best val: 0.6892, lr: 0.01262
iteration: 17, epoch: 122, best train: 0.954, best val: 0.6892, lr: 0.01198
iteration: 17, epoch: 123, best train: 0.956, best val: 0.6919, lr: 0.01135
iteration: 17, epoch: 124, best train: 0.956, best val: 0.6919, lr: 0.01073
iteration: 17, epoch: 125, best train: 0.956, best val: 0.6919, lr: 0.01013
iteration: 17, epoch: 126, best train: 0.956, best val: 0.6919, lr: 0.00955
iteration: 17, epoch: 127, best train: 0.956, best val: 0.6919, lr: 0.00898
iteration: 17, epoch: 128, best train: 0.956, best val: 0.6919, lr: 0.00843
iteration: 17, epoch: 129, best train: 0.956, best val: 0.6919, lr: 0.00789
iteration: 17, epoch: 130, best train: 0.956, best val: 0.6919, lr: 0.00737
iteration: 17, epoch: 131, best train: 0.956, best val: 0.6919, lr: 0.00686
iteration: 17, epoch: 132, best train: 0.956, best val: 0.6919, lr: 0.00638
iteration: 17, epoch: 133, best train: 0.956, best val: 0.6919, lr: 0.0059
iteration: 17, epoch: 134, best train: 0.956, best val: 0.6919, lr: 0.00545
iteration: 17, epoch: 135, best train: 0.956, best val: 0.6919, lr: 0.00501
iteration: 17, epoch: 136, best train: 0.956, best val: 0.6919, lr: 0.00459
iteration: 17, epoch: 137, best train: 0.956, best val: 0.6919, lr: 0.00419
iteration: 17, epoch: 138, best train: 0.956, best val: 0.6919, lr: 0.00381
iteration: 17, epoch: 139, best train: 0.956, best val: 0.6919, lr: 0.00344
iteration: 17, epoch: 140, best train: 0.956, best val: 0.6919, lr: 0.00309
iteration: 17, epoch: 141, best train: 0.956, best val: 0.6919, lr: 0.00276
iteration: 17, epoch: 142, best train: 0.956, best val: 0.6919, lr: 0.00245
iteration: 17, epoch: 143, best train: 0.956, best val: 0.6919, lr: 0.00215
iteration: 17, epoch: 144, best train: 0.956, best val: 0.6919, lr: 0.00188
iteration: 17, epoch: 145, best train: 0.956, best val: 0.6919, lr: 0.00162
iteration: 17, epoch: 146, best train: 0.956, best val: 0.6919, lr: 0.00138
iteration: 17, epoch: 147, best train: 0.963, best val: 0.6919, lr: 0.00116
iteration: 17, epoch: 148, best train: 0.963, best val: 0.6919, lr: 0.00096
iteration: 17, epoch: 149, best train: 0.963, best val: 0.6919, lr: 0.00078
iteration: 17, epoch: 150, best train: 0.963, best val: 0.6919, lr: 0.00062
iteration: 17, epoch: 151, best train: 0.963, best val: 0.6919, lr: 0.00047
iteration: 17, epoch: 152, best train: 0.963, best val: 0.6919, lr: 0.00035
iteration: 17, epoch: 153, best train: 0.963, best val: 0.6919, lr: 0.00024
iteration: 17, epoch: 154, best train: 0.963, best val: 0.6919, lr: 0.00015
iteration: 17, epoch: 155, best train: 0.963, best val: 0.6919, lr: 9e-05
iteration: 17, epoch: 156, best train: 0.963, best val: 0.6919, lr: 4e-05
iteration: 17, epoch: 157, best train: 0.963, best val: 0.6919, lr: 1e-05
iteration: 17, epoch: 158, best train: 0.963, best val: 0.6919, lr: 0.0
iteration: 17, epoch: 159, best train: 0.963, best val: 0.6919, lr: 1e-05
------------------------ Checkpoint 55  ------------------------
pre_conv.0.weight_mask 	|	active =  406 	|	total =  1728 	|	layerwise sparsity =  0.2349537037037037
layer1.0.conv1.weight_mask 	|	active =  664 	|	total =  36864 	|	layerwise sparsity =  0.018012152777777776
layer1.0.conv2.weight_mask 	|	active =  664 	|	total =  36864 	|	layerwise sparsity =  0.018012152777777776
layer1.1.conv1.weight_mask 	|	active =  664 	|	total =  36864 	|	layerwise sparsity =  0.018012152777777776
layer1.1.conv2.weight_mask 	|	active =  664 	|	total =  36864 	|	layerwise sparsity =  0.018012152777777776
layer2.0.conv1.weight_mask 	|	active =  1328 	|	total =  73728 	|	layerwise sparsity =  0.018012152777777776
layer2.0.conv2.weight_mask 	|	active =  2656 	|	total =  147456 	|	layerwise sparsity =  0.018012152777777776
layer2.0.shortcut.0.weight_mask 	|	active =  1925 	|	total =  8192 	|	layerwise sparsity =  0.2349853515625
layer2.1.conv1.weight_mask 	|	active =  2656 	|	total =  147456 	|	layerwise sparsity =  0.018012152777777776
layer2.1.conv2.weight_mask 	|	active =  2656 	|	total =  147456 	|	layerwise sparsity =  0.018012152777777776
layer3.0.conv1.weight_mask 	|	active =  5313 	|	total =  294912 	|	layerwise sparsity =  0.018015543619791668
layer3.0.conv2.weight_mask 	|	active =  5145 	|	total =  589824 	|	layerwise sparsity =  0.008722941080729166
layer3.0.shortcut.0.weight_mask 	|	active =  590 	|	total =  32768 	|	layerwise sparsity =  0.01800537109375
layer3.1.conv1.weight_mask 	|	active =  5532 	|	total =  589824 	|	layerwise sparsity =  0.009379069010416666
layer3.1.conv2.weight_mask 	|	active =  6256 	|	total =  589824 	|	layerwise sparsity =  0.010606553819444444
layer4.0.conv1.weight_mask 	|	active =  16915 	|	total =  1179648 	|	layerwise sparsity =  0.014339023166232638
layer4.0.conv2.weight_mask 	|	active =  48471 	|	total =  2359296 	|	layerwise sparsity =  0.020544687906901043
layer4.0.shortcut.0.weight_mask 	|	active =  2362 	|	total =  131072 	|	layerwise sparsity =  0.0180206298828125
layer4.1.conv1.weight_mask 	|	active =  53726 	|	total =  2359296 	|	layerwise sparsity =  0.022772047254774306
layer4.1.conv2.weight_mask 	|	active =  58160 	|	total =  2359296 	|	layerwise sparsity =  0.024651421440972224
------------------------ Checkpoint 56  ------------------------
best_val =  0.6919
------------------------ Checkpoint 57  ------------------------
pruning state: 18
remaining weight at start of iteration =  1.9423648509144686
iteration: 18, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 18, epoch: 1, best train: 0.258, best val: 0.1, lr: 0.09991
iteration: 18, epoch: 2, best train: 0.258, best val: 0.1093, lr: 0.09985
iteration: 18, epoch: 3, best train: 0.258, best val: 0.1093, lr: 0.09976
iteration: 18, epoch: 4, best train: 0.303, best val: 0.221, lr: 0.09965
iteration: 18, epoch: 5, best train: 0.315, best val: 0.2448, lr: 0.09953
iteration: 18, epoch: 6, best train: 0.354, best val: 0.3641, lr: 0.09938
iteration: 18, epoch: 7, best train: 0.374, best val: 0.4109, lr: 0.09922
iteration: 18, epoch: 8, best train: 0.406, best val: 0.4109, lr: 0.09904
iteration: 18, epoch: 9, best train: 0.467, best val: 0.4553, lr: 0.09884
iteration: 18, epoch: 10, best train: 0.467, best val: 0.4553, lr: 0.09862
iteration: 18, epoch: 11, best train: 0.479, best val: 0.4553, lr: 0.09838
iteration: 18, epoch: 12, best train: 0.479, best val: 0.5021, lr: 0.09812
iteration: 18, epoch: 13, best train: 0.489, best val: 0.5021, lr: 0.09785
iteration: 18, epoch: 14, best train: 0.501, best val: 0.5021, lr: 0.09755
iteration: 18, epoch: 15, best train: 0.545, best val: 0.5021, lr: 0.09724
iteration: 18, epoch: 16, best train: 0.545, best val: 0.5044, lr: 0.09691
iteration: 18, epoch: 17, best train: 0.545, best val: 0.5148, lr: 0.09656
iteration: 18, epoch: 18, best train: 0.549, best val: 0.5148, lr: 0.09619
iteration: 18, epoch: 19, best train: 0.598, best val: 0.5187, lr: 0.09581
iteration: 18, epoch: 20, best train: 0.598, best val: 0.5316, lr: 0.09541
iteration: 18, epoch: 21, best train: 0.598, best val: 0.5617, lr: 0.09499
iteration: 18, epoch: 22, best train: 0.636, best val: 0.5617, lr: 0.09455
iteration: 18, epoch: 23, best train: 0.636, best val: 0.5637, lr: 0.0941
iteration: 18, epoch: 24, best train: 0.636, best val: 0.5706, lr: 0.09362
iteration: 18, epoch: 25, best train: 0.636, best val: 0.5706, lr: 0.09314
iteration: 18, epoch: 26, best train: 0.641, best val: 0.5766, lr: 0.09263
iteration: 18, epoch: 27, best train: 0.649, best val: 0.5766, lr: 0.09211
iteration: 18, epoch: 28, best train: 0.649, best val: 0.5766, lr: 0.09157
iteration: 18, epoch: 29, best train: 0.659, best val: 0.5803, lr: 0.09102
iteration: 18, epoch: 30, best train: 0.691, best val: 0.5904, lr: 0.09045
iteration: 18, epoch: 31, best train: 0.691, best val: 0.5904, lr: 0.08987
iteration: 18, epoch: 32, best train: 0.691, best val: 0.5904, lr: 0.08927
iteration: 18, epoch: 33, best train: 0.691, best val: 0.5904, lr: 0.08865
iteration: 18, epoch: 34, best train: 0.691, best val: 0.5904, lr: 0.08802
iteration: 18, epoch: 35, best train: 0.7, best val: 0.5973, lr: 0.08738
iteration: 18, epoch: 36, best train: 0.702, best val: 0.5973, lr: 0.08672
iteration: 18, epoch: 37, best train: 0.724, best val: 0.6039, lr: 0.08604
iteration: 18, epoch: 38, best train: 0.724, best val: 0.6039, lr: 0.08536
iteration: 18, epoch: 39, best train: 0.724, best val: 0.6039, lr: 0.08465
iteration: 18, epoch: 40, best train: 0.724, best val: 0.6063, lr: 0.08394
iteration: 18, epoch: 41, best train: 0.727, best val: 0.6063, lr: 0.08321
iteration: 18, epoch: 42, best train: 0.753, best val: 0.6063, lr: 0.08247
iteration: 18, epoch: 43, best train: 0.753, best val: 0.6157, lr: 0.08172
iteration: 18, epoch: 44, best train: 0.753, best val: 0.6157, lr: 0.08095
iteration: 18, epoch: 45, best train: 0.753, best val: 0.6157, lr: 0.08018
iteration: 18, epoch: 46, best train: 0.753, best val: 0.6157, lr: 0.07939
iteration: 18, epoch: 47, best train: 0.769, best val: 0.6157, lr: 0.07859
iteration: 18, epoch: 48, best train: 0.769, best val: 0.6157, lr: 0.07778
iteration: 18, epoch: 49, best train: 0.769, best val: 0.6157, lr: 0.07696
iteration: 18, epoch: 50, best train: 0.778, best val: 0.6157, lr: 0.07612
iteration: 18, epoch: 51, best train: 0.795, best val: 0.6157, lr: 0.07528
iteration: 18, epoch: 52, best train: 0.795, best val: 0.6157, lr: 0.07443
iteration: 18, epoch: 53, best train: 0.795, best val: 0.6157, lr: 0.07357
iteration: 18, epoch: 54, best train: 0.796, best val: 0.6157, lr: 0.0727
iteration: 18, epoch: 55, best train: 0.797, best val: 0.6276, lr: 0.07182
iteration: 18, epoch: 56, best train: 0.804, best val: 0.6276, lr: 0.07093
iteration: 18, epoch: 57, best train: 0.804, best val: 0.6276, lr: 0.07004
iteration: 18, epoch: 58, best train: 0.828, best val: 0.6276, lr: 0.06913
iteration: 18, epoch: 59, best train: 0.828, best val: 0.6276, lr: 0.06822
iteration: 18, epoch: 60, best train: 0.828, best val: 0.6276, lr: 0.06731
iteration: 18, epoch: 61, best train: 0.828, best val: 0.6276, lr: 0.06638
iteration: 18, epoch: 62, best train: 0.828, best val: 0.6276, lr: 0.06545
iteration: 18, epoch: 63, best train: 0.828, best val: 0.6276, lr: 0.06451
iteration: 18, epoch: 64, best train: 0.828, best val: 0.6276, lr: 0.06357
iteration: 18, epoch: 65, best train: 0.828, best val: 0.6276, lr: 0.06262
iteration: 18, epoch: 66, best train: 0.828, best val: 0.6276, lr: 0.06167
iteration: 18, epoch: 67, best train: 0.828, best val: 0.6276, lr: 0.06072
iteration: 18, epoch: 68, best train: 0.834, best val: 0.6276, lr: 0.05975
iteration: 18, epoch: 69, best train: 0.834, best val: 0.637, lr: 0.05879
iteration: 18, epoch: 70, best train: 0.842, best val: 0.637, lr: 0.05782
iteration: 18, epoch: 71, best train: 0.842, best val: 0.637, lr: 0.05685
iteration: 18, epoch: 72, best train: 0.858, best val: 0.637, lr: 0.05588
iteration: 18, epoch: 73, best train: 0.858, best val: 0.637, lr: 0.0549
iteration: 18, epoch: 74, best train: 0.858, best val: 0.637, lr: 0.05392
iteration: 18, epoch: 75, best train: 0.858, best val: 0.637, lr: 0.05294
iteration: 18, epoch: 76, best train: 0.861, best val: 0.637, lr: 0.05196
iteration: 18, epoch: 77, best train: 0.861, best val: 0.6439, lr: 0.05098
iteration: 18, epoch: 78, best train: 0.861, best val: 0.6439, lr: 0.05
iteration: 18, epoch: 79, best train: 0.861, best val: 0.6439, lr: 0.04902
iteration: 18, epoch: 80, best train: 0.861, best val: 0.6439, lr: 0.04804
iteration: 18, epoch: 81, best train: 0.861, best val: 0.6439, lr: 0.04706
iteration: 18, epoch: 82, best train: 0.861, best val: 0.645, lr: 0.04608
iteration: 18, epoch: 83, best train: 0.861, best val: 0.645, lr: 0.0451
iteration: 18, epoch: 84, best train: 0.865, best val: 0.645, lr: 0.04412
iteration: 18, epoch: 85, best train: 0.865, best val: 0.6586, lr: 0.04315
iteration: 18, epoch: 86, best train: 0.867, best val: 0.6586, lr: 0.04218
iteration: 18, epoch: 87, best train: 0.869, best val: 0.6586, lr: 0.04121
iteration: 18, epoch: 88, best train: 0.869, best val: 0.66, lr: 0.04025
iteration: 18, epoch: 89, best train: 0.882, best val: 0.66, lr: 0.03928
iteration: 18, epoch: 90, best train: 0.889, best val: 0.66, lr: 0.03833
iteration: 18, epoch: 91, best train: 0.889, best val: 0.66, lr: 0.03738
iteration: 18, epoch: 92, best train: 0.891, best val: 0.66, lr: 0.03643
iteration: 18, epoch: 93, best train: 0.891, best val: 0.66, lr: 0.03549
iteration: 18, epoch: 94, best train: 0.891, best val: 0.66, lr: 0.03455
iteration: 18, epoch: 95, best train: 0.894, best val: 0.6659, lr: 0.03362
iteration: 18, epoch: 96, best train: 0.894, best val: 0.6659, lr: 0.03269
iteration: 18, epoch: 97, best train: 0.903, best val: 0.6659, lr: 0.03178
iteration: 18, epoch: 98, best train: 0.906, best val: 0.6659, lr: 0.03087
iteration: 18, epoch: 99, best train: 0.906, best val: 0.6659, lr: 0.02996
iteration: 18, epoch: 100, best train: 0.91, best val: 0.6659, lr: 0.02907
iteration: 18, epoch: 101, best train: 0.91, best val: 0.6664, lr: 0.02818
iteration: 18, epoch: 102, best train: 0.91, best val: 0.6666, lr: 0.0273
iteration: 18, epoch: 103, best train: 0.91, best val: 0.6666, lr: 0.02643
iteration: 18, epoch: 104, best train: 0.91, best val: 0.6666, lr: 0.02557
iteration: 18, epoch: 105, best train: 0.91, best val: 0.6708, lr: 0.02472
iteration: 18, epoch: 106, best train: 0.91, best val: 0.6708, lr: 0.02388
iteration: 18, epoch: 107, best train: 0.91, best val: 0.6708, lr: 0.02304
iteration: 18, epoch: 108, best train: 0.91, best val: 0.6708, lr: 0.02222
iteration: 18, epoch: 109, best train: 0.913, best val: 0.6708, lr: 0.02141
iteration: 18, epoch: 110, best train: 0.913, best val: 0.6708, lr: 0.02061
iteration: 18, epoch: 111, best train: 0.913, best val: 0.6708, lr: 0.01982
iteration: 18, epoch: 112, best train: 0.913, best val: 0.6708, lr: 0.01905
iteration: 18, epoch: 113, best train: 0.913, best val: 0.6708, lr: 0.01828
iteration: 18, epoch: 114, best train: 0.913, best val: 0.6708, lr: 0.01753
iteration: 18, epoch: 115, best train: 0.913, best val: 0.6708, lr: 0.01679
iteration: 18, epoch: 116, best train: 0.913, best val: 0.6708, lr: 0.01606
iteration: 18, epoch: 117, best train: 0.913, best val: 0.6758, lr: 0.01535
iteration: 18, epoch: 118, best train: 0.913, best val: 0.6758, lr: 0.01464
iteration: 18, epoch: 119, best train: 0.928, best val: 0.6758, lr: 0.01396
iteration: 18, epoch: 120, best train: 0.931, best val: 0.6759, lr: 0.01328
iteration: 18, epoch: 121, best train: 0.931, best val: 0.6759, lr: 0.01262
iteration: 18, epoch: 122, best train: 0.931, best val: 0.6759, lr: 0.01198
iteration: 18, epoch: 123, best train: 0.931, best val: 0.6759, lr: 0.01135
iteration: 18, epoch: 124, best train: 0.931, best val: 0.6759, lr: 0.01073
iteration: 18, epoch: 125, best train: 0.931, best val: 0.6759, lr: 0.01013
iteration: 18, epoch: 126, best train: 0.931, best val: 0.6759, lr: 0.00955
iteration: 18, epoch: 127, best train: 0.931, best val: 0.6759, lr: 0.00898
iteration: 18, epoch: 128, best train: 0.931, best val: 0.6759, lr: 0.00843
iteration: 18, epoch: 129, best train: 0.937, best val: 0.6759, lr: 0.00789
iteration: 18, epoch: 130, best train: 0.937, best val: 0.6759, lr: 0.00737
iteration: 18, epoch: 131, best train: 0.937, best val: 0.6764, lr: 0.00686
iteration: 18, epoch: 132, best train: 0.937, best val: 0.6764, lr: 0.00638
iteration: 18, epoch: 133, best train: 0.937, best val: 0.6764, lr: 0.0059
iteration: 18, epoch: 134, best train: 0.937, best val: 0.677, lr: 0.00545
iteration: 18, epoch: 135, best train: 0.937, best val: 0.677, lr: 0.00501
iteration: 18, epoch: 136, best train: 0.937, best val: 0.677, lr: 0.00459
iteration: 18, epoch: 137, best train: 0.937, best val: 0.677, lr: 0.00419
iteration: 18, epoch: 138, best train: 0.937, best val: 0.677, lr: 0.00381
iteration: 18, epoch: 139, best train: 0.937, best val: 0.677, lr: 0.00344
iteration: 18, epoch: 140, best train: 0.937, best val: 0.677, lr: 0.00309
iteration: 18, epoch: 141, best train: 0.937, best val: 0.678, lr: 0.00276
iteration: 18, epoch: 142, best train: 0.937, best val: 0.6785, lr: 0.00245
iteration: 18, epoch: 143, best train: 0.941, best val: 0.6785, lr: 0.00215
iteration: 18, epoch: 144, best train: 0.941, best val: 0.6786, lr: 0.00188
iteration: 18, epoch: 145, best train: 0.941, best val: 0.6786, lr: 0.00162
iteration: 18, epoch: 146, best train: 0.941, best val: 0.6793, lr: 0.00138
iteration: 18, epoch: 147, best train: 0.941, best val: 0.6803, lr: 0.00116
iteration: 18, epoch: 148, best train: 0.941, best val: 0.6803, lr: 0.00096
iteration: 18, epoch: 149, best train: 0.941, best val: 0.6803, lr: 0.00078
iteration: 18, epoch: 150, best train: 0.941, best val: 0.6803, lr: 0.00062
iteration: 18, epoch: 151, best train: 0.941, best val: 0.6803, lr: 0.00047
iteration: 18, epoch: 152, best train: 0.941, best val: 0.6803, lr: 0.00035
iteration: 18, epoch: 153, best train: 0.941, best val: 0.6803, lr: 0.00024
iteration: 18, epoch: 154, best train: 0.941, best val: 0.6803, lr: 0.00015
iteration: 18, epoch: 155, best train: 0.941, best val: 0.6803, lr: 9e-05
iteration: 18, epoch: 156, best train: 0.941, best val: 0.6803, lr: 4e-05
iteration: 18, epoch: 157, best train: 0.941, best val: 0.6803, lr: 1e-05
iteration: 18, epoch: 158, best train: 0.946, best val: 0.6803, lr: 0.0
iteration: 18, epoch: 159, best train: 0.946, best val: 0.6803, lr: 1e-05
------------------------ Checkpoint 58  ------------------------
pre_conv.0.weight_mask 	|	active =  375 	|	total =  1728 	|	layerwise sparsity =  0.2170138888888889
layer1.0.conv1.weight_mask 	|	active =  531 	|	total =  36864 	|	layerwise sparsity =  0.014404296875
layer1.0.conv2.weight_mask 	|	active =  531 	|	total =  36864 	|	layerwise sparsity =  0.014404296875
layer1.1.conv1.weight_mask 	|	active =  531 	|	total =  36864 	|	layerwise sparsity =  0.014404296875
layer1.1.conv2.weight_mask 	|	active =  531 	|	total =  36864 	|	layerwise sparsity =  0.014404296875
layer2.0.conv1.weight_mask 	|	active =  1062 	|	total =  73728 	|	layerwise sparsity =  0.014404296875
layer2.0.conv2.weight_mask 	|	active =  2125 	|	total =  147456 	|	layerwise sparsity =  0.014411078559027778
layer2.0.shortcut.0.weight_mask 	|	active =  1776 	|	total =  8192 	|	layerwise sparsity =  0.216796875
layer2.1.conv1.weight_mask 	|	active =  2125 	|	total =  147456 	|	layerwise sparsity =  0.014411078559027778
layer2.1.conv2.weight_mask 	|	active =  2125 	|	total =  147456 	|	layerwise sparsity =  0.014411078559027778
layer3.0.conv1.weight_mask 	|	active =  4250 	|	total =  294912 	|	layerwise sparsity =  0.014411078559027778
layer3.0.conv2.weight_mask 	|	active =  3953 	|	total =  589824 	|	layerwise sparsity =  0.006701999240451389
layer3.0.shortcut.0.weight_mask 	|	active =  472 	|	total =  32768 	|	layerwise sparsity =  0.014404296875
layer3.1.conv1.weight_mask 	|	active =  4268 	|	total =  589824 	|	layerwise sparsity =  0.007236056857638889
layer3.1.conv2.weight_mask 	|	active =  4860 	|	total =  589824 	|	layerwise sparsity =  0.00823974609375
layer4.0.conv1.weight_mask 	|	active =  13362 	|	total =  1179648 	|	layerwise sparsity =  0.011327107747395834
layer4.0.conv2.weight_mask 	|	active =  39061 	|	total =  2359296 	|	layerwise sparsity =  0.016556209988064237
layer4.0.shortcut.0.weight_mask 	|	active =  1890 	|	total =  131072 	|	layerwise sparsity =  0.0144195556640625
layer4.1.conv1.weight_mask 	|	active =  43544 	|	total =  2359296 	|	layerwise sparsity =  0.018456353081597224
layer4.1.conv2.weight_mask 	|	active =  47346 	|	total =  2359296 	|	layerwise sparsity =  0.020067850748697918
------------------------ Checkpoint 59  ------------------------
best_val =  0.6802999999999997
------------------------ Checkpoint 60  ------------------------
pruning state: 19
remaining weight at start of iteration =  1.5656812225070649
iteration: 19, epoch: 0, best train: 0, best val: 0, lr: 0.09996
iteration: 19, epoch: 1, best train: 0.201, best val: 0.1, lr: 0.09991
iteration: 19, epoch: 2, best train: 0.201, best val: 0.1, lr: 0.09985
iteration: 19, epoch: 3, best train: 0.218, best val: 0.103, lr: 0.09976
iteration: 19, epoch: 4, best train: 0.218, best val: 0.1437, lr: 0.09965
iteration: 19, epoch: 5, best train: 0.262, best val: 0.2954, lr: 0.09953
iteration: 19, epoch: 6, best train: 0.272, best val: 0.2997, lr: 0.09938
iteration: 19, epoch: 7, best train: 0.308, best val: 0.3089, lr: 0.09922
iteration: 19, epoch: 8, best train: 0.308, best val: 0.3387, lr: 0.09904
iteration: 19, epoch: 9, best train: 0.336, best val: 0.3389, lr: 0.09884
iteration: 19, epoch: 10, best train: 0.336, best val: 0.3638, lr: 0.09862
iteration: 19, epoch: 11, best train: 0.342, best val: 0.3859, lr: 0.09838
iteration: 19, epoch: 12, best train: 0.342, best val: 0.3859, lr: 0.09812
iteration: 19, epoch: 13, best train: 0.371, best val: 0.3859, lr: 0.09785
iteration: 19, epoch: 14, best train: 0.371, best val: 0.3859, lr: 0.09755
iteration: 19, epoch: 15, best train: 0.399, best val: 0.3859, lr: 0.09724
iteration: 19, epoch: 16, best train: 0.426, best val: 0.3921, lr: 0.09691
iteration: 19, epoch: 17, best train: 0.426, best val: 0.3921, lr: 0.09656
iteration: 19, epoch: 18, best train: 0.426, best val: 0.4123, lr: 0.09619
iteration: 19, epoch: 19, best train: 0.426, best val: 0.4136, lr: 0.09581
iteration: 19, epoch: 20, best train: 0.426, best val: 0.4197, lr: 0.09541
iteration: 19, epoch: 21, best train: 0.432, best val: 0.4294, lr: 0.09499
iteration: 19, epoch: 22, best train: 0.44, best val: 0.4345, lr: 0.09455
iteration: 19, epoch: 23, best train: 0.476, best val: 0.4345, lr: 0.0941
iteration: 19, epoch: 24, best train: 0.476, best val: 0.4345, lr: 0.09362
iteration: 19, epoch: 25, best train: 0.476, best val: 0.4539, lr: 0.09314
iteration: 19, epoch: 26, best train: 0.479, best val: 0.4626, lr: 0.09263
iteration: 19, epoch: 27, best train: 0.495, best val: 0.4626, lr: 0.09211
iteration: 19, epoch: 28, best train: 0.498, best val: 0.4626, lr: 0.09157
iteration: 19, epoch: 29, best train: 0.499, best val: 0.4786, lr: 0.09102
iteration: 19, epoch: 30, best train: 0.528, best val: 0.4813, lr: 0.09045
iteration: 19, epoch: 31, best train: 0.528, best val: 0.5094, lr: 0.08987
iteration: 19, epoch: 32, best train: 0.528, best val: 0.5094, lr: 0.08927
iteration: 19, epoch: 33, best train: 0.528, best val: 0.5094, lr: 0.08865
iteration: 19, epoch: 34, best train: 0.528, best val: 0.5146, lr: 0.08802
iteration: 19, epoch: 35, best train: 0.565, best val: 0.5146, lr: 0.08738
iteration: 19, epoch: 36, best train: 0.565, best val: 0.5146, lr: 0.08672
iteration: 19, epoch: 37, best train: 0.565, best val: 0.5146, lr: 0.08604
iteration: 19, epoch: 38, best train: 0.565, best val: 0.5146, lr: 0.08536
iteration: 19, epoch: 39, best train: 0.565, best val: 0.5146, lr: 0.08465
iteration: 19, epoch: 40, best train: 0.565, best val: 0.5146, lr: 0.08394
iteration: 19, epoch: 41, best train: 0.612, best val: 0.5146, lr: 0.08321
iteration: 19, epoch: 42, best train: 0.612, best val: 0.5146, lr: 0.08247
iteration: 19, epoch: 43, best train: 0.612, best val: 0.5146, lr: 0.08172
iteration: 19, epoch: 44, best train: 0.612, best val: 0.5146, lr: 0.08095
iteration: 19, epoch: 45, best train: 0.612, best val: 0.5146, lr: 0.08018
iteration: 19, epoch: 46, best train: 0.612, best val: 0.5241, lr: 0.07939
iteration: 19, epoch: 47, best train: 0.612, best val: 0.5241, lr: 0.07859
iteration: 19, epoch: 48, best train: 0.612, best val: 0.5241, lr: 0.07778
iteration: 19, epoch: 49, best train: 0.612, best val: 0.545, lr: 0.07696
iteration: 19, epoch: 50, best train: 0.612, best val: 0.545, lr: 0.07612
iteration: 19, epoch: 51, best train: 0.612, best val: 0.545, lr: 0.07528
iteration: 19, epoch: 52, best train: 0.613, best val: 0.545, lr: 0.07443
iteration: 19, epoch: 53, best train: 0.622, best val: 0.545, lr: 0.07357
iteration: 19, epoch: 54, best train: 0.622, best val: 0.545, lr: 0.0727
iteration: 19, epoch: 55, best train: 0.625, best val: 0.545, lr: 0.07182
iteration: 19, epoch: 56, best train: 0.625, best val: 0.5499, lr: 0.07093
iteration: 19, epoch: 57, best train: 0.625, best val: 0.5515, lr: 0.07004
iteration: 19, epoch: 58, best train: 0.661, best val: 0.5515, lr: 0.06913
iteration: 19, epoch: 59, best train: 0.661, best val: 0.5515, lr: 0.06822
iteration: 19, epoch: 60, best train: 0.662, best val: 0.5515, lr: 0.06731
iteration: 19, epoch: 61, best train: 0.662, best val: 0.5515, lr: 0.06638
iteration: 19, epoch: 62, best train: 0.662, best val: 0.5515, lr: 0.06545
iteration: 19, epoch: 63, best train: 0.67, best val: 0.5515, lr: 0.06451
iteration: 19, epoch: 64, best train: 0.67, best val: 0.5515, lr: 0.06357
iteration: 19, epoch: 65, best train: 0.67, best val: 0.5532, lr: 0.06262
iteration: 19, epoch: 66, best train: 0.67, best val: 0.5532, lr: 0.06167
iteration: 19, epoch: 67, best train: 0.67, best val: 0.5532, lr: 0.06072
iteration: 19, epoch: 68, best train: 0.67, best val: 0.5548, lr: 0.05975
iteration: 19, epoch: 69, best train: 0.67, best val: 0.5548, lr: 0.05879
iteration: 19, epoch: 70, best train: 0.693, best val: 0.5677, lr: 0.05782
iteration: 19, epoch: 71, best train: 0.694, best val: 0.5677, lr: 0.05685
iteration: 19, epoch: 72, best train: 0.694, best val: 0.5677, lr: 0.05588
iteration: 19, epoch: 73, best train: 0.694, best val: 0.5677, lr: 0.0549
iteration: 19, epoch: 74, best train: 0.702, best val: 0.5677, lr: 0.05392
iteration: 19, epoch: 75, best train: 0.71, best val: 0.5677, lr: 0.05294
iteration: 19, epoch: 76, best train: 0.712, best val: 0.5762, lr: 0.05196
iteration: 19, epoch: 77, best train: 0.713, best val: 0.5924, lr: 0.05098
iteration: 19, epoch: 78, best train: 0.726, best val: 0.5924, lr: 0.05
iteration: 19, epoch: 79, best train: 0.726, best val: 0.5924, lr: 0.04902
iteration: 19, epoch: 80, best train: 0.743, best val: 0.5951, lr: 0.04804
iteration: 19, epoch: 81, best train: 0.743, best val: 0.5951, lr: 0.04706
iteration: 19, epoch: 82, best train: 0.743, best val: 0.5951, lr: 0.04608
iteration: 19, epoch: 83, best train: 0.744, best val: 0.5951, lr: 0.0451
iteration: 19, epoch: 84, best train: 0.744, best val: 0.5951, lr: 0.04412
iteration: 19, epoch: 85, best train: 0.744, best val: 0.5951, lr: 0.04315
iteration: 19, epoch: 86, best train: 0.744, best val: 0.5951, lr: 0.04218
iteration: 19, epoch: 87, best train: 0.765, best val: 0.5951, lr: 0.04121
iteration: 19, epoch: 88, best train: 0.765, best val: 0.5951, lr: 0.04025
iteration: 19, epoch: 89, best train: 0.765, best val: 0.5951, lr: 0.03928
iteration: 19, epoch: 90, best train: 0.765, best val: 0.5951, lr: 0.03833
iteration: 19, epoch: 91, best train: 0.768, best val: 0.6032, lr: 0.03738
iteration: 19, epoch: 92, best train: 0.769, best val: 0.6032, lr: 0.03643
iteration: 19, epoch: 93, best train: 0.769, best val: 0.6032, lr: 0.03549
iteration: 19, epoch: 94, best train: 0.774, best val: 0.6032, lr: 0.03455
iteration: 19, epoch: 95, best train: 0.774, best val: 0.6032, lr: 0.03362
iteration: 19, epoch: 96, best train: 0.774, best val: 0.6032, lr: 0.03269
iteration: 19, epoch: 97, best train: 0.782, best val: 0.6032, lr: 0.03178
iteration: 19, epoch: 98, best train: 0.782, best val: 0.6032, lr: 0.03087
iteration: 19, epoch: 99, best train: 0.783, best val: 0.6032, lr: 0.02996
iteration: 19, epoch: 100, best train: 0.783, best val: 0.6032, lr: 0.02907
iteration: 19, epoch: 101, best train: 0.783, best val: 0.6089, lr: 0.02818
iteration: 19, epoch: 102, best train: 0.79, best val: 0.609, lr: 0.0273
iteration: 19, epoch: 103, best train: 0.79, best val: 0.609, lr: 0.02643
iteration: 19, epoch: 104, best train: 0.81, best val: 0.609, lr: 0.02557
iteration: 19, epoch: 105, best train: 0.81, best val: 0.609, lr: 0.02472
iteration: 19, epoch: 106, best train: 0.81, best val: 0.609, lr: 0.02388
iteration: 19, epoch: 107, best train: 0.818, best val: 0.6126, lr: 0.02304
iteration: 19, epoch: 108, best train: 0.818, best val: 0.6126, lr: 0.02222
iteration: 19, epoch: 109, best train: 0.818, best val: 0.6126, lr: 0.02141
iteration: 19, epoch: 110, best train: 0.818, best val: 0.6126, lr: 0.02061
iteration: 19, epoch: 111, best train: 0.818, best val: 0.6126, lr: 0.01982
iteration: 19, epoch: 112, best train: 0.818, best val: 0.6126, lr: 0.01905
iteration: 19, epoch: 113, best train: 0.818, best val: 0.6173, lr: 0.01828
iteration: 19, epoch: 114, best train: 0.818, best val: 0.6173, lr: 0.01753
iteration: 19, epoch: 115, best train: 0.818, best val: 0.6234, lr: 0.01679
iteration: 19, epoch: 116, best train: 0.818, best val: 0.6234, lr: 0.01606
iteration: 19, epoch: 117, best train: 0.82, best val: 0.6234, lr: 0.01535
iteration: 19, epoch: 118, best train: 0.82, best val: 0.6234, lr: 0.01464
iteration: 19, epoch: 119, best train: 0.825, best val: 0.6238, lr: 0.01396
iteration: 19, epoch: 120, best train: 0.825, best val: 0.6238, lr: 0.01328
iteration: 19, epoch: 121, best train: 0.826, best val: 0.6238, lr: 0.01262
iteration: 19, epoch: 122, best train: 0.83, best val: 0.6238, lr: 0.01198
iteration: 19, epoch: 123, best train: 0.837, best val: 0.6283, lr: 0.01135
iteration: 19, epoch: 124, best train: 0.837, best val: 0.6283, lr: 0.01073
iteration: 19, epoch: 125, best train: 0.843, best val: 0.6283, lr: 0.01013
iteration: 19, epoch: 126, best train: 0.843, best val: 0.6283, lr: 0.00955
iteration: 19, epoch: 127, best train: 0.843, best val: 0.6307, lr: 0.00898
iteration: 19, epoch: 128, best train: 0.848, best val: 0.6313, lr: 0.00843
iteration: 19, epoch: 129, best train: 0.858, best val: 0.6313, lr: 0.00789
iteration: 19, epoch: 130, best train: 0.858, best val: 0.6313, lr: 0.00737
iteration: 19, epoch: 131, best train: 0.86, best val: 0.6315, lr: 0.00686
iteration: 19, epoch: 132, best train: 0.86, best val: 0.6315, lr: 0.00638
iteration: 19, epoch: 133, best train: 0.86, best val: 0.6315, lr: 0.0059
iteration: 19, epoch: 134, best train: 0.86, best val: 0.6319, lr: 0.00545
iteration: 19, epoch: 135, best train: 0.86, best val: 0.632, lr: 0.00501
iteration: 19, epoch: 136, best train: 0.86, best val: 0.6341, lr: 0.00459
iteration: 19, epoch: 137, best train: 0.86, best val: 0.6341, lr: 0.00419
iteration: 19, epoch: 138, best train: 0.86, best val: 0.6341, lr: 0.00381
iteration: 19, epoch: 139, best train: 0.86, best val: 0.6341, lr: 0.00344
iteration: 19, epoch: 140, best train: 0.86, best val: 0.6341, lr: 0.00309
iteration: 19, epoch: 141, best train: 0.86, best val: 0.6341, lr: 0.00276
iteration: 19, epoch: 142, best train: 0.86, best val: 0.6341, lr: 0.00245
iteration: 19, epoch: 143, best train: 0.86, best val: 0.6341, lr: 0.00215
iteration: 19, epoch: 144, best train: 0.869, best val: 0.6341, lr: 0.00188
iteration: 19, epoch: 145, best train: 0.869, best val: 0.6341, lr: 0.00162
iteration: 19, epoch: 146, best train: 0.869, best val: 0.6341, lr: 0.00138
iteration: 19, epoch: 147, best train: 0.869, best val: 0.6341, lr: 0.00116
iteration: 19, epoch: 148, best train: 0.869, best val: 0.6341, lr: 0.00096
iteration: 19, epoch: 149, best train: 0.869, best val: 0.6341, lr: 0.00078
iteration: 19, epoch: 150, best train: 0.869, best val: 0.6341, lr: 0.00062
iteration: 19, epoch: 151, best train: 0.869, best val: 0.6341, lr: 0.00047
iteration: 19, epoch: 152, best train: 0.869, best val: 0.6341, lr: 0.00035
iteration: 19, epoch: 153, best train: 0.88, best val: 0.6341, lr: 0.00024
iteration: 19, epoch: 154, best train: 0.88, best val: 0.6341, lr: 0.00015
iteration: 19, epoch: 155, best train: 0.88, best val: 0.6341, lr: 9e-05
iteration: 19, epoch: 156, best train: 0.88, best val: 0.6341, lr: 4e-05
iteration: 19, epoch: 157, best train: 0.88, best val: 0.6341, lr: 1e-05
iteration: 19, epoch: 158, best train: 0.88, best val: 0.6341, lr: 0.0
iteration: 19, epoch: 159, best train: 0.88, best val: 0.6341, lr: 1e-05
------------------------ Checkpoint 61  ------------------------
pre_conv.0.weight_mask 	|	active =  346 	|	total =  1728 	|	layerwise sparsity =  0.20023148148148148
layer1.0.conv1.weight_mask 	|	active =  425 	|	total =  36864 	|	layerwise sparsity =  0.011528862847222222
layer1.0.conv2.weight_mask 	|	active =  425 	|	total =  36864 	|	layerwise sparsity =  0.011528862847222222
layer1.1.conv1.weight_mask 	|	active =  425 	|	total =  36864 	|	layerwise sparsity =  0.011528862847222222
layer1.1.conv2.weight_mask 	|	active =  425 	|	total =  36864 	|	layerwise sparsity =  0.011528862847222222
layer2.0.conv1.weight_mask 	|	active =  850 	|	total =  73728 	|	layerwise sparsity =  0.011528862847222222
layer2.0.conv2.weight_mask 	|	active =  1700 	|	total =  147456 	|	layerwise sparsity =  0.011528862847222222
layer2.0.shortcut.0.weight_mask 	|	active =  1639 	|	total =  8192 	|	layerwise sparsity =  0.2000732421875
layer2.1.conv1.weight_mask 	|	active =  1700 	|	total =  147456 	|	layerwise sparsity =  0.011528862847222222
layer2.1.conv2.weight_mask 	|	active =  1700 	|	total =  147456 	|	layerwise sparsity =  0.011528862847222222
layer3.0.conv1.weight_mask 	|	active =  3400 	|	total =  294912 	|	layerwise sparsity =  0.011528862847222222
layer3.0.conv2.weight_mask 	|	active =  3038 	|	total =  589824 	|	layerwise sparsity =  0.005150689019097222
layer3.0.shortcut.0.weight_mask 	|	active =  378 	|	total =  32768 	|	layerwise sparsity =  0.01153564453125
layer3.1.conv1.weight_mask 	|	active =  3293 	|	total =  589824 	|	layerwise sparsity =  0.005583021375868056
layer3.1.conv2.weight_mask 	|	active =  3775 	|	total =  589824 	|	layerwise sparsity =  0.006400214301215278
layer4.0.conv1.weight_mask 	|	active =  10555 	|	total =  1179648 	|	layerwise sparsity =  0.008947584364149306
layer4.0.conv2.weight_mask 	|	active =  31478 	|	total =  2359296 	|	layerwise sparsity =  0.013342115614149306
layer4.0.shortcut.0.weight_mask 	|	active =  1512 	|	total =  131072 	|	layerwise sparsity =  0.01153564453125
layer4.1.conv1.weight_mask 	|	active =  35292 	|	total =  2359296 	|	layerwise sparsity =  0.014958699544270834
layer4.1.conv2.weight_mask 	|	active =  38543 	|	total =  2359296 	|	layerwise sparsity =  0.01633665296766493
------------------------ Checkpoint 62  ------------------------
remaining weight at end of iteration =  1.2626227324604389
------------------------ Checkpoint 63  ------------------------
best_val =  0.6346999999999999
